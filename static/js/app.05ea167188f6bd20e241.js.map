{"version":3,"sources":["webpack:///static/js/app.05ea167188f6bd20e241.js","webpack:///./src/main.js","webpack:///./src/App.vue","webpack:///src/App.vue","webpack:///./src/App.vue?7ac1","webpack:///./src/router/index.js","webpack:///./src/components/Hello.vue","webpack:///src/components/Hello.vue","webpack:///./src/components/Hello.vue?15e8","webpack:///./src/components/pages/editor/Editor.vue","webpack:///src/components/pages/editor/Editor.vue","webpack:///./src/components/parts/complier/complier.js","webpack:///./src/components/worker/babel.worker.js","webpack:///./src/components/parts/editor/ACE.vue","webpack:///src/components/parts/editor/ACE.vue","webpack:///./src/components/parts/editor/ACE.vue?2a6e","webpack:///./src/components/parts/template/template.js","webpack:///./src/components/worker/requirejs.str.txt","webpack:///./src/components/pages/editor/Editor.vue?c0f3"],"names":["webpackJsonp","module","__webpack_exports__","__webpack_require__","Object","defineProperty","value","__WEBPACK_IMPORTED_MODULE_0_vue__","__WEBPACK_IMPORTED_MODULE_1__App__","__WEBPACK_IMPORTED_MODULE_2__router__","__WEBPACK_IMPORTED_MODULE_3_vue_session__","__WEBPACK_IMPORTED_MODULE_3_vue_session___default","n","use","a","config","productionTip","el","router","template","components","App","injectStyle","ssrContext","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_App_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_096e3a71_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_App_vue__","normalizeComponent","__vue_styles__","Component","exports","name","render","_vm","this","_h","$createElement","_c","_self","attrs","id","to","tag","_v","_m","staticRenderFns","staticClass","target","href","esExports","__WEBPACK_IMPORTED_MODULE_1_vue_router__","__WEBPACK_IMPORTED_MODULE_2__components_Hello__","__WEBPACK_IMPORTED_MODULE_3__components_pages_editor_Editor_vue__","routes","path","component","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Hello_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_79af2da9_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Hello_vue__","data","methods","mounted","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Editor_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_23463c34_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Editor_vue__","__WEBPACK_IMPORTED_MODULE_0_vuedraggable__","__WEBPACK_IMPORTED_MODULE_0_vuedraggable___default","__WEBPACK_IMPORTED_MODULE_1__components_parts_complier_complier_js__","__WEBPACK_IMPORTED_MODULE_2__components_parts_editor_ACE_vue__","__WEBPACK_IMPORTED_MODULE_3__components_parts_template_template_js__","ACE","draggable","iframeLink","iwindow","iframer","complier","projectFiles","ace","height","window","innerHeight","current","file","src","newFilePath","isDirty","clean","blob","compiling","_this","rAF","syncInfoToSubWindow","requestAnimationFrame","addEventListener","e","closeWindow","setInterval","compileFiles","setTimeout","author","onWorker","evt","onCompleteCompile","js","setUp","beforeDestroy","close","checkDisable","getHTML","_ref","html","filter","item","_ref2","Blob","type","URL","revokeObjectURL","createObjectURL","postMessage","duration","location","origin","assign","compile","files","newFile","_ref3","push","setFile","openWindow","_this2","strWindowFeatures","innerWidth","open","onmessage","_ref4","openiFrame","closeiFrame","$refs","updateSlider","number","content","parseFloat","contentWindow","makeEventBus","evts","api","on","func","once","newFn","args","off","idx","indexOf","splice","trigger","i","length","call","__WEBPACK_IMPORTED_MODULE_0__components_worker_babel_worker_js__","__WEBPACK_IMPORTED_MODULE_0__components_worker_babel_worker_js___default","worker","buzz","onMessage","eval","terminate","Worker","p","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_ACE_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_13838409_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_ACE_vue__","then","__WEBPACK_AMD_REQUIRE_ARRAY__","emmet","apply","catch","oe","props","filepath","String","default","theme","width","editor","contentBackup","px","test","getLangFromPath","ans","ext","split","pop","console","log","watch","val","setValue","getSession","setMode","vm","edit","$el","commands","bindKey","win","mac","exec","getValue","$emit","readOnly","selectMore","scrollIntoView","Array","isArray","forEach","command","addCommand","$blockScrolling","Infinity","setOption","setTheme","session","setOptions","tabSize","useSoftTabs","style","scriptSRC","initToken","indexHTML","initTokenReplacer","replace","__WEBPACK_IMPORTED_MODULE_0__worker_requirejs_str_txt___default","getNewProject","__WEBPACK_IMPORTED_MODULE_0__worker_requirejs_str_txt__","ref","directives","rawName","expression","domProps","input","$event","composing","click","disabled","_e","staticStyle","step","options","group","start","drag","end","change","model","callback","$$v","_l","pFile","pfKey","key","font-size","$set","save"],"mappings":"AAAAA,cAAc,IACP,CACA,CACA,CACA,CACA,CACA,CAED,SAAUC,EAAQC,EAAqBC,GAE7C,YACAC,QAAOC,eAAeH,EAAqB,cAAgBI,OAAO,GAC7C,IAAIC,GAAoCJ,EAAoB,GACxDK,EAAqCL,EAAoB,GACzDM,EAAwCN,EAAoB,ICdrFO,EAAAP,EAAA,IAAAQ,EAAAR,EAAAS,EAAAF,EAMAH,GAAA,EAAIM,IAAIF,EAAAG,GAERP,EAAA,EAAIQ,OAAOC,eAAgB,EAG3B,GAAIT,GAAA,GACFU,GAAI,OACJC,OAAAT,EAAA,EACAU,SAAU,SACVC,YAAcC,IAAAb,EAAA,MDqBT,CACA,CAED,SAAUP,EAAQC,EAAqBC,GAE7C,YEzCA,SAAAmB,GAAAC,GACApB,EAAA,IFyCqB,GAAIqB,GAA+GrB,EAAoB,IE1C5JsB,EAAAtB,EAAA,IAGAuB,EAAAvB,EAAA,GAQAwB,EAAAL,EAKAM,EAAAF,EACAF,EAAA,EACAC,EAAA,GATA,EAWAE,EAPA,kBAEA,KAUAzB,GAAA,EAAA0B,EAAA,SFiDM,SAAU3B,EAAQ4B,KAKhB,CAEF,SAAU5B,EAAQC,EAAqBC,GAE7C,YGtEAD,GAAA,GHqFE4B,KGnFF,QHwFM,SAAU7B,EAAQC,EAAqBC,GAE7C,YIzGA,IAAA4B,GAAA,WAA0B,GAAAC,GAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,CAAwB,OAAAE,GAAA,OAAiBE,OAAOC,GAAA,SAAYH,EAAA,UAAAA,EAAA,eAAiCE,OAAOE,GAAA,IAAAC,IAAA,UAAuBT,EAAAU,GAAA,mCAAAV,EAAAU,GAAA,KAAAV,EAAAW,GAAA,aAAAX,EAAAU,GAAA,KAAAN,EAAA,QAAAA,EAAA,sBAC5LQ,GAAA,WAAoC,GAAAZ,GAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,CAAwB,OAAAE,GAAA,QAAAJ,EAAAU,GAAA,iCAAAN,EAAA,KAAkES,YAAA,OAAAP,OAA0BQ,OAAA,SAAAC,KAAA,0FAAiHf,EAAAU,GAAA,oBAChTM,GAAiBjB,SAAAa,kBACjB1C,GAAA,KJ8GM,SAAUD,EAAQC,EAAqBC,GAE7C,YACqB,IAAII,GAAoCJ,EAAoB,GACxD8C,EAA2C9C,EAAoB,IAC/D+C,EAAkD/C,EAAoB,IACtEgD,EAAoEhD,EAAoB,GKlHjHI,GAAA,EAAIM,IAAIoC,EAAA,GAER/C,EAAA,KAAmB+C,GAAA,GACjBG,SAEIC,KAAM,IACNC,UAAWJ,EAAA,IAGXG,KAAM,UACNC,UAAWH,EAAA,OL2HT,CAEF,SAAUlD,EAAQC,EAAqBC,GAE7C,YM9IA,SAAAmB,GAAAC,GACApB,EAAA,IN8IqB,GAAIoD,GAAiHpD,EAAoB,IM/I9JqD,EAAArD,EAAA,IAGAuB,EAAAvB,EAAA,GAQAwB,EAAAL,EAKAM,EAAAF,EACA6B,EAAA,EACAC,EAAA,GATA,EAWA7B,EAPA,KAEA,KAUAzB,GAAA,EAAA0B,EAAA,SNsJM,SAAU3B,EAAQ4B,KAMlB,SAAU5B,EAAQC,EAAqBC,GAE7C,YO/KAD,GAAA,GPyLE4B,KOvLF,QPwLE2B,KAAM,WACJ,UAGFC,WACAC,QAAS,eAKL,SAAU1D,EAAQC,EAAqBC,GAE7C,YQ9MA,IAAA4B,GAAA,WAA0B,GAAAC,GAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,CAAwB,OAAAE,GAAA,OAAiBS,YAAA,UAAoBT,EAAA,eAAoBE,OAAOE,GAAA,aAAgBR,EAAAU,GAAA,yBACzKE,KACAI,GAAiBjB,SAAAa,kBACjB1C,GAAA,KRmNM,SAAUD,EAAQC,EAAqBC,GAE7C,YSxNA,SAAAmB,GAAAC,GACApB,EAAA,ITwNqB,GAAIyD,GAAkHzD,EAAoB,ISzN/J0D,EAAA1D,EAAA,IAGAuB,EAAAvB,EAAA,GAQAwB,EAAAL,EAKAM,EAAAF,EACAkC,EAAA,EACAC,EAAA,GATA,EAWAlC,EAPA,KAEA,KAUAzB,GAAA,EAAA0B,EAAA,STgOM,SAAU3B,EAAQ4B,KAMlB,SAAU5B,EAAQC,EAAqBC,GAE7C,YACqB,IAAI2D,GAA6C3D,EAAoB,IACjE4D,EAAqD5D,EAAoBS,EAAEkD,GAC3EE,EAAuE7D,EAAoB,IAC3F8D,EAAiE9D,EAAoB,IACrF+D,EAAuE/D,EAAoB,GUnOpHD,GAAA,GVwQEkB,YUrQF+C,IAAAF,EAAA,EAEAG,UAAAL,EAAAjD,GVuQE2C,KAAM,WACJ,OACEY,YUtQN,EVuQMC,SUtQN,EVuQMC,SUtQN,EACAC,SAAAR,EAAA,EVuQMS,gBACAC,KACEC,OAAQC,OAAOC,YUrQvB,IVuQMC,SACEC,MACE1B,KUtQV,YVuQU2B,IUpQV,4BACAC,YAAA,mBVuQMC,SUtQN,EVuQMC,MAAO,aAEPC,MUvQN,EVwQMC,WUtQN,IVyQE1B,QAAS,WUvQX,GAAA2B,GAAArD,KV0QQsD,EAAM,QAASA,KACjBD,EUzQNE,sBV0QMZ,OAAOa,sBUzQbF,GV2QIX,QAAOa,sBUxQXF,GV0QIX,OAAOc,iBAAiB,eAAgB,SAAUC,GAChDL,EUzQNM,gBACA,GV0QIC,YAAY,WACNP,EAAMJ,UACRI,EAAMJ,SUzQd,EV0QQI,EUzQRQ,iBAEA,MV0QIC,WAAW,WACTT,EAAMb,aAAerE,OAAO8D,EAA4F,IAAK8B,OUzQnI,WV0QMV,EAAMR,QAAQC,KAAOO,EAAMb,aUzQjC,GV0QMa,EUzQNQ,gBACA,IV0QI,IAAIG,GAAW,SAAkBC,GAC/BZ,EAAMD,WUzQZ,EV2QMC,EAAMa,mBAAoBC,GAAIF,EAAIzC,KUzQxC2C,KV2QInE,MAAKkD,MAAQnB,EAAsF,EAAEqC,OUzQzGJ,cV2QEK,cAAe,WACbrE,KUzQJkD,QV0QQlD,KAAKqC,SACPrC,KAAKqC,QUzQXiC,SV6QE7C,SACE8C,aAAc,SAAsBxB,GAClC,MAAY,iBAARA,GAEe,cAARA,GAMbyB,QAAS,SAAiBC,GU1Q9B,GAAAN,GAAAM,EAAAN,GV6QUO,GAAQ1E,KAAKwC,kBAAoBmC,OAAO,SAAUC,GACpD,MU5QR,iBV4QeA,EAAKxD,OACX,GU5QT2B,GV8QM,OADA2B,GAAOvG,OAAO8D,EAAgG,IAAKyC,KAAMA,EU5Q/HP,QV+QID,kBAAmB,SAA2BW,GU5QlD,GAAAV,GAAAU,EAAAV,EV+QMnE,MAAKmD,KAAO,GAAI2B,OAAM9E,KAAKwE,SAAUL,GAAIA,MAAUY,KU9QzD,cV+QU/E,KAAKmD,MACP6B,IAAIC,gBAAgBjF,KU9Q5BmD,MVgRMnD,KAAKoC,WAAa4C,IAAIE,gBAAgBlF,KU7Q5CmD,MV+QUnD,KAAKsC,UACPtC,KAAKsC,QAAUtC,KU9QvBoC,YViRUpC,KAAKqC,UACPrC,KAAKqC,QAAQ8C,aAAcJ,KAAM,gBAAiBK,SAAU,KAAQzC,OAAO0C,SU9QnFC,QV+QQtF,KAAKqC,QAAQgD,SAASE,OAAOvF,KU9QrCoC,cViRIyB,aAAc,WACZ7D,KAAKoD,WU9QX,EV+QMrB,EAAsF,EAAEyD,SACtFC,MAAOzF,KU7QfwC,gBVgRIkD,QAAS,SAAiBC,GU9Q9B,GAAAvE,GAAAuE,EAAAvE,IViRMpB,MAAKwC,aUhRXoD,KAAAzH,OAAA8D,EAAA,IAAAb,KAEAA,MVgRIyE,QAAS,SAAiB/C,GACxB9C,KAAK6C,QAAQC,KU9QnBA,GViRIgD,WAAY,WU7QhB,GAAAC,GAAA/F,IVgRM,IAAIA,KAAKoC,WU/Qf,CVgRQ,GAAI4D,GU/QZ,kEVgRQA,GAAoB,6GAA+GrD,OAAOsD,WAAa,WAAatD,OU/Q5KC,YVgRQ5C,KAAKqC,QAAUM,OAAOuD,KAAKlG,KAAKoC,WAAY,QU/QpD4D,GVgRQhG,KAAKqC,QAAQ8D,UAAY,SAAUC,GAGf,UUlR5BA,EAAA5E,KVkRmBuD,MACPgB,EUjRZpC,iBVsRI0C,WAAY,WACNrG,KAAKoC,aACPpC,KAAKsC,QAAUtC,KUjRvBoC,aVoRIkE,YAAa,WACXtG,KAAKsC,SUjRX,GVmRIqB,YAAa,WACP3D,KAAKqC,UACPrC,KAAKqC,QUjRbiC,QVkRQtE,KAAKqC,SUjRb,IVoRIkB,oBAAqB,WACfvD,KAAKuG,MAAM,gBACbvG,KAAKwG,aAAaxG,KAAKuG,MAAM,eUjRrClI,QVoRImI,aAAc,SAAsBC,GAClC,GAAIC,IAAY3B,KAAM,YAAavD,MAAQnD,MAAOsI,WUjRxDF,IVkRUzG,MAAKqC,SACPrC,KAAKqC,QAAQ8C,YAAYuB,EAAS/D,OAAO0C,SUjRjDC,QVmRUtF,KAAKuG,MAAe,SACtBvG,KAAKuG,MAAe,QAAEK,cAAczB,YAAYuB,EAAS/D,OAAO0C,SUjRxEC,YVwRQ,CACA,CAEF,SAAUtH,OAAQC,oBAAqBC,qBAE7C,YWndA,SAAS2I,gBACP,GAAIC,MACAC,IA6BJ,OA5BAA,GAAIC,GAAK,SAACnH,EAAMoH,GACTH,EAAKjH,KACRiH,EAAKjH,OAEPiH,EAAKjH,GAAM+F,KAAKqB,IAElBF,EAAIG,KAAO,SAACrH,EAAMoH,GAChB,GAAIE,GAAQ,QAARA,GAASC,GACXH,EAAKG,GACLL,EAAIM,IAAIF,GAEVJ,GAAIC,GAAGnH,EAAMsH,IAEfJ,EAAIM,IAAM,SAACxH,EAAMoH,GACVH,EAAKjH,KACRiH,EAAKjH,MAEP,IAAIyH,GAAMR,EAAKjH,GAAM0H,QAAQN,EAC7BH,GAAKjH,GAAM2H,OAAOF,EAAK,IAEzBP,EAAIU,QAAU,SAAC5H,EAAMuH,GACdN,EAAKjH,KACRiH,EAAKjH,MAEP,KAAK,GAAI6H,GAAI,EAAGA,EAAIZ,EAAKjH,GAAM8H,OAAQD,IACrCZ,EAAKjH,GAAM6H,GAAGE,QAASR,IAGpBL,EXqbY,GAAIc,kEAAmE3J,oBAAoB,IACvF4J,yEAA2E5J,oBAAoBS,EAAEkJ,kEWtdtHE,OAAS,GAAID,0EAAAjJ,EAmCbmJ,KAAOnB,eACPoB,UAAY,QAAZA,WAAahE,KACf+D,KAAKP,QAAQ,SAAUxD,KAEvBiE,KAAKjE,IAAIzC,KAAKA,MAEhBuG,QAAO5B,UAAY8B,UAGnBrE,YAAY,WACNmE,SACFA,OAAOI,YACPJ,OAAS,GAAID,0EAAAjJ,EACbkJ,OAAO5B,UAAY8B,YAEpB,KAEHhK,oBAAA,GACEuH,QADa,SAAAf,GACO,GAATgB,GAAShB,EAATgB,KACTsC,QAAO5C,aAAcM,WAEvBrB,MAJa,SAAAS,GAIQ,GAAZb,GAAYa,EAAZb,QAEP,OADAgE,MAAKhB,GAAG,SAAUhD,GACX,WACLgE,KAAKX,IAAI,SAAUrD,OXmenB,SAAUhG,EAAQ4B,EAAS1B,GY/hBjCF,EAAA4B,QAAA,WACA,UAAAwI,QAAAlK,EAAAmK,EAAA,oCZsiBM,SAAUrK,EAAQC,EAAqBC,GAE7C,YaziBA,SAAAmB,GAAAC,GACApB,EAAA,IbyiBqB,GAAIoK,GAA+GpK,EAAoB,Ia1iB5JqK,EAAArK,EAAA,IAGAuB,EAAAvB,EAAA,GAQAwB,EAAAL,EAKAM,EAAAF,EACA6I,EAAA,EACAC,EAAA,GATA,EAWA7I,EAPA,KAEA,KAUAzB,GAAA,EAAA0B,EAAA,SbijBM,SAAU3B,EAAQ4B,KAMlB,SAAU5B,EAAQC,EAAqBC,GAE7C,Yc5kBA,IAAAuE,GAAAvE,EAAA,GAEAA,GAAAwF,EAAA,GAAA8E,KAAA,cAAAC,IAAAvK,EAAA,eAAAsD,GdolBEmB,OAAO+F,MAAQlH,EcllBjBkH,QdmlBEC,MAAM,KAAMF,KAAmCG,MAAM1K,EAAoB2K,IcjlB3E5K,EAAA,GdolBEiB,ScllBF,GdmlBE4J,OACEzK,SACA0K,UACEhE,KcllBNiE,OdmlBMC,QcjlBN,UdmlBIC,McllBJF,OdmlBItG,QcllBJ,EdmlBIyG,OcjlBJ,GdmlBE3H,KAAM,WACJ,OACE4H,OcllBN,KdmlBMC,ccjlBN,KdqlBE5H,SACE6H,GAAI,SAAY3K,GACd,MAAI,QAAQ4K,KAAK5K,GACRA,EcnlBf,KAEAA,GdqlBI6K,gBAAiB,SAAyBpI,GACxC,GAAIqI,GcnlBV,MdolBM,KACE,GAAIC,GAAMtI,EAAKuI,MAAM,KcllB7BC,KdolBoB,QAARF,IACFD,EcnlBV,cdqlBoB,QAARC,IACFD,EcnlBV,QdqlBoB,SAARC,IACFD,EcnlBV,QdqlBoB,SAARC,IACFD,EcnlBV,QdqlBoB,SAARC,IACFD,EcnlBV,QdqlBQ,MAAO/F,GACPmG,QAAQC,IcnlBhBpG,GdslBM,McnlBN+F,KdslBEM,OACE1L,MAAO,SAAe2L,GAChBhK,KAAKqJ,gBAAkBW,GACzBhK,KAAKoJ,OAAOa,SAASD,EcnlB7B,IdslBIjB,SAAU,WACR/I,KAAKoJ,OAAOc,aAAaC,QAAQ,YAAcnK,KAAKwJ,gBAAgBxJ,KcnlB1E+I,adslBErH,QAAS,WcnlBX,GAAA2B,GAAArD,KdslBQoK,EcrlBRpK,KdslBQkJ,EAAQlJ,KAAKkJ,OcplBrB,QdslBIhL,GcplBJ,GdslBI,IAAIkL,GAASgB,EAAGhB,OAAS3G,EAAI4H,KAAKrK,KcplBtCsK,KdslBQC,IACF1K,KcplBN,OdqlBM2K,SAAWC,IAAK,SAAUC,IcplBhC,adqlBMC,KAAM,SAAcvB,GAClB,GAAIY,GAAMZ,EcplBlBwB,UdqlBQvH,GAAMwH,MAAM,OcplBpBb,IdslBMc,UAAU,IAEVjL,KcnlBN,cdolBM2K,SAAWC,IAAK,SAAUC,IcnlBhC,adolBMC,KAAM,SAAcvB,GAClBA,EAAO2B,WcnlBf,IdslBMC,ecnlBN,SdolBMF,UAAU,GAERG,OAAMC,QAAQX,IAChBA,EAASY,QAAQ,SAAUC,GACzBhB,EAAGhB,OAAOmB,SAASc,WcllB3BD,KdwlBIlN,EcllBJ,IdmlBIA,EcllBJ,IdmlBIA,EcllBJ,IdolBIA,EcllBJ,IdmlBIA,EcjlBJ,IdmlBIkL,EAAOkC,gBcllBXC,IdmlBInC,EAAOoC,UAAU,ecllBrB,GdmlBIpC,EAAOc,aAAaC,QAAQ,YAAcnK,KAAKwJ,gBAAgBxJ,KcllBnE+I,WdmlBIK,EAAOqC,SAAS,acllBpBvC,GdmlBIE,EAAOa,SAASjK,KAAK3B,McllBzB,GdmlBI+K,EAAOsC,QAAQC,YAAaC,QAAS,EAAGC,acjlB5C,IdmlBIzC,EAAOpC,GAAG,SAAU,WAClB,GAAIN,GAAU0C,EcllBpBwB,UdmlBMR,GAAGS,MAAM,QcllBfnE,GdmlBM0D,EAAGf,ccllBT3C,OdwlBQ,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CAEF,SAAU1I,EAAQC,EAAqBC,GAE7C,YeruBA,IAAA4B,GAAA,WAA0B,GAAAC,GAAAC,KAAaC,EAAAF,EAAAG,cAAkD,QAAxBH,EAAAK,MAAAD,IAAAF,GAAwB,OAAiB6L,OAAQpJ,OAAA3C,EAAA2C,OAAA3C,EAAAuJ,GAAAvJ,EAAA2C,QAAA,OAAAyG,MAAApJ,EAAAoJ,MAAApJ,EAAAuJ,GAAAvJ,EAAAoJ,OAAA,WAClHxI,KACAI,GAAiBjB,SAAAa,kBACjB1C,GAAA,Kf0uBM,SAAUD,EAAQC,EAAqBC,GAE7C,YgB7uBO,SAAS6N,GAAWhJ,GACzB,MAAO,gBAAgBA,EAAhB,eAGF,QAASiJ,KACd,mDAMK,QAASC,GAATxH,GACL,0QADqCA,EAAVV,OAC3B,sHAYEgI,EAAU,+DAZZ,OAaEA,EAAU,6EAbZ,OAcEA,EAAU,uEAdZ,giBAkCIC,IAlCJ,uBAuCK,QAAStG,GAATb,GACL,OACEzD,KAF+ByD,EAARzD,MAET,eACd2B,QAIG,QAASmJ,GAATvG,GAA0C,GAAZjB,GAAYiB,EAAZjB,KAAMP,EAAMwB,EAANxB,EACzC,OAAOO,GAAKyH,QAAQH,IAAa,oCAAsC7H,EAAtC,qBAAgFiI,EAAAvN,EAAhF,8iCA4C5B,QAASwN,GAATjG,GACL,QAEIhF,KAAM,eACN2B,IAAKkJ,GAAYlI,OAJoBqC,EAAVrC,WAO3B3C,KAAM,YACN2B,6CAKA3B,KAAM,eACN2B,+LAcA3B,KAAM,qBACN2B,6qHAiHA3B,KAAM,qBACN2B,8ZA0BA3B,KAAM,0BACN2B,6sOAqQA3B,KAAM,qCACN2B,mdA2BA3B,KAAM,qCACN2B,0hBA4BA3B,KAAM,wCACN2B,mzBAuCA3B,KAAM,wCACN2B,29EhB0H2B9E,EAAuB,EAAIyH,EAC3BzH,EAAuB,EAAIiO,EAC3BjO,EAAuB,EAAIoO,CACvC,IAAIC,GAA0DpO,EAAoB,IAC9EkO,EAAkElO,EAAoBS,EAAE2N,IA0E3G,SAAUtO,EAAQ4B,GiBl0BxB5B,EAAA4B,QAAA,uttFjBw0BM,SAAU5B,EAAQC,EAAqBC,GAE7C,YkB10BA,IAAA4B,GAAA,WAA0B,GAAAC,GAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,CAAwB,OAAAE,GAAA,OAAiBoM,IAAA,cAAgBxM,EAAAyC,aAAAmF,OAAA,EAAAxH,EAAA,OAAAA,EAAA,SAAsDqM,aAAa3M,KAAA,QAAA4M,QAAA,UAAApO,MAAA0B,EAAA,YAAA2M,WAAA,gBAAgFC,UAAYtO,MAAA0B,EAAA,aAA0BiH,IAAK4F,MAAA,SAAAC,GAAyBA,EAAAhM,OAAAiM,YAAsC/M,EAAAiD,YAAA6J,EAAAhM,OAAAxC,WAAsC0B,EAAAU,GAAA,KAAAN,EAAA,UAA2B6G,IAAI+F,MAAA,WAAqBhN,EAAA2F,SAActE,KAAArB,EAAAiD,kBAA6BjD,EAAAU,GAAA,cAAAV,EAAAU,GAAA,KAAAN,EAAA,UAAgDE,OAAO2M,SAAAjN,EAAAqD,WAAyB4D,IAAK+F,MAAA,WAAqBhN,EAAA8D,mBAAuB9D,EAAAU,GAAA,mBAAAV,EAAAU,GAAA,KAAAV,EAAAsC,SAAAtC,EAAAqD,UAAoIrD,EAAAkN,KAApI9M,EAAA,UAAsF6G,IAAI+F,MAAA,WAAqBhN,EAAA+F,iBAAqB/F,EAAAU,GAAA,gBAAAV,EAAAU,GAAA,KAAAV,EAAA,QAAAI,EAAA,UAAyE6G,IAAI+F,MAAA,WAAqBhN,EAAA4D,kBAAsB5D,EAAAU,GAAA,iBAAAV,EAAAkN,KAAAlN,EAAAU,GAAA,KAAAV,EAAAuC,SAAAvC,EAAAqD,UAA2IrD,EAAAkN,KAA3I9M,EAAA,UAA6F6G,IAAI+F,MAAA,WAAqBhN,EAAAsG,iBAAqBtG,EAAAU,GAAA,gBAAAV,EAAAU,GAAA,KAAAV,EAAA,QAAAI,EAAA,UAAyE6G,IAAI+F,MAAA,WAAqBhN,EAAAuG,kBAAsBvG,EAAAU,GAAA,iBAAAV,EAAAkN,KAAAlN,EAAAU,GAAA,KAAAN,EAAA,QAA0DqM,aAAa3M,KAAA,OAAA4M,QAAA,SAAApO,MAAA0B,EAAA,UAAA2M,WAAA,gBAA4E3M,EAAAU,GAAA,eAAAV,EAAAU,GAAA,KAAAN,EAAA,OAAAA,EAAA,SAA0DoM,IAAA,cAAAW,aAA+B/D,MAAA,SAAgB9I,OAAQ0E,KAAA,QAAAoI,KAAA,OAA4BnG,IAAK4F,MAAA,SAAA3I,GAAwBlE,EAAAyG,aAAAvC,EAAApD,OAAAxC,aAAuC0B,EAAAU,GAAA,KAAAN,EAAA,aAAgCE,OAAO+M,SAAWC,MAAA,WAAgBrG,IAAKsG,MAAA,SAAAT,GAAyB9M,EAAAwN,MAAA,GAAgBC,IAAA,SAAAX,GAAwB9M,EAAAwN,MAAA,GAAiBE,OAAA,WAAuB1N,EAAA8D,iBAAsB6J,OAAQrP,MAAA0B,EAAA,aAAA4N,SAAA,SAAAC,GAAkD7N,EAAAyC,aAAAoL,GAAqBlB,WAAA,iBAA4B3M,EAAA8N,GAAA9N,EAAA,sBAAA+N,EAAAC,GAAiD,MAAA5N,GAAA,OAAiB6N,IAAAD,IAAU5N,EAAA,SAAcqM,aAAa3M,KAAA,QAAA4M,QAAA,UAAApO,MAAAyP,EAAA,KAAApB,WAAA,eAA0EQ,aAAee,YAAA,OAAA9E,MAAA,SAAmC9I,OAAQ2M,SAAAjN,EAAAwE,aAAAuJ,EAAA1M,OAAwCuL,UAAWtO,MAAAyP,EAAA,MAAqB9G,IAAK4F,MAAA,SAAAC,GAAyBA,EAAAhM,OAAAiM,WAAsC/M,EAAAmO,KAAAJ,EAAA,OAAAjB,EAAAhM,OAAAxC,WAA+C0B,EAAAU,GAAA,KAAAN,EAAA,UAA2B6G,IAAI+F,MAAA,SAAAF,GAAyB9M,EAAA8F,QAAAiI,OAAqB/N,EAAAU,GAAA,eAAqBV,EAAAU,GAAA,KAAAV,EAAA,QAAAI,EAAA,UAA0CoM,IAAA,UAAAlM,OAAqB0C,IAAAhD,EAAAuC,WAAmBvC,EAAAkN,KAAAlN,EAAAU,GAAA,KAAAN,EAAA,OAAiCE,OAAO0I,SAAAhJ,EAAA8C,QAAAC,KAAA1B,KAAA8H,MAAA,SAAAC,MAAA,OAAAzG,OAAA3C,EAAA0C,IAAAC,QAAyFsE,IAAKmH,KAAA,WAAoBpO,EAAA8D,gBAAqB+I,MAAA,SAAAvO,GAA2B0B,EAAAkD,SAAA,IAAuByK,OAAQrP,MAAA0B,EAAA8C,QAAAC,KAAA,IAAA6K,SAAA,SAAAC,GAAsD7N,EAAAmO,KAAAnO,EAAA8C,QAAAC,KAAA,MAAA8K,IAAuClB,WAAA,uBAAgC,GAAAvM,EAAA,OAAAJ,EAAAU,GAAA,gCACjtFE,KACAI,GAAiBjB,SAAAa,kBACjB1C,GAAA,OlB80BG","file":"static/js/app.05ea167188f6bd20e241.js","sourcesContent":["webpackJsonp([2],[\n/* 0 */,\n/* 1 */,\n/* 2 */,\n/* 3 */,\n/* 4 */,\n/* 5 */,\n/* 6 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__App__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__router__ = __webpack_require__(14);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_vue_session__ = __webpack_require__(43);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_vue_session___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_vue_session__);\n// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */].use(__WEBPACK_IMPORTED_MODULE_3_vue_session___default.a);\n\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */].config.productionTip = false;\n\n/* eslint-disable no-new */\nnew __WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */]({\n  el: '#app',\n  router: __WEBPACK_IMPORTED_MODULE_2__router__[\"a\" /* default */],\n  template: '<App/>',\n  components: { App: __WEBPACK_IMPORTED_MODULE_1__App__[\"a\" /* default */] }\n});\n\n/***/ }),\n/* 7 */,\n/* 8 */,\n/* 9 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_App_vue__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_096e3a71_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_App_vue__ = __webpack_require__(13);\nfunction injectStyle (ssrContext) {\n  __webpack_require__(10)\n}\nvar normalizeComponent = __webpack_require__(0)\n/* script */\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-096e3a71\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_App_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_096e3a71_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_App_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Component.exports);\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 11 */,\n/* 12 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'app'\n});\n\n/***/ }),\n/* 13 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('header',[_c('router-link',{attrs:{\"to\":\"/\",\"tag\":\"span\"}},[_vm._v(\"Lok Lok Shader Editing Helper\")]),_vm._v(\" \"),_vm._m(0,false,false)],1),_vm._v(\" \"),_c('main',[_c('router-view')],1)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',[_vm._v(\"No DB yet. Work in progress. \"),_c('a',{staticClass:\"todo\",attrs:{\"target\":\"_blank\",\"href\":\"https://docs.google.com/document/d/1tfKqN32Idr6QphLVCSCzAE918Aj-J30WR3ITV4bvXXg/edit\"}},[_vm._v(\"Todo List.\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n/* 14 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vue_router__ = __webpack_require__(15);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_Hello__ = __webpack_require__(16);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_pages_editor_Editor_vue__ = __webpack_require__(20);\n\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */].use(__WEBPACK_IMPORTED_MODULE_1_vue_router__[\"a\" /* default */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (new __WEBPACK_IMPORTED_MODULE_1_vue_router__[\"a\" /* default */]({\n  routes: [{\n    path: '/',\n    component: __WEBPACK_IMPORTED_MODULE_2__components_Hello__[\"a\" /* default */]\n  }, {\n    path: '/editor',\n    component: __WEBPACK_IMPORTED_MODULE_3__components_pages_editor_Editor_vue__[\"a\" /* default */]\n  }]\n}));\n\n/***/ }),\n/* 15 */,\n/* 16 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Hello_vue__ = __webpack_require__(18);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_79af2da9_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Hello_vue__ = __webpack_require__(19);\nfunction injectStyle (ssrContext) {\n  __webpack_require__(17)\n}\nvar normalizeComponent = __webpack_require__(0)\n/* script */\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Hello_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_79af2da9_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Hello_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Component.exports);\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 18 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n//\n//\n//\n//\n//\n//\n//\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'hello',\n  data: function data() {\n    return {};\n  },\n\n  methods: {},\n  mounted: function mounted() {}\n});\n\n/***/ }),\n/* 19 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"hello\"},[_c('router-link',{attrs:{\"to\":\"/editor\"}},[_vm._v(\"Editor (no DB)\")])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n/* 20 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Editor_vue__ = __webpack_require__(22);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_23463c34_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Editor_vue__ = __webpack_require__(42);\nfunction injectStyle (ssrContext) {\n  __webpack_require__(21)\n}\nvar normalizeComponent = __webpack_require__(0)\n/* script */\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Editor_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_23463c34_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Editor_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Component.exports);\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 22 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuedraggable__ = __webpack_require__(23);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuedraggable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_vuedraggable__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_parts_complier_complier_js__ = __webpack_require__(25);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_parts_editor_ACE_vue__ = __webpack_require__(27);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_parts_template_template_js__ = __webpack_require__(40);\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  components: {\n    ACE: __WEBPACK_IMPORTED_MODULE_2__components_parts_editor_ACE_vue__[\"a\" /* default */],\n    draggable: __WEBPACK_IMPORTED_MODULE_0_vuedraggable___default.a\n  },\n  data: function data() {\n    return {\n      iframeLink: false,\n      iwindow: false,\n      iframer: false,\n      complier: __WEBPACK_IMPORTED_MODULE_1__components_parts_complier_complier_js__[\"a\" /* default */],\n      projectFiles: [],\n      ace: {\n        height: window.innerHeight - 50\n      },\n      current: {\n        file: {\n          path: '@/main.js',\n          src: '//Welcome! Loading.....'\n        }\n      },\n      newFilePath: '@/src/newFile.js',\n      isDirty: false,\n      clean: function clean() {},\n\n      blob: false,\n      compiling: false\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    var rAF = function rAF() {\n      _this.syncInfoToSubWindow();\n      window.requestAnimationFrame(rAF);\n    };\n    window.requestAnimationFrame(rAF);\n\n    window.addEventListener('beforeunload', function (e) {\n      _this.closeWindow();\n    }, false);\n    setInterval(function () {\n      if (_this.isDirty) {\n        _this.isDirty = false;\n        _this.compileFiles();\n      }\n    }, 3333);\n    setTimeout(function () {\n      _this.projectFiles = Object(__WEBPACK_IMPORTED_MODULE_3__components_parts_template_template_js__[\"a\" /* getNewProject */])({ author: 'loklok' });\n      _this.current.file = _this.projectFiles[0];\n      _this.compileFiles();\n    }, 1000);\n    var onWorker = function onWorker(evt) {\n      _this.compiling = false;\n      // console.log(evt.data.js)\n      _this.onCompleteCompile({ js: evt.data.js });\n    };\n    this.clean = __WEBPACK_IMPORTED_MODULE_1__components_parts_complier_complier_js__[\"a\" /* default */].setUp({ onWorker: onWorker });\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.clean();\n    if (this.iwindow) {\n      this.iwindow.close();\n    }\n  },\n\n  methods: {\n    checkDisable: function checkDisable(src) {\n      if (src === '@/index.html') {\n        return true;\n      } else if (src === '@/main.js') {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    getHTML: function getHTML(_ref) {\n      var js = _ref.js;\n\n      var html = (this.projectFiles || []).filter(function (item) {\n        return item.path === '@/index.html';\n      })[0].src;\n      html = Object(__WEBPACK_IMPORTED_MODULE_3__components_parts_template_template_js__[\"b\" /* initTokenReplacer */])({ html: html, js: js });\n      return html;\n    },\n    onCompleteCompile: function onCompleteCompile(_ref2) {\n      var js = _ref2.js;\n\n      this.blob = new Blob([this.getHTML({ js: js })], { type: 'text/html' });\n      if (this.blob) {\n        URL.revokeObjectURL(this.blob);\n      }\n      this.iframeLink = URL.createObjectURL(this.blob);\n\n      if (this.iframer) {\n        this.iframer = this.iframeLink;\n      }\n\n      if (this.iwindow) {\n        this.iwindow.postMessage({ type: 'suspend-close', duration: 6000 }, window.location.origin);\n        this.iwindow.location.assign(this.iframeLink);\n      }\n    },\n    compileFiles: function compileFiles() {\n      this.compiling = true;\n      __WEBPACK_IMPORTED_MODULE_1__components_parts_complier_complier_js__[\"a\" /* default */].compile({\n        files: this.projectFiles\n      });\n    },\n    newFile: function newFile(_ref3) {\n      var path = _ref3.path;\n\n      this.projectFiles.push(Object(__WEBPACK_IMPORTED_MODULE_3__components_parts_template_template_js__[\"c\" /* newFile */])({ path: path }));\n    },\n    setFile: function setFile(file) {\n      this.current.file = file;\n      // this.compileFiles()\n    },\n    openWindow: function openWindow() {\n      var _this2 = this;\n\n      if (this.iframeLink) {\n        var strWindowFeatures = 'menubar=yes,location=yes,resizable=yes,scrollbars=yes,status=yes';\n        strWindowFeatures = 'directories=no,titlebar=no,toolbar=no,location=no,status=no,menubar=no,scrollbars=yes,resizable=yes,width=' + window.innerWidth + ',height=' + window.innerHeight;\n        this.iwindow = window.open(this.iframeLink, 'title', strWindowFeatures);\n        this.iwindow.onmessage = function (_ref4) {\n          var data = _ref4.data;\n\n          if (data.type === 'close') {\n            _this2.closeWindow();\n          }\n        };\n      }\n    },\n    openiFrame: function openiFrame() {\n      if (this.iframeLink) {\n        this.iframer = this.iframeLink;\n      }\n    },\n    closeiFrame: function closeiFrame() {\n      this.iframer = false;\n    },\n    closeWindow: function closeWindow() {\n      if (this.iwindow) {\n        this.iwindow.close();\n        this.iwindow = false;\n      }\n    },\n    syncInfoToSubWindow: function syncInfoToSubWindow() {\n      if (this.$refs['demo-slider']) {\n        this.updateSlider(this.$refs['demo-slider'].value);\n      }\n    },\n    updateSlider: function updateSlider(number) {\n      var content = { type: 'cw.slider', data: { value: parseFloat(number) } };\n      if (this.iwindow) {\n        this.iwindow.postMessage(content, window.location.origin);\n      }\n      if (this.$refs['iframer']) {\n        this.$refs['iframer'].contentWindow.postMessage(content, window.location.origin);\n      }\n    }\n  }\n});\n\n/***/ }),\n/* 23 */,\n/* 24 */,\n/* 25 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_worker_babel_worker_js__ = __webpack_require__(26);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_worker_babel_worker_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__components_worker_babel_worker_js__);\n\nvar worker = new __WEBPACK_IMPORTED_MODULE_0__components_worker_babel_worker_js___default.a();\nfunction makeEventBus() {\n  var evts = {};\n  var api = {};\n  api.on = function (name, func) {\n    if (!evts[name]) {\n      evts[name] = [];\n    }\n    evts[name].push(func);\n  };\n  api.once = function (name, func) {\n    var newFn = function newFn(args) {\n      func(args);\n      api.off(newFn);\n    };\n    api.on(name, newFn);\n  };\n  api.off = function (name, func) {\n    if (!evts[name]) {\n      evts[name] = [];\n    }\n    var idx = evts[name].indexOf(func);\n    evts[name].splice(idx, 1);\n  };\n  api.trigger = function (name, args) {\n    if (!evts[name]) {\n      evts[name] = [];\n    }\n    for (var i = 0; i < evts[name].length; i++) {\n      evts[name][i].call({}, args);\n    }\n  };\n  return api;\n}\n\nvar buzz = makeEventBus();\nvar onMessage = function onMessage(evt) {\n  buzz.trigger('worker', evt);\n  /* eslint-disable */\n  eval(evt.data.data);\n};\nworker.onmessage = onMessage;\n\n// auto clean memory pool\nsetInterval(function () {\n  if (worker) {\n    worker.terminate();\n    worker = new __WEBPACK_IMPORTED_MODULE_0__components_worker_babel_worker_js___default.a();\n    worker.onmessage = onMessage;\n  }\n}, 30000);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  compile: function compile(_ref) {\n    var files = _ref.files;\n\n    worker.postMessage({ files: files });\n  },\n  setUp: function setUp(_ref2) {\n    var onWorker = _ref2.onWorker;\n\n    buzz.on('worker', onWorker);\n    return function () {\n      buzz.off('worker', onWorker);\n    };\n  }\n});\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = function() {\n  return new Worker(__webpack_require__.p + \"e56bdeffcdb837c76b7e.worker.js\");\n};\n\n/***/ }),\n/* 27 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_ACE_vue__ = __webpack_require__(29);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_13838409_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_ACE_vue__ = __webpack_require__(39);\nfunction injectStyle (ssrContext) {\n  __webpack_require__(28)\n}\nvar normalizeComponent = __webpack_require__(0)\n/* script */\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_ACE_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_13838409_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_ACE_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Component.exports);\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 29 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n//\n//\n//\n//\n//\n\nvar ace = __webpack_require__(30);\n// npm install --save vue2-ace-editor\n__webpack_require__.e/* require */(0).then(function() { var __WEBPACK_AMD_REQUIRE_ARRAY__ = [__webpack_require__(44)]; (function (data) {\n  window.emmet = data.emmet;\n}.apply(null, __WEBPACK_AMD_REQUIRE_ARRAY__));}).catch(__webpack_require__.oe);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  template: '',\n  props: {\n    value: {},\n    filepath: {\n      type: String,\n      default: 'lol.js'\n    },\n    theme: String,\n    height: true,\n    width: true\n  },\n  data: function data() {\n    return {\n      editor: null,\n      contentBackup: ''\n    };\n  },\n\n  methods: {\n    px: function px(n) {\n      if (/^\\d*$/.test(n)) {\n        return n + 'px';\n      }\n      return n;\n    },\n    getLangFromPath: function getLangFromPath(path) {\n      var ans = 'html';\n      try {\n        var ext = path.split('.').pop();\n\n        if (ext === 'js') {\n          ans = 'javascript';\n        }\n        if (ext === 'vue') {\n          ans = 'html';\n        }\n        if (ext === 'html') {\n          ans = 'html';\n        }\n        if (ext === 'vert') {\n          ans = 'glsl';\n        }\n        if (ext === 'frag') {\n          ans = 'glsl';\n        }\n      } catch (e) {\n        console.log(e);\n      }\n\n      return ans;\n    }\n  },\n  watch: {\n    value: function value(val) {\n      if (this.contentBackup !== val) {\n        this.editor.setValue(val, 1);\n      }\n    },\n    filepath: function filepath() {\n      this.editor.getSession().setMode('ace/mode/' + this.getLangFromPath(this.filepath));\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    var vm = this;\n    var theme = this.theme || 'chrome';\n\n    __webpack_require__(31);\n\n    var editor = vm.editor = ace.edit(this.$el);\n\n    var commands = [{\n      name: 'save',\n      bindKey: { win: 'Ctrl-S', mac: 'Command-S' },\n      exec: function exec(editor) {\n        var val = editor.getValue();\n        _this.$emit('save', val);\n      },\n      readOnly: true // false if this command should not apply in readOnly mode\n    }, {\n      name: 'multicursor',\n      bindKey: { win: 'Ctrl-D', mac: 'Command-D' },\n      exec: function exec(editor) {\n        editor.selectMore(1);\n      },\n      // multiSelectAction: 'forEach',\n      scrollIntoView: 'cursor',\n      readOnly: true // false if this command should not apply in readOnly mode\n    }];\n    if (Array.isArray(commands)) {\n      commands.forEach(function (command) {\n        vm.editor.commands.addCommand(command);\n      });\n    }\n\n    // this.$emit('init', editor)\n\n    __webpack_require__(32);\n    __webpack_require__(35);\n    __webpack_require__(36);\n    // require('brace/mode/sass')\n    __webpack_require__(37);\n    __webpack_require__(38);\n\n    editor.$blockScrolling = Infinity;\n    editor.setOption('enableEmmet', true);\n    editor.getSession().setMode('ace/mode/' + this.getLangFromPath(this.filepath));\n    editor.setTheme('ace/theme/' + theme);\n    editor.setValue(this.value, 1);\n    editor.session.setOptions({ tabSize: 2, useSoftTabs: true });\n\n    editor.on('change', function () {\n      var content = editor.getValue();\n      vm.$emit('input', content);\n      vm.contentBackup = content;\n    });\n  }\n});\n\n/***/ }),\n/* 30 */,\n/* 31 */,\n/* 32 */,\n/* 33 */,\n/* 34 */,\n/* 35 */,\n/* 36 */,\n/* 37 */,\n/* 38 */,\n/* 39 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{style:({height: _vm.height ? _vm.px(_vm.height) : '100%',width: _vm.width ? _vm.px(_vm.width) : '100%'})})}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n/* 40 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export scriptSRC */\n/* unused harmony export initToken */\n/* unused harmony export autoRefreshToken */\n/* unused harmony export indexHTML */\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = newFile;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = initTokenReplacer;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = getNewProject;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__worker_requirejs_str_txt__ = __webpack_require__(41);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__worker_requirejs_str_txt___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__worker_requirejs_str_txt__);\n\n\nfunction scriptSRC(src) {\n    return '<script src=\"' + src + '\">' + '</script>';\n}\n\nfunction initToken() {\n    return '<!--DO_NOT_REMOVE_ME____AUTO_INIT-->';\n}\nfunction autoRefreshToken() {\n    return '<!--DO_NOT_REMOVE_ME____AUTO_REFRESH-->';\n}\n\nfunction indexHTML(_ref) {\n    var author = _ref.author;\n\n    return '<!DOCTYPE html>\\n<html>\\n  <head>\\n  <meta charset=\"UTF-8\">\\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\\n  <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\">\\n  <title>component</title>\\n  <meta name=\"author\" content=\"' + author + '\">\\n  <meta name=\"description\" content=\"WebGL Art\">\\n  <meta name=\"keywords\" content=\"WebGL, Art\">\\n\\n  <!--\\n  ' + scriptSRC('https://cdnjs.cloudflare.com/ajax/libs/vue/2.5.2/vue.min.js') + '\\n  ' + scriptSRC('https://cdnjs.cloudflare.com/ajax/libs/vue-router/3.0.1/vue-router.min.js') + '\\n  ' + scriptSRC('https://cdnjs.cloudflare.com/ajax/libs/tween.js/16.3.5/Tween.min.js') + '\\n  -->\\n\\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/three.js/88/three.min.js\" integrity=\"sha256-6fhm481uY9c152qGWIVgE7KbzaCj5WjCi3BGIpZef2E=\" crossorigin=\"anonymous\"></script>\\n  <script src=\"https://threejs.org/examples/js/GPUComputationRenderer.js\"></script>\\n\\n  <style type=\"text/css\">\\n    html, body {\\n      width: 100%;\\n      height: 100%;\\n      margin: 0px;\\n      padding: 0px;\\n    }\\n    html, body, #app {\\n      box-sizing: border-box;\\n    }\\n  </style>\\n  </head>\\n  <body>\\n    <div id=\"app\"></div>\\n    ' + initToken() + '\\n  </body>\\n</html>';\n}\n\nfunction newFile(_ref2) {\n    var path = _ref2.path;\n\n    return {\n        path: path || '@/newFile.js',\n        src: ''\n    };\n}\n\nfunction initTokenReplacer(_ref3) {\n    var html = _ref3.html,\n        js = _ref3.js;\n\n    return html.replace(initToken(), '<script type=\"text\" id=\"initAPP\">' + js + '<' + '/' + 'script>' + '<script>' + __WEBPACK_IMPORTED_MODULE_0__worker_requirejs_str_txt___default.a + '<' + '/' + 'script>' + '<script>' + '\\n  (function(){\\n    var js = document.getElementById(\\'initAPP\\').innerHTML;\\n    var blob = new Blob([js], { type: \\'text/html\\' });\\n    var url = URL.createObjectURL(blob);\\n\\n    var scpt = document.createElement(\\'script\\');\\n    scpt.src = url;\\n    document.body.appendChild(scpt);\\n\\n    var suspendClose = false;\\n\\n    window.addEventListener(\\'message\\', ({ data }) => {\\n      if (data.type === \\'suspend-close\\') {\\n        suspendClose = true;\\n        setTimeout(() => {\\n          suspendClose = false;\\n        }, 5000);\\n      }\\n    })\\n\\n    window.addEventListener(\\'keydown\\', (e) => {\\n      if (\\n        (e.keyCode === 82 && e.metaKey) ||\\n        (e.keyCode === 82 && e.ctrlKey)\\n      ) {\\n        suspendClose = true;\\n        setTimeout(() => {\\n          suspendClose = false;\\n        }, 5000);\\n      }\\n    }, false)\\n\\n    window.addEventListener(\\'beforeunload\\', (e) => {\\n      if (!suspendClose) {\\n        window.top.postMessage({ type: \\'close\\' }, window.location.origin)\\n      }\\n    }, false)\\n\\n  }())\\n\\n//' + '</' + 'script>');\n}\n\nfunction getNewProject(_ref4) {\n    var author = _ref4.author;\n\n    return [{\n        path: '@/index.html',\n        src: indexHTML({ author: author })\n    }, {\n        path: '@/main.js',\n        src: '//\\nimport app from \\'@/src/app.js\\'\\n'\n    }, {\n        path: '@/src/app.js',\n        src: '\\nimport { makeAPI } from \\'@/src/webgl/particle.js\\';\\n\\nvar api = makeAPI();\\napi.setup({ target: document.getElementById(\\'app\\') });\\n\\nvar clean = () => {\\n  api.clean()\\n};\\n\\n//\\n'\n    }, {\n        path: '@/src/ui/events.js',\n        src: '\\n//\\nexport default ({ target, stack }) => {\\n  var mod = {};\\n\\n  mod.sendEvent = (args) => {\\n      for (var key in stack) {\\n          stack[key](args)\\n      }\\n  }\\n\\n  var ev = mod.evlt = {\\n    resizer: () => {\\n      if (!target) { return }\\n      mod.rect = target.getBoundingClientRect()\\n      mod.aspect = mod.rect.width / mod.rect.height\\n      mod.sendEvent({ type: \\'resize\\', aspect: mod.aspect, rect: mod.rect })\\n    },\\n    tsData: false,\\n    tmData: false,\\n    emitClick: false,\\n    onTS: (evt) => {\\n      evt.preventDefault()\\n      ev.tsData = { type: \\'click\\', isIn: true, touches: evt.touches, pageX: evt.touches[0].pageX, pageY: evt.touches[0].pageY, rect: mod.rect }\\n      ev.emitClick = true\\n      setTimeout(() => {\\n        ev.emitClick = false\\n      }, 300)\\n      mod.sendEvent({ type: \\'ts\\', isIn: true, touches: evt.touches, pageX: evt.touches[0].pageX, pageY: evt.touches[0].pageY, rect: mod.rect })\\n    },\\n    onTM: (evt) => {\\n      evt.preventDefault()\\n      mod.sendEvent({ type: \\'tm\\', touches: evt.touches, pageX: evt.touches[0].pageX, pageY: evt.touches[0].pageY, rect: mod.rect })\\n    },\\n    onTE: (evt) => {\\n      if (ev.emitClick) {\\n        ev.emitClick = false\\n        mod.sendEvent(ev.tsData)\\n      }\\n      mod.sendEvent({ type: \\'te\\', isIn: false })\\n    },\\n    onMDN: (evt) => {\\n      mod.sendEvent({ type: \\'mdn\\', pageX: evt.clientX, pageY: evt.clientY, rect: mod.rect })\\n    },\\n    onMUP: (evt) => {\\n      mod.sendEvent({ type: \\'mup\\', pageX: evt.clientX, pageY: evt.clientY, rect: mod.rect })\\n    },\\n    onMV: (evt) => {\\n      evt.preventDefault()\\n      mod.sendEvent({ type: \\'mv\\', pageX: evt.pageX, pageY: evt.pageY, rect: mod.rect })\\n    },\\n    onMO: (evt) => {\\n      mod.sendEvent({ isIn: true })\\n    },\\n    onME: (evt) => {\\n      mod.sendEvent({ isIn: true })\\n    },\\n    onML: (evt) => {\\n      mod.sendEvent({ isIn: false })\\n    },\\n    onCL: (evt) => {\\n      mod.sendEvent({ type: \\'click\\', pageX: evt.pageX, pageY: evt.pageY, rect: mod.rect })\\n    },\\n    onWHL: (evt) => {\\n      mod.sendEvent({ type: \\'wheel\\', deltaX: evt.deltaX, deltaY: evt.deltaY })\\n    }\\n  }\\n\\n  setTimeout(() => {\\n    ev.resizer()\\n  }, 10)\\n\\n  var container = target\\n  container.addEventListener(\\'mouseover\\', ev.onMO, false)\\n  container.addEventListener(\\'mouseenter\\', ev.onME, false)\\n  container.addEventListener(\\'mouseleave\\', ev.onML, false)\\n\\n  container.addEventListener(\\'mousemove\\', ev.onMV, false)\\n  container.addEventListener(\\'mousedown\\', ev.onMDN, false)\\n  container.addEventListener(\\'mouseup\\', ev.onMUP, false)\\n\\n  container.addEventListener(\\'click\\', ev.onCL, false)\\n  container.addEventListener(\\'wheel\\', ev.onWHL, false)\\n\\n  container.addEventListener(\\'touchstart\\', ev.onTS, false)\\n  container.addEventListener(\\'touchmove\\', ev.onTM, false)\\n  container.addEventListener(\\'touchend\\', ev.onTE, false)\\n  container.style[\\'-webkit-tap-highlight-color\\'] = \\'rgba(0,0,0,0)\\'\\n  window.addEventListener(\\'resize\\', ev.resizer, false)\\n  mod.uninstaller = () => {\\n    container.removeEventListener(\\'mouseover\\', ev.onMO)\\n    container.removeEventListener(\\'mouseenter\\', ev.onME)\\n    container.removeEventListener(\\'mouseleave\\', ev.onML)\\n\\n    container.removeEventListener(\\'mousemove\\', ev.onMV)\\n    container.removeEventListener(\\'mousedown\\', ev.onMDN)\\n    container.removeEventListener(\\'mouseup\\', ev.onMUP)\\n\\n    container.removeEventListener(\\'click\\', ev.onCL)\\n    container.removeEventListener(\\'wheel\\', ev.onWHL)\\n\\n    container.removeEventListener(\\'touchstart\\', ev.onTS)\\n    container.removeEventListener(\\'touchmove\\', ev.onTM)\\n    container.removeEventListener(\\'touchend\\', ev.onTE)\\n    window.removeEventListener(\\'resize\\', ev.resizer)\\n  }\\n\\n  return mod;\\n}\\n//\\n'\n    }, {\n        path: '@/src/ui/window.js',\n        src: '\\n//\\n\\nexport default function setupWindow ({ stack }) {\\n  var mod = {}\\n\\n  mod.sendEvent = (args) => {\\n      for (var key in stack) {\\n          stack[key](args)\\n      }\\n  }\\n\\n  window.addEventListener(\\'message\\', ({ data }) => {\\n    // console.log(data);\\n    if (data.type === \\'cw.slider\\') {\\n      mod.sendEvent({ type: \\'cw.slider\\', data })\\n    }\\n  }, false)\\n\\n  return mod;\\n}\\n\\n//\\n      '\n    }, {\n        path: '@/src/webgl/particle.js',\n        src: '\\n//\\nvar THREE = window.THREE;\\n\\nimport setupEvents from \\'@/src/ui/events.js\\';\\nimport setupWindow from \\'@/src/ui/window.js\\';\\n\\nexport function makeAPI() {\\n    var api = {}\\n\\n    var WIDTH = 128\\n\\n    api.windowStack = {};\\n    api.eventStack = {};\\n    api.setup = ({\\n        target\\n    }) => {\\n        var renderer = new THREE.WebGLRenderer({\\n            alpha: true\\n        })\\n        api.compute = setupCompute({\\n            renderer\\n        })\\n        api.render = setupRender({\\n            renderer,\\n            target\\n        })\\n        api.events = setupEvents({\\n            target,\\n            stack: api.eventStack\\n        })\\n        api.Window = setupWindow({\\n            stack: api.windowStack\\n        })\\n        api.loop = setupLoop()\\n    }\\n\\n    api.clean = () => {\\n        api.loop.stop()\\n    }\\n\\n    var setupLoop = () => {\\n        var rAF = () => {\\n            api.rAFID = window.requestAnimationFrame(rAF)\\n\\n            var result = api.compute.run()\\n            api.render.run({\\n                compute: result\\n            })\\n        }\\n        api.rAFID = window.requestAnimationFrame(rAF)\\n        return {\\n            stop() {\\n                window.cancelAnimationFrame(api.rAFID)\\n            }\\n        }\\n    }\\n\\n    var makeAnimatable = ({\\n        scene\\n    }) => {\\n\\n        var particleV = require(\\'@/src/webgl/particle/particle.vert\\');\\n        var particleF = require(\\'@/src/webgl/particle/particle.frag\\');\\n\\n        var geometry = new THREE.PlaneBufferGeometry(30, 30, WIDTH - 1, WIDTH - 1);\\n        var material = new THREE.ShaderMaterial({\\n            blending: THREE.AdditiveBlending,\\n            depthTest: false,\\n            transparent: true,\\n            vertexShader: particleV.default,\\n            fragmentShader: particleF.default,\\n            uniforms: {\\n                opacity: {\\n                    value: 0,\\n                },\\n                resolution: {\\n                    value: new THREE.Vector2(window.innerWidth, window.innerHeight),\\n                },\\n                picture: {\\n                    value: new THREE.TextureLoader().load(\\'https://picsum.photos/200/300/?gravity=east\\')\\n                },\\n                pointSize: {\\n                    value: window.devicePixelRatio || 1.0\\n                },\\n                posTex: {\\n                    value: null\\n                },\\n                velTex: {\\n                    value: null\\n                }\\n            }\\n        })\\n\\n        api.windowStack.onOpacity = (evt) => {\\n          var { value } = evt.data.data;\\n          // console.log(\\'onOpacity\\', evt, evt.data.type, value / 100)\\n          material.uniforms.opacity.value = value / 100\\n        }\\n\\n        var points = new THREE.Points(geometry, material)\\n        points.matrixAutoUpdate = false\\n        points.updateMatrix()\\n\\n        scene.add(points)\\n\\n        return {\\n            material,\\n            points\\n        }\\n    }\\n\\n    var setupRender = ({\\n        renderer,\\n        target\\n    }) => {\\n        var mod = {}\\n\\n        var scene = new THREE.Scene();\\n        var camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.01, 1000);\\n        camera.position.z = 165;\\n\\n        renderer.setSize(window.innerWidth, window.innerHeight);\\n        renderer.setPixelRatio(window.devicePixelRatio || 1.0)\\n        target.appendChild(renderer.domElement);\\n\\n        setTimeout(() => {\\n            renderer.domElement.style.marginBottom = \\'-3px\\'\\n        }, 10)\\n\\n        api.eventStack.setSize = ({\\n            type,\\n            rect,\\n            aspect\\n        }) => {\\n            if (type === \\'resize\\' && rect) {\\n                renderer.setSize(rect.width, rect.height + 6)\\n                camera.aspect = aspect;\\n                camera.updateProjectionMatrix()\\n            }\\n        }\\n\\n        scene.background = new THREE.Color(0x000000);\\n\\n        var anim = makeAnimatable({\\n            scene\\n        })\\n\\n        mod.run = () => {\\n            var {\\n                velTex,\\n                posTex\\n            } = api.compute.getTex()\\n\\n            anim.material.uniforms.posTex.value = posTex\\n            anim.material.uniforms.velTex.value = velTex\\n\\n            renderer.render(scene, camera);\\n        }\\n\\n        return mod\\n    }\\n\\n\\n\\n    var setupCompute = ({\\n        renderer\\n    }) => {\\n        var mod = {}\\n\\n        function fillTexture(texture, WIDTH) {\\n\\n            var pixels = texture.image.data\\n            var p = 0\\n            for (var j = 0; j < WIDTH; j++) {\\n                for (var i = 0; i < WIDTH; i++) {\\n                    var x = (WIDTH / 2 - i) * 128 / WIDTH\\n                    var y = (WIDTH / 2 - j) * 128 / WIDTH\\n\\n                    pixels[p + 0] = x\\n                    pixels[p + 1] = y\\n\\n                    pixels[p + 2] = 0 // noise(Math.sin(x), Math.sin(y), 0.0)\\n                    pixels[p + 3] = 0\\n                    p += 4\\n                }\\n            }\\n        }\\n\\n        var gpuCompute = new GPUComputationRenderer(WIDTH, WIDTH, renderer);\\n\\n        // Create initial state float textures\\n        var pos0 = gpuCompute.createTexture();\\n        var vel0 = gpuCompute.createTexture();\\n        // and fill in here the texture data...\\n        fillTexture(pos0, WIDTH)\\n\\n        // Add texture variables\\n        var velTexSD = require(\\'@/src/webgl/particle/velocitySim.frag\\');\\n        var posTexSD = require(\\'@/src/webgl/particle/positionSim.frag\\');\\n\\n        var velVar = gpuCompute.addVariable(\\'velTex\\', velTexSD.default, pos0);\\n        var posVar = gpuCompute.addVariable(\\'posTex\\', posTexSD.default, vel0);\\n\\n        // Add variable dependencies\\n        gpuCompute.setVariableDependencies(velVar, [velVar, posVar]);\\n        gpuCompute.setVariableDependencies(posVar, [velVar, posVar]);\\n\\n        // Add custom uniforms\\n        velVar.material.uniforms = {\\n            time: {\\n                value: 0.0\\n            },\\n            mouse: {\\n                value: new THREE.Vector2(0, 0)\\n            }\\n        }\\n\\n        api.eventStack.mousePos = ({\\n            type,\\n            pageX,\\n            pageY,\\n            rect\\n        }) => {\\n            var velocity = velVar.material.uniforms.mouse.value;\\n            if (type === \\'mv\\' && rect) {\\n                velocity.x = ((pageX - rect.left) / rect.width) * 2 - 1\\n                velocity.y = -((pageY - rect.top) / rect.height) * 2 + 1\\n            } else if (type === \\'tm\\' && rect) {\\n                velocity.x = ((pageX - rect.left) / rect.width) * 2 - 1\\n                velocity.y = -((pageY - rect.top) / rect.height) * 2 + 1\\n            }\\n        }\\n\\n        // Check for completeness\\n        var error = gpuCompute.init();\\n        if (error !== null) {\\n            alert(error);\\n            console.error(error);\\n        }\\n        mod.getTex = () => {\\n            return {\\n                velTex: gpuCompute.getCurrentRenderTarget(velVar).texture,\\n                posTex: gpuCompute.getCurrentRenderTarget(posVar).texture\\n            }\\n        };\\n\\n        mod.run = () => {\\n            velVar.material.uniforms.time.value = window.performance.now() / 1000\\n            gpuCompute.compute();\\n        }\\n        return mod\\n    }\\n\\n    return api;\\n}\\n\\n\\n'\n    }, {\n        path: '@/src/webgl/particle/particle.vert',\n        src: '\\n\\nuniform sampler2D posTex;\\nuniform sampler2D velTex;\\n\\nuniform float pointSize;\\n\\nvarying vec4 parVel;\\nvarying vec2 vUv;\\n\\nvoid main() {\\n    vec4 pos = texture2D(posTex, uv);\\n    vec4 vel = texture2D(velTex, uv);\\n\\n    vec4 mvPosition = modelViewMatrix * vec4( pos.xyz, 1.0 );\\n    vec4 outputPos = projectionMatrix * mvPosition;\\n\\n    vUv = uv;\\n    parVel = vel;\\n    gl_Position = outputPos;\\n    gl_PointSize = pointSize * 1.0;\\n}\\n\\n\\n      '\n    }, {\n        path: '@/src/webgl/particle/particle.frag',\n        src: '\\n\\nvarying vec4 parVel;\\nvarying vec2 vUv;\\nuniform sampler2D picture;\\nuniform float opacity;\\n\\nvoid main() {\\n\\n    vec4 rainbow = parVel;\\n\\n// vec4 outputColor = vec4(\\n//         (rainbow.x + 0.6),\\n//         (rainbow.y * rainbow.x + 0.6),\\n//         (rainbow.y + 0.6),\\n//         0.25\\n//     );\\n// outputColor.xyz = clamp(outputColor.xyz, vec3(0.0), vec3(1.0));\\n    vec4 imgColor = texture2D(picture, vUv);\\n\\n    vec4 outputColor = vec4(0.5, 0.5, 0.5, opacity) * imgColor;\\n\\n    gl_FragColor = outputColor;\\n}\\n\\n'\n    }, {\n        path: '@/src/webgl/particle/velocitySim.frag',\n        src: '\\n\\nuniform float time;\\nuniform vec2 mouse;\\nfloat constrain(float val, float min, float max) {\\n    if (val < min) {\\n        return min;\\n    } else if (val > max) {\\n        return max;\\n    } else {\\n        return val;\\n    }\\n}\\n\\nvec3 getDiff (in vec3 lastPos, in vec3 mousePos) {\\n  vec3 diff = lastPos.xyz / 33.3 - mousePos;\\n  float distance = constrain(length(diff), 5.0, 100.0);\\n  float strength = 0.35 / (distance * distance);\\n\\n  diff = normalize(diff);\\n  diff = diff * strength * -2.0;\\n\\n  return diff;\\n}\\n\\nvoid main() {\\n    vec2 uv = gl_FragCoord.xy / resolution.xy;\\n\\n  vec4 lastVel = texture2D( velTex, uv );\\n    vec4 lastPos = texture2D( posTex, uv );\\n\\n    vec3 diff = getDiff( lastPos.xyz, vec3(mouse, 0.1) );\\n    lastVel.xyz += diff * 15.0;\\n\\n    gl_FragColor = lastVel;\\n}\\n'\n    }, {\n        path: '@/src/webgl/particle/positionSim.frag',\n        src: '\\n\\n#include <common>\\n\\n//  Classic Perlin 3D Noise\\n//  by Stefan Gustavson\\n//\\nvec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\\nvec2 fade(vec2 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\\n\\nfloat cnoise(vec2 P){\\n  vec4 Pi = floor(P.xyxy) + vec4(0.0, 0.0, 1.0, 1.0);\\n  vec4 Pf = fract(P.xyxy) - vec4(0.0, 0.0, 1.0, 1.0);\\n  Pi = mod(Pi, 289.0); // To avoid truncation effects in permutation\\n  vec4 ix = Pi.xzxz;\\n  vec4 iy = Pi.yyww;\\n  vec4 fx = Pf.xzxz;\\n  vec4 fy = Pf.yyww;\\n  vec4 i = permute(permute(ix) + iy);\\n  vec4 gx = 2.0 * fract(i * 0.0243902439) - 1.0; // 1/41 = 0.024...\\n  vec4 gy = abs(gx) - 0.5;\\n  vec4 tx = floor(gx + 0.5);\\n  gx = gx - tx;\\n  vec2 g00 = vec2(gx.x,gy.x);\\n  vec2 g10 = vec2(gx.y,gy.y);\\n  vec2 g01 = vec2(gx.z,gy.z);\\n  vec2 g11 = vec2(gx.w,gy.w);\\n  vec4 norm = 1.79284291400159 - 0.85373472095314 *\\n      vec4(dot(g00, g00), dot(g01, g01), dot(g10, g10), dot(g11, g11));\\n  g00 *= norm.x;\\n  g01 *= norm.y;\\n  g10 *= norm.z;\\n  g11 *= norm.w;\\n  float n00 = dot(g00, vec2(fx.x, fy.x));\\n  float n10 = dot(g10, vec2(fx.y, fy.y));\\n  float n01 = dot(g01, vec2(fx.z, fy.z));\\n  float n11 = dot(g11, vec2(fx.w, fy.w));\\n  vec2 fade_xy = fade(Pf.xy);\\n  vec2 n_x = mix(vec2(n00, n01), vec2(n10, n11), fade_xy.x);\\n  float n_xy = mix(n_x.x, n_x.y, fade_xy.y);\\n  return 2.3 * n_xy;\\n}\\n\\n#define M_PI 3.1415926535897932384626433832795\\nfloat atan2(in float y, in float x) {\\n  bool xgty = (abs(x) > abs(y));\\n  return mix(M_PI/2.0 - atan(x,y), atan(y,x), float(xgty));\\n}\\nvec3 fromBall(float r, float az, float el) {\\n  return vec3(\\n    r * cos(el) * cos(az),\\n    r * cos(el) * sin(az),\\n    r * sin(el)\\n  );\\n}\\nvoid toBall(vec3 pos, out float az, out float el) {\\n  az = atan2(pos.y, pos.x);\\n  el = atan2(pos.z, sqrt(pos.x * pos.x + pos.y * pos.y));\\n}\\n\\n// float az = 0.0;\\n// float el = 0.0;\\n// vec3 noiser = vec3(lastVel);\\n// toBall(noiser, az, el);\\n// lastVel.xyz = fromBall(1.0, az, el);\\n\\nvoid main() {\\n  vec2 uv = gl_FragCoord.xy / resolution.xy;\\n\\n  vec4 lastVel = texture2D( velTex, uv );\\n    vec4 lastPos = texture2D( posTex, uv );\\n\\n    float az = 0.0;\\n    float el = 0.0;\\n    vec3 noiser = vec3(lastPos);\\n\\n    noiser += rand(lastVel.xy) * 0.0000001;\\n\\n    // noiser += cnoise(lastPos.xy) * 2.5;\\n    // noiser += sin(lastPos.x * 0.3) * 2.5;\\n    // noiser += sin(lastPos.y * 0.3) * 2.5;\\n\\n    toBall(noiser, az, el);\\n    lastPos.xyz = fromBall(65.0, az, el);\\n    lastPos.xyz += lastVel.xyz;\\n\\n    gl_FragColor = lastPos;\\n}\\n\\n\\n'\n    }];\n}\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"/* eslint-disable */\\n/** vim: et:ts=4:sw=4:sts=4\\n * @license RequireJS 2.3.5 Copyright jQuery Foundation and other contributors.\\n * Released under MIT license, https://github.com/requirejs/requirejs/blob/master/LICENSE\\n */\\n//Not using strict: uneven strict support in browsers, #392, and causes\\n//problems with requirejs.exec()/transpiler plugins that may not be strict.\\n/*jslint regexp: true, nomen: true, sloppy: true */\\n/*global window, navigator, document, importScripts, setTimeout, opera */\\n\\nvar requireJSRequire, require, define;\\n(function (global, setTimeout) {\\n    var req, s, head, baseElement, dataMain, src,\\n        interactiveScript, currentlyAddingScript, mainScript, subPath,\\n        version = '2.3.5',\\n        commentRegExp = /\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/|([^:\\\"'=]|^)\\\\/\\\\/.*$/mg,\\n        cjsRequireRegExp = /[^.]\\\\s*require\\\\s*\\\\(\\\\s*[\\\"']([^'\\\"\\\\s]+)[\\\"']\\\\s*\\\\)/g,\\n        jsSuffixRegExp = /\\\\.js$/,\\n        currDirRegExp = /^\\\\.\\\\//,\\n        op = Object.prototype,\\n        ostring = op.toString,\\n        hasOwn = op.hasOwnProperty,\\n        isBrowser = !!(typeof window !== 'undefined' && typeof navigator !== 'undefined' && window.document),\\n        isWebWorker = !isBrowser && typeof importScripts !== 'undefined',\\n        //PS3 indicates loaded and complete, but need to wait for complete\\n        //specifically. Sequence is 'loading', 'loaded', execution,\\n        // then 'complete'. The UA check is unfortunate, but not sure how\\n        //to feature test w/o causing perf issues.\\n        readyRegExp = isBrowser && navigator.platform === 'PLAYSTATION 3' ?\\n                      /^complete$/ : /^(complete|loaded)$/,\\n        defContextName = '_',\\n        //Oh the tragedy, detecting opera. See the usage of isOpera for reason.\\n        isOpera = typeof opera !== 'undefined' && opera.toString() === '[object Opera]',\\n        contexts = {},\\n        cfg = {},\\n        globalDefQueue = [],\\n        useInteractive = false;\\n\\n    //Could match something like ')//comment', do not lose the prefix to comment.\\n    function commentReplace(match, singlePrefix) {\\n        return singlePrefix || '';\\n    }\\n\\n    function isFunction(it) {\\n        return ostring.call(it) === '[object Function]';\\n    }\\n\\n    function isArray(it) {\\n        return ostring.call(it) === '[object Array]';\\n    }\\n\\n    /**\\n     * Helper function for iterating over an array. If the func returns\\n     * a true value, it will break out of the loop.\\n     */\\n    function each(ary, func) {\\n        if (ary) {\\n            var i;\\n            for (i = 0; i < ary.length; i += 1) {\\n                if (ary[i] && func(ary[i], i, ary)) {\\n                    break;\\n                }\\n            }\\n        }\\n    }\\n\\n    /**\\n     * Helper function for iterating over an array backwards. If the func\\n     * returns a true value, it will break out of the loop.\\n     */\\n    function eachReverse(ary, func) {\\n        if (ary) {\\n            var i;\\n            for (i = ary.length - 1; i > -1; i -= 1) {\\n                if (ary[i] && func(ary[i], i, ary)) {\\n                    break;\\n                }\\n            }\\n        }\\n    }\\n\\n    function hasProp(obj, prop) {\\n        return hasOwn.call(obj, prop);\\n    }\\n\\n    function getOwn(obj, prop) {\\n        return hasProp(obj, prop) && obj[prop];\\n    }\\n\\n    /**\\n     * Cycles over properties in an object and calls a function for each\\n     * property value. If the function returns a truthy value, then the\\n     * iteration is stopped.\\n     */\\n    function eachProp(obj, func) {\\n        var prop;\\n        for (prop in obj) {\\n            if (hasProp(obj, prop)) {\\n                if (func(obj[prop], prop)) {\\n                    break;\\n                }\\n            }\\n        }\\n    }\\n\\n    /**\\n     * Simple function to mix in properties from source into target,\\n     * but only if target does not already have a property of the same name.\\n     */\\n    function mixin(target, source, force, deepStringMixin) {\\n        if (source) {\\n            eachProp(source, function (value, prop) {\\n                if (force || !hasProp(target, prop)) {\\n                    if (deepStringMixin && typeof value === 'object' && value &&\\n                        !isArray(value) && !isFunction(value) &&\\n                        !(value instanceof RegExp)) {\\n\\n                        if (!target[prop]) {\\n                            target[prop] = {};\\n                        }\\n                        mixin(target[prop], value, force, deepStringMixin);\\n                    } else {\\n                        target[prop] = value;\\n                    }\\n                }\\n            });\\n        }\\n        return target;\\n    }\\n\\n    //Similar to Function.prototype.bind, but the 'this' object is specified\\n    //first, since it is easier to read/figure out what 'this' will be.\\n    function bind(obj, fn) {\\n        return function () {\\n            return fn.apply(obj, arguments);\\n        };\\n    }\\n\\n    function scripts() {\\n        return document.getElementsByTagName('script');\\n    }\\n\\n    function defaultOnError(err) {\\n        throw err;\\n    }\\n\\n    //Allow getting a global that is expressed in\\n    //dot notation, like 'a.b.c'.\\n    function getGlobal(value) {\\n        if (!value) {\\n            return value;\\n        }\\n        var g = global;\\n        each(value.split('.'), function (part) {\\n            g = g[part];\\n        });\\n        return g;\\n    }\\n\\n    /**\\n     * Constructs an error with a pointer to an URL with more information.\\n     * @param {String} id the error ID that maps to an ID on a web page.\\n     * @param {String} message human readable error.\\n     * @param {Error} [err] the original error, if there is one.\\n     *\\n     * @returns {Error}\\n     */\\n    function makeError(id, msg, err, requireModules) {\\n        var e = new Error(msg + '\\\\nhttp://requirejs.org/docs/errors.html#' + id);\\n        e.requireType = id;\\n        e.requireModules = requireModules;\\n        if (err) {\\n            e.originalError = err;\\n        }\\n        return e;\\n    }\\n\\n    if (typeof define !== 'undefined') {\\n        //If a define is already in play via another AMD loader,\\n        //do not overwrite.\\n        return;\\n    }\\n\\n    if (typeof requirejs !== 'undefined') {\\n        if (isFunction(requirejs)) {\\n            //Do not overwrite an existing requirejs instance.\\n            return;\\n        }\\n        cfg = requirejs;\\n        requirejs = undefined;\\n    }\\n\\n    //Allow for a require config object\\n    if (typeof require !== 'undefined' && !isFunction(require)) {\\n        //assume it is a config object.\\n        cfg = require;\\n        require = undefined;\\n    }\\n\\n    function newContext(contextName) {\\n        var inCheckLoaded, Module, context, handlers,\\n            checkLoadedTimeoutId,\\n            config = {\\n                //Defaults. Do not set a default for map\\n                //config to speed up normalize(), which\\n                //will run faster if there is no default.\\n                waitSeconds: 7,\\n                baseUrl: './',\\n                paths: {},\\n                bundles: {},\\n                pkgs: {},\\n                shim: {},\\n                config: {}\\n            },\\n            registry = {},\\n            //registry of just enabled modules, to speed\\n            //cycle breaking code when lots of modules\\n            //are registered, but not activated.\\n            enabledRegistry = {},\\n            undefEvents = {},\\n            defQueue = [],\\n            defined = {},\\n            urlFetched = {},\\n            bundlesMap = {},\\n            requireCounter = 1,\\n            unnormalizedCounter = 1;\\n\\n        /**\\n         * Trims the . and .. from an array of path segments.\\n         * It will keep a leading path segment if a .. will become\\n         * the first path segment, to help with module name lookups,\\n         * which act like paths, but can be remapped. But the end result,\\n         * all paths that use this function should look normalized.\\n         * NOTE: this method MODIFIES the input array.\\n         * @param {Array} ary the array of path segments.\\n         */\\n        function trimDots(ary) {\\n            var i, part;\\n            for (i = 0; i < ary.length; i++) {\\n                part = ary[i];\\n                if (part === '.') {\\n                    ary.splice(i, 1);\\n                    i -= 1;\\n                } else if (part === '..') {\\n                    // If at the start, or previous value is still ..,\\n                    // keep them so that when converted to a path it may\\n                    // still work when converted to a path, even though\\n                    // as an ID it is less than ideal. In larger point\\n                    // releases, may be better to just kick out an error.\\n                    if (i === 0 || (i === 1 && ary[2] === '..') || ary[i - 1] === '..') {\\n                        continue;\\n                    } else if (i > 0) {\\n                        ary.splice(i - 1, 2);\\n                        i -= 2;\\n                    }\\n                }\\n            }\\n        }\\n\\n        /**\\n         * Given a relative module name, like ./something, normalize it to\\n         * a real name that can be mapped to a path.\\n         * @param {String} name the relative name\\n         * @param {String} baseName a real name that the name arg is relative\\n         * to.\\n         * @param {Boolean} applyMap apply the map config to the value. Should\\n         * only be done if this normalization is for a dependency ID.\\n         * @returns {String} normalized name\\n         */\\n        function normalize(name, baseName, applyMap) {\\n            var pkgMain, mapValue, nameParts, i, j, nameSegment, lastIndex,\\n                foundMap, foundI, foundStarMap, starI, normalizedBaseParts,\\n                baseParts = (baseName && baseName.split('/')),\\n                map = config.map,\\n                starMap = map && map['*'];\\n\\n            //Adjust any relative paths.\\n            if (name) {\\n                name = name.split('/');\\n                lastIndex = name.length - 1;\\n\\n                // If wanting node ID compatibility, strip .js from end\\n                // of IDs. Have to do this here, and not in nameToUrl\\n                // because node allows either .js or non .js to map\\n                // to same file.\\n                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\\n                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\\n                }\\n\\n                // Starts with a '.' so need the baseName\\n                if (name[0].charAt(0) === '.' && baseParts) {\\n                    //Convert baseName to array, and lop off the last part,\\n                    //so that . matches that 'directory' and not name of the baseName's\\n                    //module. For instance, baseName of 'one/two/three', maps to\\n                    //'one/two/three.js', but we want the directory, 'one/two' for\\n                    //this normalization.\\n                    normalizedBaseParts = baseParts.slice(0, baseParts.length - 1);\\n                    name = normalizedBaseParts.concat(name);\\n                }\\n\\n                trimDots(name);\\n                name = name.join('/');\\n            }\\n\\n            //Apply map config if available.\\n            if (applyMap && map && (baseParts || starMap)) {\\n                nameParts = name.split('/');\\n\\n                outerLoop: for (i = nameParts.length; i > 0; i -= 1) {\\n                    nameSegment = nameParts.slice(0, i).join('/');\\n\\n                    if (baseParts) {\\n                        //Find the longest baseName segment match in the config.\\n                        //So, do joins on the biggest to smallest lengths of baseParts.\\n                        for (j = baseParts.length; j > 0; j -= 1) {\\n                            mapValue = getOwn(map, baseParts.slice(0, j).join('/'));\\n\\n                            //baseName segment has config, find if it has one for\\n                            //this name.\\n                            if (mapValue) {\\n                                mapValue = getOwn(mapValue, nameSegment);\\n                                if (mapValue) {\\n                                    //Match, update name to the new value.\\n                                    foundMap = mapValue;\\n                                    foundI = i;\\n                                    break outerLoop;\\n                                }\\n                            }\\n                        }\\n                    }\\n\\n                    //Check for a star map match, but just hold on to it,\\n                    //if there is a shorter segment match later in a matching\\n                    //config, then favor over this star map.\\n                    if (!foundStarMap && starMap && getOwn(starMap, nameSegment)) {\\n                        foundStarMap = getOwn(starMap, nameSegment);\\n                        starI = i;\\n                    }\\n                }\\n\\n                if (!foundMap && foundStarMap) {\\n                    foundMap = foundStarMap;\\n                    foundI = starI;\\n                }\\n\\n                if (foundMap) {\\n                    nameParts.splice(0, foundI, foundMap);\\n                    name = nameParts.join('/');\\n                }\\n            }\\n\\n            // If the name points to a package's name, use\\n            // the package main instead.\\n            pkgMain = getOwn(config.pkgs, name);\\n\\n            return pkgMain ? pkgMain : name;\\n        }\\n\\n        function removeScript(name) {\\n            if (isBrowser) {\\n                each(scripts(), function (scriptNode) {\\n                    if (scriptNode.getAttribute('data-requiremodule') === name &&\\n                            scriptNode.getAttribute('data-requirecontext') === context.contextName) {\\n                        scriptNode.parentNode.removeChild(scriptNode);\\n                        return true;\\n                    }\\n                });\\n            }\\n        }\\n\\n        function hasPathFallback(id) {\\n            var pathConfig = getOwn(config.paths, id);\\n            if (pathConfig && isArray(pathConfig) && pathConfig.length > 1) {\\n                //Pop off the first array value, since it failed, and\\n                //retry\\n                pathConfig.shift();\\n                context.require.undef(id);\\n\\n                //Custom require that does not do map translation, since\\n                //ID is \\\"absolute\\\", already mapped/resolved.\\n                context.makeRequire(null, {\\n                    skipMap: true\\n                })([id]);\\n\\n                return true;\\n            }\\n        }\\n\\n        //Turns a plugin!resource to [plugin, resource]\\n        //with the plugin being undefined if the name\\n        //did not have a plugin prefix.\\n        function splitPrefix(name) {\\n            var prefix,\\n                index = name ? name.indexOf('!') : -1;\\n            if (index > -1) {\\n                prefix = name.substring(0, index);\\n                name = name.substring(index + 1, name.length);\\n            }\\n            return [prefix, name];\\n        }\\n\\n        /**\\n         * Creates a module mapping that includes plugin prefix, module\\n         * name, and path. If parentModuleMap is provided it will\\n         * also normalize the name via require.normalize()\\n         *\\n         * @param {String} name the module name\\n         * @param {String} [parentModuleMap] parent module map\\n         * for the module name, used to resolve relative names.\\n         * @param {Boolean} isNormalized: is the ID already normalized.\\n         * This is true if this call is done for a define() module ID.\\n         * @param {Boolean} applyMap: apply the map config to the ID.\\n         * Should only be true if this map is for a dependency.\\n         *\\n         * @returns {Object}\\n         */\\n        function makeModuleMap(name, parentModuleMap, isNormalized, applyMap) {\\n            var url, pluginModule, suffix, nameParts,\\n                prefix = null,\\n                parentName = parentModuleMap ? parentModuleMap.name : null,\\n                originalName = name,\\n                isDefine = true,\\n                normalizedName = '';\\n\\n            //If no name, then it means it is a require call, generate an\\n            //internal name.\\n            if (!name) {\\n                isDefine = false;\\n                name = '_@r' + (requireCounter += 1);\\n            }\\n\\n            nameParts = splitPrefix(name);\\n            prefix = nameParts[0];\\n            name = nameParts[1];\\n\\n            if (prefix) {\\n                prefix = normalize(prefix, parentName, applyMap);\\n                pluginModule = getOwn(defined, prefix);\\n            }\\n\\n            //Account for relative paths if there is a base name.\\n            if (name) {\\n                if (prefix) {\\n                    if (isNormalized) {\\n                        normalizedName = name;\\n                    } else if (pluginModule && pluginModule.normalize) {\\n                        //Plugin is loaded, use its normalize method.\\n                        normalizedName = pluginModule.normalize(name, function (name) {\\n                            return normalize(name, parentName, applyMap);\\n                        });\\n                    } else {\\n                        // If nested plugin references, then do not try to\\n                        // normalize, as it will not normalize correctly. This\\n                        // places a restriction on resourceIds, and the longer\\n                        // term solution is not to normalize until plugins are\\n                        // loaded and all normalizations to allow for async\\n                        // loading of a loader plugin. But for now, fixes the\\n                        // common uses. Details in #1131\\n                        normalizedName = name.indexOf('!') === -1 ?\\n                                         normalize(name, parentName, applyMap) :\\n                                         name;\\n                    }\\n                } else {\\n                    //A regular module.\\n                    normalizedName = normalize(name, parentName, applyMap);\\n\\n                    //Normalized name may be a plugin ID due to map config\\n                    //application in normalize. The map config values must\\n                    //already be normalized, so do not need to redo that part.\\n                    nameParts = splitPrefix(normalizedName);\\n                    prefix = nameParts[0];\\n                    normalizedName = nameParts[1];\\n                    isNormalized = true;\\n\\n                    url = context.nameToUrl(normalizedName);\\n                }\\n            }\\n\\n            //If the id is a plugin id that cannot be determined if it needs\\n            //normalization, stamp it with a unique ID so two matching relative\\n            //ids that may conflict can be separate.\\n            suffix = prefix && !pluginModule && !isNormalized ?\\n                     '_unnormalized' + (unnormalizedCounter += 1) :\\n                     '';\\n\\n            return {\\n                prefix: prefix,\\n                name: normalizedName,\\n                parentMap: parentModuleMap,\\n                unnormalized: !!suffix,\\n                url: url,\\n                originalName: originalName,\\n                isDefine: isDefine,\\n                id: (prefix ?\\n                        prefix + '!' + normalizedName :\\n                        normalizedName) + suffix\\n            };\\n        }\\n\\n        function getModule(depMap) {\\n            var id = depMap.id,\\n                mod = getOwn(registry, id);\\n\\n            if (!mod) {\\n                mod = registry[id] = new context.Module(depMap);\\n            }\\n\\n            return mod;\\n        }\\n\\n        function on(depMap, name, fn) {\\n            var id = depMap.id,\\n                mod = getOwn(registry, id);\\n\\n            if (hasProp(defined, id) &&\\n                    (!mod || mod.defineEmitComplete)) {\\n                if (name === 'defined') {\\n                    fn(defined[id]);\\n                }\\n            } else {\\n                mod = getModule(depMap);\\n                if (mod.error && name === 'error') {\\n                    fn(mod.error);\\n                } else {\\n                    mod.on(name, fn);\\n                }\\n            }\\n        }\\n\\n        function onError(err, errback) {\\n            var ids = err.requireModules,\\n                notified = false;\\n\\n            if (errback) {\\n                errback(err);\\n            } else {\\n                each(ids, function (id) {\\n                    var mod = getOwn(registry, id);\\n                    if (mod) {\\n                        //Set error on module, so it skips timeout checks.\\n                        mod.error = err;\\n                        if (mod.events.error) {\\n                            notified = true;\\n                            mod.emit('error', err);\\n                        }\\n                    }\\n                });\\n\\n                if (!notified) {\\n                    req.onError(err);\\n                }\\n            }\\n        }\\n\\n        /**\\n         * Internal method to transfer globalQueue items to this context's\\n         * defQueue.\\n         */\\n        function takeGlobalQueue() {\\n            //Push all the globalDefQueue items into the context's defQueue\\n            if (globalDefQueue.length) {\\n                each(globalDefQueue, function(queueItem) {\\n                    var id = queueItem[0];\\n                    if (typeof id === 'string') {\\n                        context.defQueueMap[id] = true;\\n                    }\\n                    defQueue.push(queueItem);\\n                });\\n                globalDefQueue = [];\\n            }\\n        }\\n\\n        handlers = {\\n            'require': function (mod) {\\n                if (mod.require) {\\n                    return mod.require;\\n                } else {\\n                    return (mod.require = context.makeRequire(mod.map));\\n                }\\n            },\\n            'exports': function (mod) {\\n                mod.usingExports = true;\\n                if (mod.map.isDefine) {\\n                    if (mod.exports) {\\n                        return (defined[mod.map.id] = mod.exports);\\n                    } else {\\n                        return (mod.exports = defined[mod.map.id] = {});\\n                    }\\n                }\\n            },\\n            'module': function (mod) {\\n                if (mod.module) {\\n                    return mod.module;\\n                } else {\\n                    return (mod.module = {\\n                        id: mod.map.id,\\n                        uri: mod.map.url,\\n                        config: function () {\\n                            return getOwn(config.config, mod.map.id) || {};\\n                        },\\n                        exports: mod.exports || (mod.exports = {})\\n                    });\\n                }\\n            }\\n        };\\n\\n        function cleanRegistry(id) {\\n            //Clean up machinery used for waiting modules.\\n            delete registry[id];\\n            delete enabledRegistry[id];\\n        }\\n\\n        function breakCycle(mod, traced, processed) {\\n            var id = mod.map.id;\\n\\n            if (mod.error) {\\n                mod.emit('error', mod.error);\\n            } else {\\n                traced[id] = true;\\n                each(mod.depMaps, function (depMap, i) {\\n                    var depId = depMap.id,\\n                        dep = getOwn(registry, depId);\\n\\n                    //Only force things that have not completed\\n                    //being defined, so still in the registry,\\n                    //and only if it has not been matched up\\n                    //in the module already.\\n                    if (dep && !mod.depMatched[i] && !processed[depId]) {\\n                        if (getOwn(traced, depId)) {\\n                            mod.defineDep(i, defined[depId]);\\n                            mod.check(); //pass false?\\n                        } else {\\n                            breakCycle(dep, traced, processed);\\n                        }\\n                    }\\n                });\\n                processed[id] = true;\\n            }\\n        }\\n\\n        function checkLoaded() {\\n            var err, usingPathFallback,\\n                waitInterval = config.waitSeconds * 1000,\\n                //It is possible to disable the wait interval by using waitSeconds of 0.\\n                expired = waitInterval && (context.startTime + waitInterval) < new Date().getTime(),\\n                noLoads = [],\\n                reqCalls = [],\\n                stillLoading = false,\\n                needCycleCheck = true;\\n\\n            //Do not bother if this call was a result of a cycle break.\\n            if (inCheckLoaded) {\\n                return;\\n            }\\n\\n            inCheckLoaded = true;\\n\\n            //Figure out the state of all the modules.\\n            eachProp(enabledRegistry, function (mod) {\\n                var map = mod.map,\\n                    modId = map.id;\\n\\n                //Skip things that are not enabled or in error state.\\n                if (!mod.enabled) {\\n                    return;\\n                }\\n\\n                if (!map.isDefine) {\\n                    reqCalls.push(mod);\\n                }\\n\\n                if (!mod.error) {\\n                    //If the module should be executed, and it has not\\n                    //been inited and time is up, remember it.\\n                    if (!mod.inited && expired) {\\n                        if (hasPathFallback(modId)) {\\n                            usingPathFallback = true;\\n                            stillLoading = true;\\n                        } else {\\n                            noLoads.push(modId);\\n                            removeScript(modId);\\n                        }\\n                    } else if (!mod.inited && mod.fetched && map.isDefine) {\\n                        stillLoading = true;\\n                        if (!map.prefix) {\\n                            //No reason to keep looking for unfinished\\n                            //loading. If the only stillLoading is a\\n                            //plugin resource though, keep going,\\n                            //because it may be that a plugin resource\\n                            //is waiting on a non-plugin cycle.\\n                            return (needCycleCheck = false);\\n                        }\\n                    }\\n                }\\n            });\\n\\n            if (expired && noLoads.length) {\\n                //If wait time expired, throw error of unloaded modules.\\n                err = makeError('timeout', 'Load timeout for modules: ' + noLoads, null, noLoads);\\n                err.contextName = context.contextName;\\n                return onError(err);\\n            }\\n\\n            //Not expired, check for a cycle.\\n            if (needCycleCheck) {\\n                each(reqCalls, function (mod) {\\n                    breakCycle(mod, {}, {});\\n                });\\n            }\\n\\n            //If still waiting on loads, and the waiting load is something\\n            //other than a plugin resource, or there are still outstanding\\n            //scripts, then just try back later.\\n            if ((!expired || usingPathFallback) && stillLoading) {\\n                //Something is still waiting to load. Wait for it, but only\\n                //if a timeout is not already in effect.\\n                if ((isBrowser || isWebWorker) && !checkLoadedTimeoutId) {\\n                    checkLoadedTimeoutId = setTimeout(function () {\\n                        checkLoadedTimeoutId = 0;\\n                        checkLoaded();\\n                    }, 50);\\n                }\\n            }\\n\\n            inCheckLoaded = false;\\n        }\\n\\n        Module = function (map) {\\n            this.events = getOwn(undefEvents, map.id) || {};\\n            this.map = map;\\n            this.shim = getOwn(config.shim, map.id);\\n            this.depExports = [];\\n            this.depMaps = [];\\n            this.depMatched = [];\\n            this.pluginMaps = {};\\n            this.depCount = 0;\\n\\n            /* this.exports this.factory\\n               this.depMaps = [],\\n               this.enabled, this.fetched\\n            */\\n        };\\n\\n        Module.prototype = {\\n            init: function (depMaps, factory, errback, options) {\\n                options = options || {};\\n\\n                //Do not do more inits if already done. Can happen if there\\n                //are multiple define calls for the same module. That is not\\n                //a normal, common case, but it is also not unexpected.\\n                if (this.inited) {\\n                    return;\\n                }\\n\\n                this.factory = factory;\\n\\n                if (errback) {\\n                    //Register for errors on this module.\\n                    this.on('error', errback);\\n                } else if (this.events.error) {\\n                    //If no errback already, but there are error listeners\\n                    //on this module, set up an errback to pass to the deps.\\n                    errback = bind(this, function (err) {\\n                        this.emit('error', err);\\n                    });\\n                }\\n\\n                //Do a copy of the dependency array, so that\\n                //source inputs are not modified. For example\\n                //\\\"shim\\\" deps are passed in here directly, and\\n                //doing a direct modification of the depMaps array\\n                //would affect that config.\\n                this.depMaps = depMaps && depMaps.slice(0);\\n\\n                this.errback = errback;\\n\\n                //Indicate this module has be initialized\\n                this.inited = true;\\n\\n                this.ignore = options.ignore;\\n\\n                //Could have option to init this module in enabled mode,\\n                //or could have been previously marked as enabled. However,\\n                //the dependencies are not known until init is called. So\\n                //if enabled previously, now trigger dependencies as enabled.\\n                if (options.enabled || this.enabled) {\\n                    //Enable this module and dependencies.\\n                    //Will call this.check()\\n                    this.enable();\\n                } else {\\n                    this.check();\\n                }\\n            },\\n\\n            defineDep: function (i, depExports) {\\n                //Because of cycles, defined callback for a given\\n                //export can be called more than once.\\n                if (!this.depMatched[i]) {\\n                    this.depMatched[i] = true;\\n                    this.depCount -= 1;\\n                    this.depExports[i] = depExports;\\n                }\\n            },\\n\\n            fetch: function () {\\n                if (this.fetched) {\\n                    return;\\n                }\\n                this.fetched = true;\\n\\n                context.startTime = (new Date()).getTime();\\n\\n                var map = this.map;\\n\\n                //If the manager is for a plugin managed resource,\\n                //ask the plugin to load it now.\\n                if (this.shim) {\\n                    context.makeRequire(this.map, {\\n                        enableBuildCallback: true\\n                    })(this.shim.deps || [], bind(this, function () {\\n                        return map.prefix ? this.callPlugin() : this.load();\\n                    }));\\n                } else {\\n                    //Regular dependency.\\n                    return map.prefix ? this.callPlugin() : this.load();\\n                }\\n            },\\n\\n            load: function () {\\n                var url = this.map.url;\\n\\n                //Regular dependency.\\n                if (!urlFetched[url]) {\\n                    urlFetched[url] = true;\\n                    context.load(this.map.id, url);\\n                }\\n            },\\n\\n            /**\\n             * Checks if the module is ready to define itself, and if so,\\n             * define it.\\n             */\\n            check: function () {\\n                if (!this.enabled || this.enabling) {\\n                    return;\\n                }\\n\\n                var err, cjsModule,\\n                    id = this.map.id,\\n                    depExports = this.depExports,\\n                    exports = this.exports,\\n                    factory = this.factory;\\n\\n                if (!this.inited) {\\n                    // Only fetch if not already in the defQueue.\\n                    if (!hasProp(context.defQueueMap, id)) {\\n                        this.fetch();\\n                    }\\n                } else if (this.error) {\\n                    this.emit('error', this.error);\\n                } else if (!this.defining) {\\n                    //The factory could trigger another require call\\n                    //that would result in checking this module to\\n                    //define itself again. If already in the process\\n                    //of doing that, skip this work.\\n                    this.defining = true;\\n\\n                    if (this.depCount < 1 && !this.defined) {\\n                        if (isFunction(factory)) {\\n                            //If there is an error listener, favor passing\\n                            //to that instead of throwing an error. However,\\n                            //only do it for define()'d  modules. require\\n                            //errbacks should not be called for failures in\\n                            //their callbacks (#699). However if a global\\n                            //onError is set, use that.\\n                            if ((this.events.error && this.map.isDefine) ||\\n                                req.onError !== defaultOnError) {\\n                                try {\\n                                    exports = context.execCb(id, factory, depExports, exports);\\n                                } catch (e) {\\n                                    err = e;\\n                                }\\n                            } else {\\n                                exports = context.execCb(id, factory, depExports, exports);\\n                            }\\n\\n                            // Favor return value over exports. If node/cjs in play,\\n                            // then will not have a return value anyway. Favor\\n                            // module.exports assignment over exports object.\\n                            if (this.map.isDefine && exports === undefined) {\\n                                cjsModule = this.module;\\n                                if (cjsModule) {\\n                                    exports = cjsModule.exports;\\n                                } else if (this.usingExports) {\\n                                    //exports already set the defined value.\\n                                    exports = this.exports;\\n                                }\\n                            }\\n\\n                            if (err) {\\n                                err.requireMap = this.map;\\n                                err.requireModules = this.map.isDefine ? [this.map.id] : null;\\n                                err.requireType = this.map.isDefine ? 'define' : 'require';\\n                                return onError((this.error = err));\\n                            }\\n\\n                        } else {\\n                            //Just a literal value\\n                            exports = factory;\\n                        }\\n\\n                        this.exports = exports;\\n\\n                        if (this.map.isDefine && !this.ignore) {\\n                            defined[id] = exports;\\n\\n                            if (req.onResourceLoad) {\\n                                var resLoadMaps = [];\\n                                each(this.depMaps, function (depMap) {\\n                                    resLoadMaps.push(depMap.normalizedMap || depMap);\\n                                });\\n                                req.onResourceLoad(context, this.map, resLoadMaps);\\n                            }\\n                        }\\n\\n                        //Clean up\\n                        cleanRegistry(id);\\n\\n                        this.defined = true;\\n                    }\\n\\n                    //Finished the define stage. Allow calling check again\\n                    //to allow define notifications below in the case of a\\n                    //cycle.\\n                    this.defining = false;\\n\\n                    if (this.defined && !this.defineEmitted) {\\n                        this.defineEmitted = true;\\n                        this.emit('defined', this.exports);\\n                        this.defineEmitComplete = true;\\n                    }\\n\\n                }\\n            },\\n\\n            callPlugin: function () {\\n                var map = this.map,\\n                    id = map.id,\\n                    //Map already normalized the prefix.\\n                    pluginMap = makeModuleMap(map.prefix);\\n\\n                //Mark this as a dependency for this plugin, so it\\n                //can be traced for cycles.\\n                this.depMaps.push(pluginMap);\\n\\n                on(pluginMap, 'defined', bind(this, function (plugin) {\\n                    var load, normalizedMap, normalizedMod,\\n                        bundleId = getOwn(bundlesMap, this.map.id),\\n                        name = this.map.name,\\n                        parentName = this.map.parentMap ? this.map.parentMap.name : null,\\n                        localRequire = context.makeRequire(map.parentMap, {\\n                            enableBuildCallback: true\\n                        });\\n\\n                    //If current map is not normalized, wait for that\\n                    //normalized name to load instead of continuing.\\n                    if (this.map.unnormalized) {\\n                        //Normalize the ID if the plugin allows it.\\n                        if (plugin.normalize) {\\n                            name = plugin.normalize(name, function (name) {\\n                                return normalize(name, parentName, true);\\n                            }) || '';\\n                        }\\n\\n                        //prefix and name should already be normalized, no need\\n                        //for applying map config again either.\\n                        normalizedMap = makeModuleMap(map.prefix + '!' + name,\\n                                                      this.map.parentMap,\\n                                                      true);\\n                        on(normalizedMap,\\n                            'defined', bind(this, function (value) {\\n                                this.map.normalizedMap = normalizedMap;\\n                                this.init([], function () { return value; }, null, {\\n                                    enabled: true,\\n                                    ignore: true\\n                                });\\n                            }));\\n\\n                        normalizedMod = getOwn(registry, normalizedMap.id);\\n                        if (normalizedMod) {\\n                            //Mark this as a dependency for this plugin, so it\\n                            //can be traced for cycles.\\n                            this.depMaps.push(normalizedMap);\\n\\n                            if (this.events.error) {\\n                                normalizedMod.on('error', bind(this, function (err) {\\n                                    this.emit('error', err);\\n                                }));\\n                            }\\n                            normalizedMod.enable();\\n                        }\\n\\n                        return;\\n                    }\\n\\n                    //If a paths config, then just load that file instead to\\n                    //resolve the plugin, as it is built into that paths layer.\\n                    if (bundleId) {\\n                        this.map.url = context.nameToUrl(bundleId);\\n                        this.load();\\n                        return;\\n                    }\\n\\n                    load = bind(this, function (value) {\\n                        this.init([], function () { return value; }, null, {\\n                            enabled: true\\n                        });\\n                    });\\n\\n                    load.error = bind(this, function (err) {\\n                        this.inited = true;\\n                        this.error = err;\\n                        err.requireModules = [id];\\n\\n                        //Remove temp unnormalized modules for this module,\\n                        //since they will never be resolved otherwise now.\\n                        eachProp(registry, function (mod) {\\n                            if (mod.map.id.indexOf(id + '_unnormalized') === 0) {\\n                                cleanRegistry(mod.map.id);\\n                            }\\n                        });\\n\\n                        onError(err);\\n                    });\\n\\n                    //Allow plugins to load other code without having to know the\\n                    //context or how to 'complete' the load.\\n                    load.fromText = bind(this, function (text, textAlt) {\\n                        /*jslint evil: true */\\n                        var moduleName = map.name,\\n                            moduleMap = makeModuleMap(moduleName),\\n                            hasInteractive = useInteractive;\\n\\n                        //As of 2.1.0, support just passing the text, to reinforce\\n                        //fromText only being called once per resource. Still\\n                        //support old style of passing moduleName but discard\\n                        //that moduleName in favor of the internal ref.\\n                        if (textAlt) {\\n                            text = textAlt;\\n                        }\\n\\n                        //Turn off interactive script matching for IE for any define\\n                        //calls in the text, then turn it back on at the end.\\n                        if (hasInteractive) {\\n                            useInteractive = false;\\n                        }\\n\\n                        //Prime the system by creating a module instance for\\n                        //it.\\n                        getModule(moduleMap);\\n\\n                        //Transfer any config to this other module.\\n                        if (hasProp(config.config, id)) {\\n                            config.config[moduleName] = config.config[id];\\n                        }\\n\\n                        try {\\n                            req.exec(text);\\n                        } catch (e) {\\n                            return onError(makeError('fromtexteval',\\n                                             'fromText eval for ' + id +\\n                                            ' failed: ' + e,\\n                                             e,\\n                                             [id]));\\n                        }\\n\\n                        if (hasInteractive) {\\n                            useInteractive = true;\\n                        }\\n\\n                        //Mark this as a dependency for the plugin\\n                        //resource\\n                        this.depMaps.push(moduleMap);\\n\\n                        //Support anonymous modules.\\n                        context.completeLoad(moduleName);\\n\\n                        //Bind the value of that module to the value for this\\n                        //resource ID.\\n                        localRequire([moduleName], load);\\n                    });\\n\\n                    //Use parentName here since the plugin's name is not reliable,\\n                    //could be some weird string with no path that actually wants to\\n                    //reference the parentName's path.\\n                    plugin.load(map.name, localRequire, load, config);\\n                }));\\n\\n                context.enable(pluginMap, this);\\n                this.pluginMaps[pluginMap.id] = pluginMap;\\n            },\\n\\n            enable: function () {\\n                enabledRegistry[this.map.id] = this;\\n                this.enabled = true;\\n\\n                //Set flag mentioning that the module is enabling,\\n                //so that immediate calls to the defined callbacks\\n                //for dependencies do not trigger inadvertent load\\n                //with the depCount still being zero.\\n                this.enabling = true;\\n\\n                //Enable each dependency\\n                each(this.depMaps, bind(this, function (depMap, i) {\\n                    var id, mod, handler;\\n\\n                    if (typeof depMap === 'string') {\\n                        //Dependency needs to be converted to a depMap\\n                        //and wired up to this module.\\n                        depMap = makeModuleMap(depMap,\\n                                               (this.map.isDefine ? this.map : this.map.parentMap),\\n                                               false,\\n                                               !this.skipMap);\\n                        this.depMaps[i] = depMap;\\n\\n                        handler = getOwn(handlers, depMap.id);\\n\\n                        if (handler) {\\n                            this.depExports[i] = handler(this);\\n                            return;\\n                        }\\n\\n                        this.depCount += 1;\\n\\n                        on(depMap, 'defined', bind(this, function (depExports) {\\n                            if (this.undefed) {\\n                                return;\\n                            }\\n                            this.defineDep(i, depExports);\\n                            this.check();\\n                        }));\\n\\n                        if (this.errback) {\\n                            on(depMap, 'error', bind(this, this.errback));\\n                        } else if (this.events.error) {\\n                            // No direct errback on this module, but something\\n                            // else is listening for errors, so be sure to\\n                            // propagate the error correctly.\\n                            on(depMap, 'error', bind(this, function(err) {\\n                                this.emit('error', err);\\n                            }));\\n                        }\\n                    }\\n\\n                    id = depMap.id;\\n                    mod = registry[id];\\n\\n                    //Skip special modules like 'require', 'exports', 'module'\\n                    //Also, don't call enable if it is already enabled,\\n                    //important in circular dependency cases.\\n                    if (!hasProp(handlers, id) && mod && !mod.enabled) {\\n                        context.enable(depMap, this);\\n                    }\\n                }));\\n\\n                //Enable each plugin that is used in\\n                //a dependency\\n                eachProp(this.pluginMaps, bind(this, function (pluginMap) {\\n                    var mod = getOwn(registry, pluginMap.id);\\n                    if (mod && !mod.enabled) {\\n                        context.enable(pluginMap, this);\\n                    }\\n                }));\\n\\n                this.enabling = false;\\n\\n                this.check();\\n            },\\n\\n            on: function (name, cb) {\\n                var cbs = this.events[name];\\n                if (!cbs) {\\n                    cbs = this.events[name] = [];\\n                }\\n                cbs.push(cb);\\n            },\\n\\n            emit: function (name, evt) {\\n                each(this.events[name], function (cb) {\\n                    cb(evt);\\n                });\\n                if (name === 'error') {\\n                    //Now that the error handler was triggered, remove\\n                    //the listeners, since this broken Module instance\\n                    //can stay around for a while in the registry.\\n                    delete this.events[name];\\n                }\\n            }\\n        };\\n\\n        function callGetModule(args) {\\n            //Skip modules already defined.\\n            if (!hasProp(defined, args[0])) {\\n                getModule(makeModuleMap(args[0], null, true)).init(args[1], args[2]);\\n            }\\n        }\\n\\n        function removeListener(node, func, name, ieName) {\\n            //Favor detachEvent because of IE9\\n            //issue, see attachEvent/addEventListener comment elsewhere\\n            //in this file.\\n            if (node.detachEvent && !isOpera) {\\n                //Probably IE. If not it will throw an error, which will be\\n                //useful to know.\\n                if (ieName) {\\n                    node.detachEvent(ieName, func);\\n                }\\n            } else {\\n                node.removeEventListener(name, func, false);\\n            }\\n        }\\n\\n        /**\\n         * Given an event from a script node, get the requirejs info from it,\\n         * and then removes the event listeners on the node.\\n         * @param {Event} evt\\n         * @returns {Object}\\n         */\\n        function getScriptData(evt) {\\n            //Using currentTarget instead of target for Firefox 2.0's sake. Not\\n            //all old browsers will be supported, but this one was easy enough\\n            //to support and still makes sense.\\n            var node = evt.currentTarget || evt.srcElement;\\n\\n            //Remove the listeners once here.\\n            // removeListener(node, context.onScriptLoad, 'load', 'onreadystatechange');\\n            // removeListener(node, context.onScriptError, 'error');\\n\\n            return {\\n                node: node,\\n                id: node && node.getAttribute('data-requiremodule')\\n            };\\n        }\\n\\n        function intakeDefines() {\\n            var args;\\n\\n            //Any defined modules in the global queue, intake them now.\\n            takeGlobalQueue();\\n\\n            //Make sure any remaining defQueue items get properly processed.\\n            while (defQueue.length) {\\n                args = defQueue.shift();\\n                if (args[0] === null) {\\n                    return onError(makeError('mismatch', 'Mismatched anonymous define() module: ' +\\n                        args[args.length - 1]));\\n                } else {\\n                    //args are id, deps, factory. Should be normalized by the\\n                    //define() function.\\n                    callGetModule(args);\\n                }\\n            }\\n            context.defQueueMap = {};\\n        }\\n\\n        context = {\\n            config: config,\\n            contextName: contextName,\\n            registry: registry,\\n            defined: defined,\\n            urlFetched: urlFetched,\\n            defQueue: defQueue,\\n            defQueueMap: {},\\n            Module: Module,\\n            makeModuleMap: makeModuleMap,\\n            nextTick: req.nextTick,\\n            onError: onError,\\n\\n            /**\\n             * Set a configuration for the context.\\n             * @param {Object} cfg config object to integrate.\\n             */\\n            configure: function (cfg) {\\n                //Make sure the baseUrl ends in a slash.\\n                if (cfg.baseUrl) {\\n                    if (cfg.baseUrl.charAt(cfg.baseUrl.length - 1) !== '/') {\\n                        cfg.baseUrl += '/';\\n                    }\\n                }\\n\\n                // Convert old style urlArgs string to a function.\\n                if (typeof cfg.urlArgs === 'string') {\\n                    var urlArgs = cfg.urlArgs;\\n                    cfg.urlArgs = function(id, url) {\\n                        return (url.indexOf('?') === -1 ? '?' : '&') + urlArgs;\\n                    };\\n                }\\n\\n                //Save off the paths since they require special processing,\\n                //they are additive.\\n                var shim = config.shim,\\n                    objs = {\\n                        paths: true,\\n                        bundles: true,\\n                        config: true,\\n                        map: true\\n                    };\\n\\n                eachProp(cfg, function (value, prop) {\\n                    if (objs[prop]) {\\n                        if (!config[prop]) {\\n                            config[prop] = {};\\n                        }\\n                        mixin(config[prop], value, true, true);\\n                    } else {\\n                        config[prop] = value;\\n                    }\\n                });\\n\\n                //Reverse map the bundles\\n                if (cfg.bundles) {\\n                    eachProp(cfg.bundles, function (value, prop) {\\n                        each(value, function (v) {\\n                            if (v !== prop) {\\n                                bundlesMap[v] = prop;\\n                            }\\n                        });\\n                    });\\n                }\\n\\n                //Merge shim\\n                if (cfg.shim) {\\n                    eachProp(cfg.shim, function (value, id) {\\n                        //Normalize the structure\\n                        if (isArray(value)) {\\n                            value = {\\n                                deps: value\\n                            };\\n                        }\\n                        if ((value.exports || value.init) && !value.exportsFn) {\\n                            value.exportsFn = context.makeShimExports(value);\\n                        }\\n                        shim[id] = value;\\n                    });\\n                    config.shim = shim;\\n                }\\n\\n                //Adjust packages if necessary.\\n                if (cfg.packages) {\\n                    each(cfg.packages, function (pkgObj) {\\n                        var location, name;\\n\\n                        pkgObj = typeof pkgObj === 'string' ? {name: pkgObj} : pkgObj;\\n\\n                        name = pkgObj.name;\\n                        location = pkgObj.location;\\n                        if (location) {\\n                            config.paths[name] = pkgObj.location;\\n                        }\\n\\n                        //Save pointer to main module ID for pkg name.\\n                        //Remove leading dot in main, so main paths are normalized,\\n                        //and remove any trailing .js, since different package\\n                        //envs have different conventions: some use a module name,\\n                        //some use a file name.\\n                        config.pkgs[name] = pkgObj.name + '/' + (pkgObj.main || 'main')\\n                                     .replace(currDirRegExp, '')\\n                                     .replace(jsSuffixRegExp, '');\\n                    });\\n                }\\n\\n                //If there are any \\\"waiting to execute\\\" modules in the registry,\\n                //update the maps for them, since their info, like URLs to load,\\n                //may have changed.\\n                eachProp(registry, function (mod, id) {\\n                    //If module already has init called, since it is too\\n                    //late to modify them, and ignore unnormalized ones\\n                    //since they are transient.\\n                    if (!mod.inited && !mod.map.unnormalized) {\\n                        mod.map = makeModuleMap(id, null, true);\\n                    }\\n                });\\n\\n                //If a deps array or a config callback is specified, then call\\n                //require with those args. This is useful when require is defined as a\\n                //config object before require.js is loaded.\\n                if (cfg.deps || cfg.callback) {\\n                    context.require(cfg.deps || [], cfg.callback);\\n                }\\n            },\\n\\n            makeShimExports: function (value) {\\n                function fn() {\\n                    var ret;\\n                    if (value.init) {\\n                        ret = value.init.apply(global, arguments);\\n                    }\\n                    return ret || (value.exports && getGlobal(value.exports));\\n                }\\n                return fn;\\n            },\\n\\n            makeRequire: function (relMap, options) {\\n                options = options || {};\\n\\n                function localRequire(deps, callback, errback) {\\n                    var id, map, requireMod;\\n\\n                    if (options.enableBuildCallback && callback && isFunction(callback)) {\\n                        callback.__requireJsBuild = true;\\n                    }\\n\\n                    if (typeof deps === 'string') {\\n                        if (isFunction(callback)) {\\n                            //Invalid call\\n                            return onError(makeError('requireargs', 'Invalid require call'), errback);\\n                        }\\n\\n                        //If require|exports|module are requested, get the\\n                        //value for them from the special handlers. Caveat:\\n                        //this only works while module is being defined.\\n                        if (relMap && hasProp(handlers, deps)) {\\n                            return handlers[deps](registry[relMap.id]);\\n                        }\\n\\n                        //Synchronous access to one module. If require.get is\\n                        //available (as in the Node adapter), prefer that.\\n                        if (req.get) {\\n                            return req.get(context, deps, relMap, localRequire);\\n                        }\\n\\n                        //Normalize module name, if it contains . or ..\\n                        map = makeModuleMap(deps, relMap, false, true);\\n                        id = map.id;\\n\\n                        if (!hasProp(defined, id)) {\\n                            return onError(makeError('notloaded', 'Module name \\\"' +\\n                                        id +\\n                                        '\\\" has not been loaded yet for context: ' +\\n                                        contextName +\\n                                        (relMap ? '' : '. Use require([])')));\\n                        }\\n                        return defined[id];\\n                    }\\n\\n                    //Grab defines waiting in the global queue.\\n                    intakeDefines();\\n\\n                    //Mark all the dependencies as needing to be loaded.\\n                    context.nextTick(function () {\\n                        //Some defines could have been added since the\\n                        //require call, collect them.\\n                        intakeDefines();\\n\\n                        requireMod = getModule(makeModuleMap(null, relMap));\\n\\n                        //Store if map config should be applied to this require\\n                        //call for dependencies.\\n                        requireMod.skipMap = options.skipMap;\\n\\n                        requireMod.init(deps, callback, errback, {\\n                            enabled: true\\n                        });\\n\\n                        checkLoaded();\\n                    });\\n\\n                    return localRequire;\\n                }\\n\\n                mixin(localRequire, {\\n                    isBrowser: isBrowser,\\n\\n                    /**\\n                     * Converts a module name + .extension into an URL path.\\n                     * *Requires* the use of a module name. It does not support using\\n                     * plain URLs like nameToUrl.\\n                     */\\n                    toUrl: function (moduleNamePlusExt) {\\n                        var ext,\\n                            index = moduleNamePlusExt.lastIndexOf('.'),\\n                            segment = moduleNamePlusExt.split('/')[0],\\n                            isRelative = segment === '.' || segment === '..';\\n\\n                        //Have a file extension alias, and it is not the\\n                        //dots from a relative path.\\n                        if (index !== -1 && (!isRelative || index > 1)) {\\n                            ext = moduleNamePlusExt.substring(index, moduleNamePlusExt.length);\\n                            moduleNamePlusExt = moduleNamePlusExt.substring(0, index);\\n                        }\\n\\n                        return context.nameToUrl(normalize(moduleNamePlusExt,\\n                                                relMap && relMap.id, true), ext,  true);\\n                    },\\n\\n                    defined: function (id) {\\n                        return hasProp(defined, makeModuleMap(id, relMap, false, true).id);\\n                    },\\n\\n                    specified: function (id) {\\n                        id = makeModuleMap(id, relMap, false, true).id;\\n                        return hasProp(defined, id) || hasProp(registry, id);\\n                    }\\n                });\\n\\n                //Only allow undef on top level require calls\\n                if (!relMap) {\\n                    localRequire.undef = function (id) {\\n                        //Bind any waiting define() calls to this context,\\n                        //fix for #408\\n                        takeGlobalQueue();\\n\\n                        var map = makeModuleMap(id, relMap, true),\\n                            mod = getOwn(registry, id);\\n\\n                        mod.undefed = true;\\n                        removeScript(id);\\n\\n                        delete defined[id];\\n                        delete urlFetched[map.url];\\n                        delete undefEvents[id];\\n\\n                        //Clean queued defines too. Go backwards\\n                        //in array so that the splices do not\\n                        //mess up the iteration.\\n                        eachReverse(defQueue, function(args, i) {\\n                            if (args[0] === id) {\\n                                defQueue.splice(i, 1);\\n                            }\\n                        });\\n                        delete context.defQueueMap[id];\\n\\n                        if (mod) {\\n                            //Hold on to listeners in case the\\n                            //module will be attempted to be reloaded\\n                            //using a different config.\\n                            if (mod.events.defined) {\\n                                undefEvents[id] = mod.events;\\n                            }\\n\\n                            cleanRegistry(id);\\n                        }\\n                    };\\n                }\\n\\n                return localRequire;\\n            },\\n\\n            /**\\n             * Called to enable a module if it is still in the registry\\n             * awaiting enablement. A second arg, parent, the parent module,\\n             * is passed in for context, when this method is overridden by\\n             * the optimizer. Not shown here to keep code compact.\\n             */\\n            enable: function (depMap) {\\n                var mod = getOwn(registry, depMap.id);\\n                if (mod) {\\n                    getModule(depMap).enable();\\n                }\\n            },\\n\\n            /**\\n             * Internal method used by environment adapters to complete a load event.\\n             * A load event could be a script load or just a load pass from a synchronous\\n             * load call.\\n             * @param {String} moduleName the name of the module to potentially complete.\\n             */\\n            completeLoad: function (moduleName) {\\n                var found, args, mod,\\n                    shim = getOwn(config.shim, moduleName) || {},\\n                    shExports = shim.exports;\\n\\n                takeGlobalQueue();\\n\\n                while (defQueue.length) {\\n                    args = defQueue.shift();\\n                    if (args[0] === null) {\\n                        args[0] = moduleName;\\n                        //If already found an anonymous module and bound it\\n                        //to this name, then this is some other anon module\\n                        //waiting for its completeLoad to fire.\\n                        if (found) {\\n                            break;\\n                        }\\n                        found = true;\\n                    } else if (args[0] === moduleName) {\\n                        //Found matching define call for this script!\\n                        found = true;\\n                    }\\n\\n                    callGetModule(args);\\n                }\\n                context.defQueueMap = {};\\n\\n                //Do this after the cycle of callGetModule in case the result\\n                //of those calls/init calls changes the registry.\\n                mod = getOwn(registry, moduleName);\\n\\n                if (!found && !hasProp(defined, moduleName) && mod && !mod.inited) {\\n                    if (config.enforceDefine && (!shExports || !getGlobal(shExports))) {\\n                        if (hasPathFallback(moduleName)) {\\n                            return;\\n                        } else {\\n                            return onError(makeError('nodefine',\\n                                             'No define call for ' + moduleName,\\n                                             null,\\n                                             [moduleName]));\\n                        }\\n                    } else {\\n                        //A script that does not call define(), so just simulate\\n                        //the call for it.\\n                        callGetModule([moduleName, (shim.deps || []), shim.exportsFn]);\\n                    }\\n                }\\n\\n                checkLoaded();\\n            },\\n\\n            /**\\n             * Converts a module name to a file path. Supports cases where\\n             * moduleName may actually be just an URL.\\n             * Note that it **does not** call normalize on the moduleName,\\n             * it is assumed to have already been normalized. This is an\\n             * internal API, not a public one. Use toUrl for the public API.\\n             */\\n            nameToUrl: function (moduleName, ext, skipExt) {\\n                var paths, syms, i, parentModule, url,\\n                    parentPath, bundleId,\\n                    pkgMain = getOwn(config.pkgs, moduleName);\\n\\n                if (pkgMain) {\\n                    moduleName = pkgMain;\\n                }\\n\\n                bundleId = getOwn(bundlesMap, moduleName);\\n\\n                if (bundleId) {\\n                    return context.nameToUrl(bundleId, ext, skipExt);\\n                }\\n\\n                //If a colon is in the URL, it indicates a protocol is used and it is just\\n                //an URL to a file, or if it starts with a slash, contains a query arg (i.e. ?)\\n                //or ends with .js, then assume the user meant to use an url and not a module id.\\n                //The slash is important for protocol-less URLs as well as full paths.\\n                if (req.jsExtRegExp.test(moduleName)) {\\n                    //Just a plain path, not module name lookup, so just return it.\\n                    //Add extension if it is included. This is a bit wonky, only non-.js things pass\\n                    //an extension, this method probably needs to be reworked.\\n                    url = moduleName + (ext || '');\\n                } else {\\n                    //A module that needs to be converted to a path.\\n                    paths = config.paths;\\n\\n                    syms = moduleName.split('/');\\n                    //For each module name segment, see if there is a path\\n                    //registered for it. Start with most specific name\\n                    //and work up from it.\\n                    for (i = syms.length; i > 0; i -= 1) {\\n                        parentModule = syms.slice(0, i).join('/');\\n\\n                        parentPath = getOwn(paths, parentModule);\\n                        if (parentPath) {\\n                            //If an array, it means there are a few choices,\\n                            //Choose the one that is desired\\n                            if (isArray(parentPath)) {\\n                                parentPath = parentPath[0];\\n                            }\\n                            syms.splice(0, i, parentPath);\\n                            break;\\n                        }\\n                    }\\n\\n                    //Join the path parts together, then figure out if baseUrl is needed.\\n                    url = syms.join('/');\\n                    url += (ext || (/^data\\\\:|^blob\\\\:|\\\\?/.test(url) || skipExt ? '' : '.js'));\\n                    url = (url.charAt(0) === '/' || url.match(/^[\\\\w\\\\+\\\\.\\\\-]+:/) ? '' : config.baseUrl) + url;\\n                }\\n\\n                return config.urlArgs && !/^blob\\\\:/.test(url) ?\\n                       url + config.urlArgs(moduleName, url) : url;\\n            },\\n\\n            //Delegates to req.load. Broken out as a separate function to\\n            //allow overriding in the optimizer.\\n            load: function (id, url) {\\n                req.load(context, id, url);\\n            },\\n\\n            /**\\n             * Executes a module callback function. Broken out as a separate function\\n             * solely to allow the build system to sequence the files in the built\\n             * layer in the right sequence.\\n             *\\n             * @private\\n             */\\n            execCb: function (name, callback, args, exports) {\\n                return callback.apply(exports, args);\\n            },\\n\\n            /**\\n             * callback for script loads, used to check status of loading.\\n             *\\n             * @param {Event} evt the event from the browser for the script\\n             * that was loaded.\\n             */\\n            onScriptLoad: function (evt) {\\n                //Using currentTarget instead of target for Firefox 2.0's sake. Not\\n                //all old browsers will be supported, but this one was easy enough\\n                //to support and still makes sense.\\n                if (evt.type === 'load' ||\\n                        (readyRegExp.test((evt.currentTarget || evt.srcElement).readyState))) {\\n                    //Reset interactive script so a script node is not held onto for\\n                    //to long.\\n                    interactiveScript = null;\\n\\n                    //Pull out the name of the module and the context.\\n                    var data = getScriptData(evt);\\n                    context.completeLoad(data.id);\\n                }\\n            },\\n\\n            /**\\n             * Callback for script errors.\\n             */\\n            onScriptError: function (evt) {\\n                var data = getScriptData(evt);\\n                if (!hasPathFallback(data.id)) {\\n                    var parents = [];\\n                    eachProp(registry, function(value, key) {\\n                        if (key.indexOf('_@r') !== 0) {\\n                            each(value.depMaps, function(depMap) {\\n                                if (depMap.id === data.id) {\\n                                    parents.push(key);\\n                                    return true;\\n                                }\\n                            });\\n                        }\\n                    });\\n                    return onError(makeError('scripterror', 'Script error for \\\"' + data.id +\\n                                             (parents.length ?\\n                                             '\\\", needed by: ' + parents.join(', ') :\\n                                             '\\\"'), evt, [data.id]));\\n                }\\n            }\\n        };\\n\\n        context.require = context.makeRequire();\\n        return context;\\n    }\\n\\n    /**\\n     * Main entry point.\\n     *\\n     * If the only argument to require is a string, then the module that\\n     * is represented by that string is fetched for the appropriate context.\\n     *\\n     * If the first argument is an array, then it will be treated as an array\\n     * of dependency string names to fetch. An optional function callback can\\n     * be specified to execute when all of those dependencies are available.\\n     *\\n     * Make a local req variable to help Caja compliance (it assumes things\\n     * on a require that are not standardized), and to give a short\\n     * name for minification/local scope use.\\n     */\\n    req = requirejs = function (deps, callback, errback, optional) {\\n\\n        //Find the right context, use default\\n        var context, config,\\n            contextName = defContextName;\\n\\n        // Determine if have config object in the call.\\n        if (!isArray(deps) && typeof deps !== 'string') {\\n            // deps is a config object\\n            config = deps;\\n            if (isArray(callback)) {\\n                // Adjust args if there are dependencies\\n                deps = callback;\\n                callback = errback;\\n                errback = optional;\\n            } else {\\n                deps = [];\\n            }\\n        }\\n\\n        if (config && config.context) {\\n            contextName = config.context;\\n        }\\n\\n        context = getOwn(contexts, contextName);\\n        if (!context) {\\n            context = contexts[contextName] = req.s.newContext(contextName);\\n        }\\n\\n        if (config) {\\n            context.configure(config);\\n        }\\n\\n        return context.require(deps, callback, errback);\\n    };\\n\\n    /**\\n     * Support require.config() to make it easier to cooperate with other\\n     * AMD loaders on globally agreed names.\\n     */\\n    req.config = function (config) {\\n        return req(config);\\n    };\\n\\n    /**\\n     * Execute something after the current tick\\n     * of the event loop. Override for other envs\\n     * that have a better solution than setTimeout.\\n     * @param  {Function} fn function to execute later.\\n     */\\n    req.nextTick = typeof setTimeout !== 'undefined' ? function (fn) {\\n        setTimeout(fn, 4);\\n    } : function (fn) { fn(); };\\n\\n    /**\\n     * Export require as a global, but only if it does not already exist.\\n     */\\n    if (!requireJSRequire) {\\n        requireJSRequire = req;\\n    }\\n\\n    req.version = version;\\n\\n    //Used to filter out dependencies that are already paths.\\n    req.jsExtRegExp = /^\\\\/|:|\\\\?|\\\\.js$/;\\n    req.isBrowser = isBrowser;\\n    s = req.s = {\\n        contexts: contexts,\\n        newContext: newContext\\n    };\\n\\n    //Create default context.\\n    req({});\\n\\n    //Exports some context-sensitive methods on global require.\\n    each([\\n        'toUrl',\\n        'undef',\\n        'defined',\\n        'specified'\\n    ], function (prop) {\\n        //Reference from contexts instead of early binding to default context,\\n        //so that during builds, the latest instance of the default context\\n        //with its config gets used.\\n        req[prop] = function () {\\n            var ctx = contexts[defContextName];\\n            return ctx.require[prop].apply(ctx, arguments);\\n        };\\n    });\\n\\n    if (isBrowser) {\\n        head = s.head = document.getElementsByTagName('head')[0];\\n        //If BASE tag is in play, using appendChild is a problem for IE6.\\n        //When that browser dies, this can be removed. Details in this jQuery bug:\\n        //http://dev.jquery.com/ticket/2709\\n        baseElement = document.getElementsByTagName('base')[0];\\n        if (baseElement) {\\n            head = s.head = baseElement.parentNode;\\n        }\\n    }\\n\\n    /**\\n     * Any errors that require explicitly generates will be passed to this\\n     * function. Intercept/override it if you want custom error handling.\\n     * @param {Error} err the error object.\\n     */\\n    req.onError = defaultOnError;\\n\\n    /**\\n     * Creates the node for the load command. Only used in browser envs.\\n     */\\n    req.createNode = function (config, moduleName, url) {\\n        var node = config.xhtml ?\\n                document.createElementNS('http://www.w3.org/1999/xhtml', 'html:script') :\\n                document.createElement('script');\\n        node.type = config.scriptType || 'text/javascript';\\n        node.charset = 'utf-8';\\n        node.async = true;\\n        return node;\\n    };\\n\\n    /**\\n     * Does the request to load a module for the browser case.\\n     * Make this a separate function to allow other environments\\n     * to override it.\\n     *\\n     * @param {Object} context the require context to find state.\\n     * @param {String} moduleName the name of the module.\\n     * @param {Object} url the URL to the module.\\n     */\\n    req.load = function (context, moduleName, url) {\\n        var config = (context && context.config) || {},\\n            node;\\n        if (isBrowser) {\\n            //In the browser so use a script tag\\n            node = req.createNode(config, moduleName, url);\\n\\n            node.setAttribute('data-requirecontext', context.contextName);\\n            node.setAttribute('data-requiremodule', moduleName);\\n\\n            //Set up load listener. Test attachEvent first because IE9 has\\n            //a subtle issue in its addEventListener and script onload firings\\n            //that do not match the behavior of all other browsers with\\n            //addEventListener support, which fire the onload event for a\\n            //script right after the script execution. See:\\n            //https://connect.microsoft.com/IE/feedback/details/648057/script-onload-event-is-not-fired-immediately-after-script-execution\\n            //UNFORTUNATELY Opera implements attachEvent but does not follow the script\\n            //script execution mode.\\n            if (node.attachEvent &&\\n                    //Check if node.attachEvent is artificially added by custom script or\\n                    //natively supported by browser\\n                    //read https://github.com/requirejs/requirejs/issues/187\\n                    //if we can NOT find [native code] then it must NOT natively supported.\\n                    //in IE8, node.attachEvent does not have toString()\\n                    //Note the test for \\\"[native code\\\" with no closing brace, see:\\n                    //https://github.com/requirejs/requirejs/issues/273\\n                    !(node.attachEvent.toString && node.attachEvent.toString().indexOf('[native code') < 0) &&\\n                    !isOpera) {\\n                //Probably IE. IE (at least 6-8) do not fire\\n                //script onload right after executing the script, so\\n                //we cannot tie the anonymous define call to a name.\\n                //However, IE reports the script as being in 'interactive'\\n                //readyState at the time of the define call.\\n                useInteractive = true;\\n\\n                node.attachEvent('onreadystatechange', context.onScriptLoad);\\n                //It would be great to add an error handler here to catch\\n                //404s in IE9+. However, onreadystatechange will fire before\\n                //the error handler, so that does not help. If addEventListener\\n                //is used, then IE will fire error before load, but we cannot\\n                //use that pathway given the connect.microsoft.com issue\\n                //mentioned above about not doing the 'script execute,\\n                //then fire the script load event listener before execute\\n                //next script' that other browsers do.\\n                //Best hope: IE10 fixes the issues,\\n                //and then destroys all installs of IE 6-9.\\n                //node.attachEvent('onerror', context.onScriptError);\\n            } else {\\n                node.addEventListener('load', context.onScriptLoad, false);\\n                node.addEventListener('error', context.onScriptError, false);\\n            }\\n            node.src = url;\\n\\n            //Calling onNodeCreated after all properties on the node have been\\n            //set, but before it is placed in the DOM.\\n            if (config.onNodeCreated) {\\n                config.onNodeCreated(node, config, moduleName, url);\\n            }\\n\\n            //For some cache cases in IE 6-8, the script executes before the end\\n            //of the appendChild execution, so to tie an anonymous define\\n            //call to the module name (which is stored on the node), hold on\\n            //to a reference to this node, but clear after the DOM insertion.\\n            currentlyAddingScript = node;\\n            if (baseElement) {\\n                // head.insertBefore(node, baseElement);\\n            } else {\\n                // head.appendChild(node);\\n            }\\n            currentlyAddingScript = null;\\n\\n            context.onScriptLoad({ type: 'load' })\\n\\n            return node;\\n        } else if (isWebWorker) {\\n            try {\\n                //In a web worker, use importScripts. This is not a very\\n                //efficient use of importScripts, importScripts will block until\\n                //its script is downloaded and evaluated. However, if web workers\\n                //are in play, the expectation is that a build has been done so\\n                //that only one script needs to be loaded anyway. This may need\\n                //to be reevaluated if other use cases become common.\\n\\n                // Post a task to the event loop to work around a bug in WebKit\\n                // where the worker gets garbage-collected after calling\\n                // importScripts(): https://webkit.org/b/153317\\n                setTimeout(function() {}, 0);\\n                importScripts(url);\\n\\n                //Account for anonymous modules\\n                context.completeLoad(moduleName);\\n            } catch (e) {\\n                context.onError(makeError('importscripts',\\n                                'importScripts failed for ' +\\n                                    moduleName + ' at ' + url,\\n                                e,\\n                                [moduleName]));\\n            }\\n        }\\n    };\\n\\n    function getInteractiveScript() {\\n        if (interactiveScript && interactiveScript.readyState === 'interactive') {\\n            return interactiveScript;\\n        }\\n\\n        eachReverse(scripts(), function (script) {\\n            if (script.readyState === 'interactive') {\\n                return (interactiveScript = script);\\n            }\\n        });\\n        return interactiveScript;\\n    }\\n\\n    //Look for a data-main script attribute, which could also adjust the baseUrl.\\n    if (isBrowser && !cfg.skipDataMain) {\\n        //Figure out baseUrl. Get it from the script tag with require.js in it.\\n        eachReverse(scripts(), function (script) {\\n            //Set the 'head' where we can append children by\\n            //using the script's parent.\\n            if (!head) {\\n                head = script.parentNode;\\n            }\\n\\n            //Look for a data-main attribute to set main script for the page\\n            //to load. If it is there, the path to data main becomes the\\n            //baseUrl, if it is not already set.\\n            dataMain = script.getAttribute('data-main');\\n            if (dataMain) {\\n                //Preserve dataMain in case it is a path (i.e. contains '?')\\n                mainScript = dataMain;\\n\\n                //Set final baseUrl if there is not already an explicit one,\\n                //but only do so if the data-main value is not a loader plugin\\n                //module ID.\\n                if (!cfg.baseUrl && mainScript.indexOf('!') === -1) {\\n                    //Pull off the directory of data-main for use as the\\n                    //baseUrl.\\n                    src = mainScript.split('/');\\n                    mainScript = src.pop();\\n                    subPath = src.length ? src.join('/')  + '/' : './';\\n\\n                    cfg.baseUrl = subPath;\\n                }\\n\\n                //Strip off any trailing .js since mainScript is now\\n                //like a module name.\\n                mainScript = mainScript.replace(jsSuffixRegExp, '');\\n\\n                //If mainScript is still a path, fall back to dataMain\\n                if (req.jsExtRegExp.test(mainScript)) {\\n                    mainScript = dataMain;\\n                }\\n\\n                //Put the data-main script in the files to load.\\n                cfg.deps = cfg.deps ? cfg.deps.concat(mainScript) : [mainScript];\\n\\n                return true;\\n            }\\n        });\\n    }\\n\\n    /**\\n     * The function that handles definitions of modules. Differs from\\n     * require() in that a string for the module should be the first argument,\\n     * and the function to execute after dependencies are loaded should\\n     * return a value to define the module corresponding to the first argument's\\n     * name.\\n     */\\n    define = function (name, deps, callback) {\\n        var node, context;\\n\\n        //Allow for anonymous modules\\n        if (typeof name !== 'string') {\\n            //Adjust args appropriately\\n            callback = deps;\\n            deps = name;\\n            name = null;\\n        }\\n\\n        //This module may not have dependencies\\n        if (!isArray(deps)) {\\n            callback = deps;\\n            deps = null;\\n        }\\n\\n        //If no name, and callback is a function, then figure out if it a\\n        //CommonJS thing with dependencies.\\n        if (!deps && isFunction(callback)) {\\n            deps = [];\\n            //Remove comments from the callback string,\\n            //look for require calls, and pull them into the dependencies,\\n            //but only if there are function args.\\n            if (callback.length) {\\n                callback\\n                    .toString()\\n                    .replace(commentRegExp, commentReplace)\\n                    .replace(cjsRequireRegExp, function (match, dep) {\\n                        deps.push(dep);\\n                    });\\n\\n                //May be a CommonJS thing even without require calls, but still\\n                //could use exports, and module. Avoid doing exports and module\\n                //work though if it just needs require.\\n                //REQUIRES the function to expect the CommonJS variables in the\\n                //order listed below.\\n                deps = (callback.length === 1 ? ['require'] : ['require', 'exports', 'module']).concat(deps);\\n            }\\n        }\\n\\n        //If in IE 6-8 and hit an anonymous define() call, do the interactive\\n        //work.\\n        if (useInteractive) {\\n            node = currentlyAddingScript || getInteractiveScript();\\n            if (node) {\\n                if (!name) {\\n                    name = node.getAttribute('data-requiremodule');\\n                }\\n                context = contexts[node.getAttribute('data-requirecontext')];\\n            }\\n        }\\n\\n        //Always save off evaluating the def call until the script onload handler.\\n        //This allows multiple modules to be in a file without prematurely\\n        //tracing dependencies, and allows for anonymous module support,\\n        //where the module name is not known until the script onload event\\n        //occurs. If no context, use the global queue, and get it processed\\n        //in the onscript load callback.\\n        if (context) {\\n            context.defQueue.push([name, deps, callback]);\\n            context.defQueueMap[name] = true;\\n        } else {\\n            globalDefQueue.push([name, deps, callback]);\\n        }\\n    };\\n\\n    define.amd = {\\n        jQuery: true\\n    };\\n\\n    /**\\n     * Executes the text. Normally just uses eval, but can be modified\\n     * to use a better, environment-specific call. Only used for transpiling\\n     * loader plugins, not for plain JS modules.\\n     * @param {String} text the text to execute/evaluate.\\n     */\\n    req.exec = function (text) {\\n        /*jslint evil: true */\\n        return eval(text);\\n    };\\n\\n    //Set up with config info.\\n    req(cfg);\\n}(this, (typeof setTimeout === 'undefined' ? undefined : setTimeout)));\\n\"\n\n/***/ }),\n/* 42 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"container\"},[(_vm.projectFiles.length > 0)?_c('div',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.newFilePath),expression:\"newFilePath\"}],domProps:{\"value\":(_vm.newFilePath)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.newFilePath=$event.target.value}}}),_vm._v(\" \"),_c('button',{on:{\"click\":function () { _vm.newFile({ path: _vm.newFilePath }) }}},[_vm._v(\"Add File\")]),_vm._v(\" \"),_c('button',{attrs:{\"disabled\":_vm.compiling},on:{\"click\":function () { _vm.compileFiles() }}},[_vm._v(\"Compile Files\")]),_vm._v(\" \"),(!_vm.iwindow && !_vm.compiling)?_c('button',{on:{\"click\":function () { _vm.openWindow() }}},[_vm._v(\"OpenWindow\")]):_vm._e(),_vm._v(\" \"),(_vm.iwindow)?_c('button',{on:{\"click\":function () { _vm.closeWindow() }}},[_vm._v(\"closeWindow\")]):_vm._e(),_vm._v(\" \"),(!_vm.iframer && !_vm.compiling)?_c('button',{on:{\"click\":function () { _vm.openiFrame() }}},[_vm._v(\"OpenIframe\")]):_vm._e(),_vm._v(\" \"),(_vm.iframer)?_c('button',{on:{\"click\":function () { _vm.closeiFrame() }}},[_vm._v(\"closeIframe\")]):_vm._e(),_vm._v(\" \"),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.compiling),expression:\"compiling\"}]},[_vm._v(\"Compiling\")]),_vm._v(\" \"),_c('div',[_c('input',{ref:\"demo-slider\",staticStyle:{\"width\":\"300px\"},attrs:{\"type\":\"range\",\"step\":\"0.1\"},on:{\"input\":function (evt) { _vm.updateSlider(evt.target.value) }}})]),_vm._v(\" \"),_c('draggable',{attrs:{\"options\":{group:'people'}},on:{\"start\":function($event){_vm.drag = true},\"end\":function($event){_vm.drag = false},\"change\":function () { _vm.compileFiles() }},model:{value:(_vm.projectFiles),callback:function ($$v) {_vm.projectFiles=$$v},expression:\"projectFiles\"}},_vm._l((_vm.projectFiles),function(pFile,pfKey){return _c('div',{key:pfKey},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(pFile.path),expression:\"pFile.path\"}],staticStyle:{\"font-size\":\"16px\",\"width\":\"300px\"},attrs:{\"disabled\":_vm.checkDisable(pFile.path)},domProps:{\"value\":(pFile.path)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(pFile, \"path\", $event.target.value)}}}),_vm._v(\" \"),_c('button',{on:{\"click\":function($event){_vm.setFile(pFile)}}},[_vm._v(\"Edit\")])])})),_vm._v(\" \"),(_vm.iframer)?_c('iframe',{ref:\"iframer\",attrs:{\"src\":_vm.iframer}}):_vm._e(),_vm._v(\" \"),_c('ACE',{attrs:{\"filepath\":_vm.current.file.path,\"theme\":\"chrome\",\"width\":\"100%\",\"height\":_vm.ace.height},on:{\"save\":function () { _vm.compileFiles() },\"input\":function (value) { _vm.isDirty = true; }},model:{value:(_vm.current.file.src),callback:function ($$v) {_vm.$set(_vm.current.file, \"src\", $$v)},expression:\"current.file.src\"}})],1):_c('div',[_vm._v(\"\\n    Loading......\\n  \")])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ })\n],[6]);\n\n\n// WEBPACK FOOTER //\n// static/js/app.05ea167188f6bd20e241.js","// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\nimport Vue from 'vue'\nimport App from './App'\nimport router from './router'\nimport VueSession from 'vue-session'\nVue.use(VueSession)\n\nVue.config.productionTip = false\n\n/* eslint-disable no-new */\nnew Vue({\n  el: '#app',\n  router,\n  template: '<App/>',\n  components: { App }\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","function injectStyle (ssrContext) {\n  require(\"!!../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-096e3a71\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n}\nvar normalizeComponent = require(\"!../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nimport __vue_script__ from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-096e3a71\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-096e3a71\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = 9\n// module chunks = 2","<template>\n  <div id=\"app\">\n    <header>\n      <router-link to=\"/\" tag=\"span\">Lok Lok Shader Editing Helper</router-link>\n      <span>No DB yet. Work in progress. <a class=\"todo\" target=\"_blank\" href=\"https://docs.google.com/document/d/1tfKqN32Idr6QphLVCSCzAE918Aj-J30WR3ITV4bvXXg/edit\">Todo List.</a></span>\n    </header>\n    <main>\n      <router-view></router-view>\n    </main>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'app'\n}\n</script>\n\n<style scoped>\n\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #2c3e50;\n}\n\nheader {\n  margin: 0;\n  height: 56px;\n  padding: 0 16px 0 24px;\n  background-color: #35495E;\n  color: #ffffff;\n  display: flex;\n  justify-content: space-between;\n}\n\nheader span {\n  display: block;\n  position: relative;\n  font-size: 20px;\n  line-height: 1;\n  letter-spacing: .02em;\n  font-weight: 400;\n  box-sizing: border-box;\n  padding-top: 16px;\n}\n.todo{\n  color: white;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/App.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('header',[_c('router-link',{attrs:{\"to\":\"/\",\"tag\":\"span\"}},[_vm._v(\"Lok Lok Shader Editing Helper\")]),_vm._v(\" \"),_vm._m(0,false,false)],1),_vm._v(\" \"),_c('main',[_c('router-view')],1)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',[_vm._v(\"No DB yet. Work in progress. \"),_c('a',{staticClass:\"todo\",attrs:{\"target\":\"_blank\",\"href\":\"https://docs.google.com/document/d/1tfKqN32Idr6QphLVCSCzAE918Aj-J30WR3ITV4bvXXg/edit\"}},[_vm._v(\"Todo List.\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-096e3a71\",\"hasScoped\":true,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = 13\n// module chunks = 2","import Vue from 'vue'\nimport Router from 'vue-router'\nimport Hello from '@/components/Hello'\nimport Editor from '@/components/pages/editor/Editor.vue'\n\nVue.use(Router)\n\nexport default new Router({\n  routes: [\n    {\n      path: '/',\n      component: Hello\n    },\n    {\n      path: '/editor',\n      component: Editor\n    }\n  ]\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/router/index.js","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-79af2da9\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Hello.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Hello.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-79af2da9\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Hello.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Hello.vue\n// module id = 16\n// module chunks = 2","<template>\n  <div class=\"hello\">\n    <!-- <pre>{{ state.src }}</pre> -->\n    <router-link to=\"/editor\">Editor (no DB)</router-link>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'hello',\n  data () {\n    return {\n    }\n  },\n  methods: {\n  },\n  mounted () {\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style>\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/Hello.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"hello\"},[_c('router-link',{attrs:{\"to\":\"/editor\"}},[_vm._v(\"Editor (no DB)\")])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-79af2da9\",\"hasScoped\":false,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Hello.vue\n// module id = 19\n// module chunks = 2","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-23463c34\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Editor.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Editor.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-23463c34\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Editor.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/pages/editor/Editor.vue\n// module id = 20\n// module chunks = 2","<template>\n  <div ref=\"container\">\n    <div v-if=\"projectFiles.length > 0\">\n      <input v-model=\"newFilePath\" />\n      <button @click=\"() => { newFile({ path: newFilePath }) }\">Add File</button>\n      <button @click=\"() => { compileFiles() }\" :disabled=\"compiling\">Compile Files</button>\n\n      <button v-if=\"!iwindow && !compiling\" @click=\"() => { openWindow() }\">OpenWindow</button>\n      <button v-if=\"iwindow\" @click=\"() => { closeWindow() }\">closeWindow</button>\n\n      <button v-if=\"!iframer && !compiling\" @click=\"() => { openiFrame() }\">OpenIframe</button>\n      <button v-if=\"iframer\" @click=\"() => { closeiFrame() }\">closeIframe</button>\n\n      <span v-show=\"compiling\">Compiling</span>\n      <div>\n        <input type=\"range\" style=\"width: 300px;\" step=\"0.1\" ref=\"demo-slider\" @input=\"(evt) => { updateSlider(evt.target.value) }\" />\n      </div>\n\n      <draggable v-model=\"projectFiles\" :options=\"{group:'people'}\" @start=\"drag = true\" @end=\"drag = false\" @change=\"() => { compileFiles() }\">\n        <div v-for=\"(pFile, pfKey) in projectFiles\" :key=\"pfKey\"><input v-model=\"pFile.path\" style=\"font-size: 16px; width: 300px;\" :disabled=\"checkDisable(pFile.path)\" /> <button @click=\"setFile(pFile)\">Edit</button></div>\n      </draggable>\n      <iframe :src=\"iframer\" ref=\"iframer\" v-if=\"iframer\" />\n      <ACE @save=\"() => { compileFiles() }\" :filepath=\"current.file.path\" v-model=\"current.file.src\" @input=\"(value) => { isDirty = true; }\"  theme=\"chrome\" width=\"100%\" :height=\"ace.height\"></ACE>\n    </div>\n    <div v-else>\n      Loading......\n    </div>\n  </div>\n</template>\n\n<script>\nimport draggable from 'vuedraggable'\nimport complier from '@/components/parts/complier/complier.js'\nimport ACE from '@/components/parts/editor/ACE.vue'\nimport { getNewProject, initTokenReplacer, newFile } from '@/components/parts/template/template.js'\nexport default {\n  components: {\n    ACE,\n    draggable\n  },\n  data () {\n    return {\n      iframeLink: false,\n      iwindow: false,\n      iframer: false,\n      complier,\n      projectFiles: [],\n      ace: {\n        height: window.innerHeight - 50\n      },\n      current: {\n        file: {\n          path: '@/main.js',\n          src: '//Welcome! Loading.....'\n        }\n      },\n      newFilePath: `@/src/newFile.js`,\n      isDirty: false,\n      clean () {},\n      blob: false,\n      compiling: false\n    }\n  },\n  mounted () {\n    var rAF = () => {\n      this.syncInfoToSubWindow()\n      window.requestAnimationFrame(rAF)\n    }\n    window.requestAnimationFrame(rAF)\n\n    window.addEventListener('beforeunload', (e) => {\n      this.closeWindow()\n    }, false)\n    setInterval(() => {\n      if (this.isDirty) {\n        this.isDirty = false\n        this.compileFiles()\n      }\n    }, 3333)\n    setTimeout(() => {\n      this.projectFiles = getNewProject({ author: 'loklok' })\n      this.current.file = this.projectFiles[0]\n      this.compileFiles()\n    }, 1000)\n    var onWorker = (evt) => {\n      this.compiling = false\n      // console.log(evt.data.js)\n      this.onCompleteCompile({ js: evt.data.js })\n    }\n    this.clean = complier.setUp({ onWorker })\n  },\n  beforeDestroy () {\n    this.clean()\n    if (this.iwindow) {\n      this.iwindow.close()\n    }\n  },\n  methods: {\n    checkDisable (src) {\n      if (src === '@/index.html') {\n        return true\n      } else if (src === '@/main.js') {\n        return true\n      } else {\n        return false\n      }\n    },\n    getHTML ({ js }) {\n      var html = (this.projectFiles || []).filter((item) => {\n        return item.path === '@/index.html'\n      })[0].src\n      html = initTokenReplacer({ html, js })\n      return html\n    },\n    onCompleteCompile ({ js }) {\n      this.blob = new Blob([this.getHTML({ js })], { type: 'text/html' })\n      if (this.blob) {\n        URL.revokeObjectURL(this.blob)\n      }\n      this.iframeLink = URL.createObjectURL(this.blob)\n\n      if (this.iframer) {\n        this.iframer = this.iframeLink\n      }\n\n      if (this.iwindow) {\n        this.iwindow.postMessage({ type: 'suspend-close', duration: 6000 }, window.location.origin)\n        this.iwindow.location.assign(this.iframeLink)\n      }\n    },\n    compileFiles () {\n      this.compiling = true\n      complier.compile({\n        files: this.projectFiles\n      })\n    },\n    newFile ({ path }) {\n      this.projectFiles.push(\n        newFile({ path: path })\n      )\n    },\n    setFile (file) {\n      this.current.file = file\n      // this.compileFiles()\n    },\n\n    openWindow () {\n      if (this.iframeLink) {\n        var strWindowFeatures = 'menubar=yes,location=yes,resizable=yes,scrollbars=yes,status=yes'\n        strWindowFeatures = `directories=no,titlebar=no,toolbar=no,location=no,status=no,menubar=no,scrollbars=yes,resizable=yes,width=${window.innerWidth},height=${window.innerHeight}`\n        this.iwindow = window.open(this.iframeLink, 'title', strWindowFeatures)\n        this.iwindow.onmessage = ({ data }) => {\n          if (data.type === 'close') {\n            this.closeWindow()\n          }\n        }\n      }\n    },\n    openiFrame () {\n      if (this.iframeLink) {\n        this.iframer = this.iframeLink\n      }\n    },\n    closeiFrame () {\n      this.iframer = false\n    },\n    closeWindow () {\n      if (this.iwindow) {\n        this.iwindow.close()\n        this.iwindow = false\n      }\n    },\n    syncInfoToSubWindow () {\n      if (this.$refs['demo-slider']) {\n        this.updateSlider(this.$refs['demo-slider'].value)\n      }\n    },\n    updateSlider (number) {\n      var content = { type: 'cw.slider', data: { value: parseFloat(number) } }\n      if (this.iwindow) {\n        this.iwindow.postMessage(content, window.location.origin)\n      }\n      if (this.$refs['iframer']) {\n        this.$refs['iframer'].contentWindow.postMessage(content, window.location.origin)\n      }\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/pages/editor/Editor.vue","import WorkWorkWork from '@/components/worker/babel.worker.js'\nvar worker = new WorkWorkWork()\nfunction makeEventBus () {\n  var evts = {}\n  var api = {}\n  api.on = (name, func) => {\n    if (!evts[name]) {\n      evts[name] = []\n    }\n    evts[name].push(func)\n  }\n  api.once = (name, func) => {\n    var newFn = (args) => {\n      func(args)\n      api.off(newFn)\n    }\n    api.on(name, newFn)\n  }\n  api.off = (name, func) => {\n    if (!evts[name]) {\n      evts[name] = []\n    }\n    var idx = evts[name].indexOf(func)\n    evts[name].splice(idx, 1)\n  }\n  api.trigger = (name, args) => {\n    if (!evts[name]) {\n      evts[name] = []\n    }\n    for (var i = 0; i < evts[name].length; i++) {\n      evts[name][i].call({}, args)\n    }\n  }\n  return api\n}\n\nvar buzz = makeEventBus()\nvar onMessage = (evt) => {\n  buzz.trigger('worker', evt)\n  /* eslint-disable */\n  eval(evt.data.data)\n}\nworker.onmessage = onMessage\n\n// auto clean memory pool\nsetInterval(() => {\n  if (worker) {\n    worker.terminate()\n    worker = new WorkWorkWork()\n    worker.onmessage = onMessage\n  }\n}, 30000)\n\nexport default {\n  compile ({ files }) {\n    worker.postMessage({ files })\n  },\n  setUp ({ onWorker }) {\n    buzz.on('worker', onWorker)\n    return () => {\n      buzz.off('worker', onWorker)\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/parts/complier/complier.js","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"e56bdeffcdb837c76b7e.worker.js\");\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/worker/babel.worker.js\n// module id = 26\n// module chunks = 2","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-13838409\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./ACE.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./ACE.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-13838409\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./ACE.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/parts/editor/ACE.vue\n// module id = 27\n// module chunks = 2","<template>\n  <div :style=\"{height: height ? px(height) : '100%',width: width ? px(width) : '100%'}\">\n  </div>\n</template>\n\n<script>\nvar ace = require('brace')\n// npm install --save vue2-ace-editor\nrequire(['emmet/emmet'], function (data) {\n  window.emmet = data.emmet\n})\n\nexport default {\n  template: '',\n  props: {\n    value: {},\n    filepath: {\n      type: String,\n      default: 'lol.js'\n    },\n    theme: String,\n    height: true,\n    width: true\n  },\n  data () {\n    return {\n      editor: null,\n      contentBackup: ''\n    }\n  },\n  methods: {\n    px (n) {\n      if (/^\\d*$/.test(n)) {\n        return n + 'px'\n      }\n      return n\n    },\n    getLangFromPath (path) {\n      var ans = 'html'\n      try {\n        var ext = path.split('.').pop()\n\n        if (ext === 'js') {\n          ans = 'javascript'\n        }\n        if (ext === 'vue') {\n          ans = 'html'\n        }\n        if (ext === 'html') {\n          ans = 'html'\n        }\n        if (ext === 'vert') {\n          ans = 'glsl'\n        }\n        if (ext === 'frag') {\n          ans = 'glsl'\n        }\n      } catch (e) {\n        console.log(e)\n      }\n\n      return ans\n    }\n  },\n  watch: {\n    value (val) {\n      if (this.contentBackup !== val) {\n        this.editor.setValue(val, 1)\n      }\n    },\n    filepath () {\n      this.editor.getSession().setMode('ace/mode/' + this.getLangFromPath(this.filepath))\n    }\n  },\n  mounted () {\n    var vm = this\n    var theme = this.theme || 'chrome'\n\n    require('brace/ext/emmet')\n\n    var editor = vm.editor = ace.edit(this.$el)\n\n    var commands = [\n      {\n        name: 'save',\n        bindKey: {win: 'Ctrl-S', mac: 'Command-S'},\n        exec: (editor) => {\n          var val = editor.getValue()\n          this.$emit('save', val)\n        },\n        readOnly: true // false if this command should not apply in readOnly mode\n      },\n      {\n        name: 'multicursor',\n        bindKey: {win: 'Ctrl-D', mac: 'Command-D'},\n        exec: (editor) => {\n          editor.selectMore(1)\n        },\n        // multiSelectAction: 'forEach',\n        scrollIntoView: 'cursor',\n        readOnly: true // false if this command should not apply in readOnly mode\n      }\n    ]\n    if (Array.isArray(commands)) {\n      commands.forEach((command) => {\n        vm.editor.commands.addCommand(command)\n      })\n    }\n\n    // this.$emit('init', editor)\n\n    require('brace/mode/html')\n    require('brace/mode/javascript')\n    require('brace/mode/glsl')\n    // require('brace/mode/sass')\n    require('brace/theme/chrome')\n    require('brace/ext/searchbox')\n\n    editor.$blockScrolling = Infinity\n    editor.setOption('enableEmmet', true)\n    editor.getSession().setMode('ace/mode/' + this.getLangFromPath(this.filepath))\n    editor.setTheme('ace/theme/' + theme)\n    editor.setValue(this.value, 1)\n    editor.session.setOptions({ tabSize: 2, useSoftTabs: true })\n\n    editor.on('change', function () {\n      var content = editor.getValue()\n      vm.$emit('input', content)\n      vm.contentBackup = content\n    })\n  }\n}\n</script>\n\n<style>\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/parts/editor/ACE.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{style:({height: _vm.height ? _vm.px(_vm.height) : '100%',width: _vm.width ? _vm.px(_vm.width) : '100%'})})}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-13838409\",\"hasScoped\":false,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/parts/editor/ACE.vue\n// module id = 39\n// module chunks = 2","import requireJSStr from '../../worker/requirejs.str.txt'\n\nexport function scriptSRC (src) {\n  return `<script src=\"${src}\">` + `</script>`\n}\n\nexport function initToken () {\n  return `<!--DO_NOT_REMOVE_ME____AUTO_INIT-->`\n}\nexport function autoRefreshToken () {\n  return `<!--DO_NOT_REMOVE_ME____AUTO_REFRESH-->`\n}\n\nexport function indexHTML ({ author }) {\n  return `<!DOCTYPE html>\n<html>\n  <head>\n  <meta charset=\"UTF-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n  <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\">\n  <title>component</title>\n  <meta name=\"author\" content=\"${author}\">\n  <meta name=\"description\" content=\"WebGL Art\">\n  <meta name=\"keywords\" content=\"WebGL, Art\">\n\n  <!--\n  ${scriptSRC('https://cdnjs.cloudflare.com/ajax/libs/vue/2.5.2/vue.min.js')}\n  ${scriptSRC('https://cdnjs.cloudflare.com/ajax/libs/vue-router/3.0.1/vue-router.min.js')}\n  ${scriptSRC('https://cdnjs.cloudflare.com/ajax/libs/tween.js/16.3.5/Tween.min.js')}\n  -->\n\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/three.js/88/three.min.js\" integrity=\"sha256-6fhm481uY9c152qGWIVgE7KbzaCj5WjCi3BGIpZef2E=\" crossorigin=\"anonymous\"></script>\n  <script src=\"https://threejs.org/examples/js/GPUComputationRenderer.js\"></script>\n\n  <style type=\"text/css\">\n    html, body {\n      width: 100%;\n      height: 100%;\n      margin: 0px;\n      padding: 0px;\n    }\n    html, body, #app {\n      box-sizing: border-box;\n    }\n  </style>\n  </head>\n  <body>\n    <div id=\"app\"></div>\n    ${initToken()}\n  </body>\n</html>`\n}\n\nexport function newFile ({ path }) {\n  return {\n    path: path || '@/newFile.js',\n    src: ``\n  }\n}\n\nexport function initTokenReplacer ({ html, js }) {\n  return html.replace(initToken(), `<script type=\"text\" id=\"initAPP\">` + js + `<` + `/` + `script>` + `<script>` + requireJSStr + `<` + `/` + `script>` + `<script>` + `\n  (function(){\n    var js = document.getElementById('initAPP').innerHTML;\n    var blob = new Blob([js], { type: 'text/html' });\n    var url = URL.createObjectURL(blob);\n\n    var scpt = document.createElement('script');\n    scpt.src = url;\n    document.body.appendChild(scpt);\n\n    var suspendClose = false;\n\n    window.addEventListener('message', ({ data }) => {\n      if (data.type === 'suspend-close') {\n        suspendClose = true;\n        setTimeout(() => {\n          suspendClose = false;\n        }, 5000);\n      }\n    })\n\n    window.addEventListener('keydown', (e) => {\n      if (\n        (e.keyCode === 82 && e.metaKey) ||\n        (e.keyCode === 82 && e.ctrlKey)\n      ) {\n        suspendClose = true;\n        setTimeout(() => {\n          suspendClose = false;\n        }, 5000);\n      }\n    }, false)\n\n    window.addEventListener('beforeunload', (e) => {\n      if (!suspendClose) {\n        window.top.postMessage({ type: 'close' }, window.location.origin)\n      }\n    }, false)\n\n  }())\n\n//` + `</` + `script>`)\n}\n\nexport function getNewProject ({ author }) {\n  return [\n    {\n      path: '@/index.html',\n      src: indexHTML({ author })\n    },\n    {\n      path: '@/main.js',\n      src: `//\nimport app from '@/src/app.js'\n`\n    },\n    {\n      path: '@/src/app.js',\n      src: `\nimport { makeAPI } from '@/src/webgl/particle.js';\n\nvar api = makeAPI();\napi.setup({ target: document.getElementById('app') });\n\nvar clean = () => {\n  api.clean()\n};\n\n//\n`\n    },\n    {\n      path: '@/src/ui/events.js',\n      src: `\n//\nexport default ({ target, stack }) => {\n  var mod = {};\n\n  mod.sendEvent = (args) => {\n      for (var key in stack) {\n          stack[key](args)\n      }\n  }\n\n  var ev = mod.evlt = {\n    resizer: () => {\n      if (!target) { return }\n      mod.rect = target.getBoundingClientRect()\n      mod.aspect = mod.rect.width / mod.rect.height\n      mod.sendEvent({ type: 'resize', aspect: mod.aspect, rect: mod.rect })\n    },\n    tsData: false,\n    tmData: false,\n    emitClick: false,\n    onTS: (evt) => {\n      evt.preventDefault()\n      ev.tsData = { type: 'click', isIn: true, touches: evt.touches, pageX: evt.touches[0].pageX, pageY: evt.touches[0].pageY, rect: mod.rect }\n      ev.emitClick = true\n      setTimeout(() => {\n        ev.emitClick = false\n      }, 300)\n      mod.sendEvent({ type: 'ts', isIn: true, touches: evt.touches, pageX: evt.touches[0].pageX, pageY: evt.touches[0].pageY, rect: mod.rect })\n    },\n    onTM: (evt) => {\n      evt.preventDefault()\n      mod.sendEvent({ type: 'tm', touches: evt.touches, pageX: evt.touches[0].pageX, pageY: evt.touches[0].pageY, rect: mod.rect })\n    },\n    onTE: (evt) => {\n      if (ev.emitClick) {\n        ev.emitClick = false\n        mod.sendEvent(ev.tsData)\n      }\n      mod.sendEvent({ type: 'te', isIn: false })\n    },\n    onMDN: (evt) => {\n      mod.sendEvent({ type: 'mdn', pageX: evt.clientX, pageY: evt.clientY, rect: mod.rect })\n    },\n    onMUP: (evt) => {\n      mod.sendEvent({ type: 'mup', pageX: evt.clientX, pageY: evt.clientY, rect: mod.rect })\n    },\n    onMV: (evt) => {\n      evt.preventDefault()\n      mod.sendEvent({ type: 'mv', pageX: evt.pageX, pageY: evt.pageY, rect: mod.rect })\n    },\n    onMO: (evt) => {\n      mod.sendEvent({ isIn: true })\n    },\n    onME: (evt) => {\n      mod.sendEvent({ isIn: true })\n    },\n    onML: (evt) => {\n      mod.sendEvent({ isIn: false })\n    },\n    onCL: (evt) => {\n      mod.sendEvent({ type: 'click', pageX: evt.pageX, pageY: evt.pageY, rect: mod.rect })\n    },\n    onWHL: (evt) => {\n      mod.sendEvent({ type: 'wheel', deltaX: evt.deltaX, deltaY: evt.deltaY })\n    }\n  }\n\n  setTimeout(() => {\n    ev.resizer()\n  }, 10)\n\n  var container = target\n  container.addEventListener('mouseover', ev.onMO, false)\n  container.addEventListener('mouseenter', ev.onME, false)\n  container.addEventListener('mouseleave', ev.onML, false)\n\n  container.addEventListener('mousemove', ev.onMV, false)\n  container.addEventListener('mousedown', ev.onMDN, false)\n  container.addEventListener('mouseup', ev.onMUP, false)\n\n  container.addEventListener('click', ev.onCL, false)\n  container.addEventListener('wheel', ev.onWHL, false)\n\n  container.addEventListener('touchstart', ev.onTS, false)\n  container.addEventListener('touchmove', ev.onTM, false)\n  container.addEventListener('touchend', ev.onTE, false)\n  container.style['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)'\n  window.addEventListener('resize', ev.resizer, false)\n  mod.uninstaller = () => {\n    container.removeEventListener('mouseover', ev.onMO)\n    container.removeEventListener('mouseenter', ev.onME)\n    container.removeEventListener('mouseleave', ev.onML)\n\n    container.removeEventListener('mousemove', ev.onMV)\n    container.removeEventListener('mousedown', ev.onMDN)\n    container.removeEventListener('mouseup', ev.onMUP)\n\n    container.removeEventListener('click', ev.onCL)\n    container.removeEventListener('wheel', ev.onWHL)\n\n    container.removeEventListener('touchstart', ev.onTS)\n    container.removeEventListener('touchmove', ev.onTM)\n    container.removeEventListener('touchend', ev.onTE)\n    window.removeEventListener('resize', ev.resizer)\n  }\n\n  return mod;\n}\n//\n`\n    },\n    {\n      path: '@/src/ui/window.js',\n      src: `\n//\n\nexport default function setupWindow ({ stack }) {\n  var mod = {}\n\n  mod.sendEvent = (args) => {\n      for (var key in stack) {\n          stack[key](args)\n      }\n  }\n\n  window.addEventListener('message', ({ data }) => {\n    // console.log(data);\n    if (data.type === 'cw.slider') {\n      mod.sendEvent({ type: 'cw.slider', data })\n    }\n  }, false)\n\n  return mod;\n}\n\n//\n      `\n    },\n    {\n      path: '@/src/webgl/particle.js',\n      src: `\n//\nvar THREE = window.THREE;\n\nimport setupEvents from '@/src/ui/events.js';\nimport setupWindow from '@/src/ui/window.js';\n\nexport function makeAPI() {\n    var api = {}\n\n    var WIDTH = 128\n\n    api.windowStack = {};\n    api.eventStack = {};\n    api.setup = ({\n        target\n    }) => {\n        var renderer = new THREE.WebGLRenderer({\n            alpha: true\n        })\n        api.compute = setupCompute({\n            renderer\n        })\n        api.render = setupRender({\n            renderer,\n            target\n        })\n        api.events = setupEvents({\n            target,\n            stack: api.eventStack\n        })\n        api.Window = setupWindow({\n            stack: api.windowStack\n        })\n        api.loop = setupLoop()\n    }\n\n    api.clean = () => {\n        api.loop.stop()\n    }\n\n    var setupLoop = () => {\n        var rAF = () => {\n            api.rAFID = window.requestAnimationFrame(rAF)\n\n            var result = api.compute.run()\n            api.render.run({\n                compute: result\n            })\n        }\n        api.rAFID = window.requestAnimationFrame(rAF)\n        return {\n            stop() {\n                window.cancelAnimationFrame(api.rAFID)\n            }\n        }\n    }\n\n    var makeAnimatable = ({\n        scene\n    }) => {\n\n        var particleV = require('@/src/webgl/particle/particle.vert');\n        var particleF = require('@/src/webgl/particle/particle.frag');\n\n        var geometry = new THREE.PlaneBufferGeometry(30, 30, WIDTH - 1, WIDTH - 1);\n        var material = new THREE.ShaderMaterial({\n            blending: THREE.AdditiveBlending,\n            depthTest: false,\n            transparent: true,\n            vertexShader: particleV.default,\n            fragmentShader: particleF.default,\n            uniforms: {\n                opacity: {\n                    value: 0,\n                },\n                resolution: {\n                    value: new THREE.Vector2(window.innerWidth, window.innerHeight),\n                },\n                picture: {\n                    value: new THREE.TextureLoader().load('https://picsum.photos/200/300/?gravity=east')\n                },\n                pointSize: {\n                    value: window.devicePixelRatio || 1.0\n                },\n                posTex: {\n                    value: null\n                },\n                velTex: {\n                    value: null\n                }\n            }\n        })\n\n        api.windowStack.onOpacity = (evt) => {\n          var { value } = evt.data.data;\n          // console.log('onOpacity', evt, evt.data.type, value / 100)\n          material.uniforms.opacity.value = value / 100\n        }\n\n        var points = new THREE.Points(geometry, material)\n        points.matrixAutoUpdate = false\n        points.updateMatrix()\n\n        scene.add(points)\n\n        return {\n            material,\n            points\n        }\n    }\n\n    var setupRender = ({\n        renderer,\n        target\n    }) => {\n        var mod = {}\n\n        var scene = new THREE.Scene();\n        var camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.01, 1000);\n        camera.position.z = 165;\n\n        renderer.setSize(window.innerWidth, window.innerHeight);\n        renderer.setPixelRatio(window.devicePixelRatio || 1.0)\n        target.appendChild(renderer.domElement);\n\n        setTimeout(() => {\n            renderer.domElement.style.marginBottom = '-3px'\n        }, 10)\n\n        api.eventStack.setSize = ({\n            type,\n            rect,\n            aspect\n        }) => {\n            if (type === 'resize' && rect) {\n                renderer.setSize(rect.width, rect.height + 6)\n                camera.aspect = aspect;\n                camera.updateProjectionMatrix()\n            }\n        }\n\n        scene.background = new THREE.Color(0x000000);\n\n        var anim = makeAnimatable({\n            scene\n        })\n\n        mod.run = () => {\n            var {\n                velTex,\n                posTex\n            } = api.compute.getTex()\n\n            anim.material.uniforms.posTex.value = posTex\n            anim.material.uniforms.velTex.value = velTex\n\n            renderer.render(scene, camera);\n        }\n\n        return mod\n    }\n\n\n\n    var setupCompute = ({\n        renderer\n    }) => {\n        var mod = {}\n\n        function fillTexture(texture, WIDTH) {\n\n            var pixels = texture.image.data\n            var p = 0\n            for (var j = 0; j < WIDTH; j++) {\n                for (var i = 0; i < WIDTH; i++) {\n                    var x = (WIDTH / 2 - i) * 128 / WIDTH\n                    var y = (WIDTH / 2 - j) * 128 / WIDTH\n\n                    pixels[p + 0] = x\n                    pixels[p + 1] = y\n\n                    pixels[p + 2] = 0 // noise(Math.sin(x), Math.sin(y), 0.0)\n                    pixels[p + 3] = 0\n                    p += 4\n                }\n            }\n        }\n\n        var gpuCompute = new GPUComputationRenderer(WIDTH, WIDTH, renderer);\n\n        // Create initial state float textures\n        var pos0 = gpuCompute.createTexture();\n        var vel0 = gpuCompute.createTexture();\n        // and fill in here the texture data...\n        fillTexture(pos0, WIDTH)\n\n        // Add texture variables\n        var velTexSD = require('@/src/webgl/particle/velocitySim.frag');\n        var posTexSD = require('@/src/webgl/particle/positionSim.frag');\n\n        var velVar = gpuCompute.addVariable('velTex', velTexSD.default, pos0);\n        var posVar = gpuCompute.addVariable('posTex', posTexSD.default, vel0);\n\n        // Add variable dependencies\n        gpuCompute.setVariableDependencies(velVar, [velVar, posVar]);\n        gpuCompute.setVariableDependencies(posVar, [velVar, posVar]);\n\n        // Add custom uniforms\n        velVar.material.uniforms = {\n            time: {\n                value: 0.0\n            },\n            mouse: {\n                value: new THREE.Vector2(0, 0)\n            }\n        }\n\n        api.eventStack.mousePos = ({\n            type,\n            pageX,\n            pageY,\n            rect\n        }) => {\n            var velocity = velVar.material.uniforms.mouse.value;\n            if (type === 'mv' && rect) {\n                velocity.x = ((pageX - rect.left) / rect.width) * 2 - 1\n                velocity.y = -((pageY - rect.top) / rect.height) * 2 + 1\n            } else if (type === 'tm' && rect) {\n                velocity.x = ((pageX - rect.left) / rect.width) * 2 - 1\n                velocity.y = -((pageY - rect.top) / rect.height) * 2 + 1\n            }\n        }\n\n        // Check for completeness\n        var error = gpuCompute.init();\n        if (error !== null) {\n            alert(error);\n            console.error(error);\n        }\n        mod.getTex = () => {\n            return {\n                velTex: gpuCompute.getCurrentRenderTarget(velVar).texture,\n                posTex: gpuCompute.getCurrentRenderTarget(posVar).texture\n            }\n        };\n\n        mod.run = () => {\n            velVar.material.uniforms.time.value = window.performance.now() / 1000\n            gpuCompute.compute();\n        }\n        return mod\n    }\n\n    return api;\n}\n\n\n`\n    },\n    {\n      path: '@/src/webgl/particle/particle.vert',\n      src: `\n\nuniform sampler2D posTex;\nuniform sampler2D velTex;\n\nuniform float pointSize;\n\nvarying vec4 parVel;\nvarying vec2 vUv;\n\nvoid main() {\n    vec4 pos = texture2D(posTex, uv);\n    vec4 vel = texture2D(velTex, uv);\n\n    vec4 mvPosition = modelViewMatrix * vec4( pos.xyz, 1.0 );\n    vec4 outputPos = projectionMatrix * mvPosition;\n\n    vUv = uv;\n    parVel = vel;\n    gl_Position = outputPos;\n    gl_PointSize = pointSize * 1.0;\n}\n\n\n      `\n    },\n    {\n      path: '@/src/webgl/particle/particle.frag',\n      src: `\n\nvarying vec4 parVel;\nvarying vec2 vUv;\nuniform sampler2D picture;\nuniform float opacity;\n\nvoid main() {\n\n    vec4 rainbow = parVel;\n\n// vec4 outputColor = vec4(\n//         (rainbow.x + 0.6),\n//         (rainbow.y * rainbow.x + 0.6),\n//         (rainbow.y + 0.6),\n//         0.25\n//     );\n// outputColor.xyz = clamp(outputColor.xyz, vec3(0.0), vec3(1.0));\n    vec4 imgColor = texture2D(picture, vUv);\n\n    vec4 outputColor = vec4(0.5, 0.5, 0.5, opacity) * imgColor;\n\n    gl_FragColor = outputColor;\n}\n\n`\n    },\n    {\n      path: '@/src/webgl/particle/velocitySim.frag',\n      src: `\n\nuniform float time;\nuniform vec2 mouse;\nfloat constrain(float val, float min, float max) {\n    if (val < min) {\n        return min;\n    } else if (val > max) {\n        return max;\n    } else {\n        return val;\n    }\n}\n\nvec3 getDiff (in vec3 lastPos, in vec3 mousePos) {\n  vec3 diff = lastPos.xyz / 33.3 - mousePos;\n  float distance = constrain(length(diff), 5.0, 100.0);\n  float strength = 0.35 / (distance * distance);\n\n  diff = normalize(diff);\n  diff = diff * strength * -2.0;\n\n  return diff;\n}\n\nvoid main() {\n    vec2 uv = gl_FragCoord.xy / resolution.xy;\n\n  vec4 lastVel = texture2D( velTex, uv );\n    vec4 lastPos = texture2D( posTex, uv );\n\n    vec3 diff = getDiff( lastPos.xyz, vec3(mouse, 0.1) );\n    lastVel.xyz += diff * 15.0;\n\n    gl_FragColor = lastVel;\n}\n`\n    },\n    {\n      path: '@/src/webgl/particle/positionSim.frag',\n      src: `\n\n#include <common>\n\n//  Classic Perlin 3D Noise\n//  by Stefan Gustavson\n//\nvec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\nvec2 fade(vec2 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\n\nfloat cnoise(vec2 P){\n  vec4 Pi = floor(P.xyxy) + vec4(0.0, 0.0, 1.0, 1.0);\n  vec4 Pf = fract(P.xyxy) - vec4(0.0, 0.0, 1.0, 1.0);\n  Pi = mod(Pi, 289.0); // To avoid truncation effects in permutation\n  vec4 ix = Pi.xzxz;\n  vec4 iy = Pi.yyww;\n  vec4 fx = Pf.xzxz;\n  vec4 fy = Pf.yyww;\n  vec4 i = permute(permute(ix) + iy);\n  vec4 gx = 2.0 * fract(i * 0.0243902439) - 1.0; // 1/41 = 0.024...\n  vec4 gy = abs(gx) - 0.5;\n  vec4 tx = floor(gx + 0.5);\n  gx = gx - tx;\n  vec2 g00 = vec2(gx.x,gy.x);\n  vec2 g10 = vec2(gx.y,gy.y);\n  vec2 g01 = vec2(gx.z,gy.z);\n  vec2 g11 = vec2(gx.w,gy.w);\n  vec4 norm = 1.79284291400159 - 0.85373472095314 *\n      vec4(dot(g00, g00), dot(g01, g01), dot(g10, g10), dot(g11, g11));\n  g00 *= norm.x;\n  g01 *= norm.y;\n  g10 *= norm.z;\n  g11 *= norm.w;\n  float n00 = dot(g00, vec2(fx.x, fy.x));\n  float n10 = dot(g10, vec2(fx.y, fy.y));\n  float n01 = dot(g01, vec2(fx.z, fy.z));\n  float n11 = dot(g11, vec2(fx.w, fy.w));\n  vec2 fade_xy = fade(Pf.xy);\n  vec2 n_x = mix(vec2(n00, n01), vec2(n10, n11), fade_xy.x);\n  float n_xy = mix(n_x.x, n_x.y, fade_xy.y);\n  return 2.3 * n_xy;\n}\n\n#define M_PI 3.1415926535897932384626433832795\nfloat atan2(in float y, in float x) {\n  bool xgty = (abs(x) > abs(y));\n  return mix(M_PI/2.0 - atan(x,y), atan(y,x), float(xgty));\n}\nvec3 fromBall(float r, float az, float el) {\n  return vec3(\n    r * cos(el) * cos(az),\n    r * cos(el) * sin(az),\n    r * sin(el)\n  );\n}\nvoid toBall(vec3 pos, out float az, out float el) {\n  az = atan2(pos.y, pos.x);\n  el = atan2(pos.z, sqrt(pos.x * pos.x + pos.y * pos.y));\n}\n\n// float az = 0.0;\n// float el = 0.0;\n// vec3 noiser = vec3(lastVel);\n// toBall(noiser, az, el);\n// lastVel.xyz = fromBall(1.0, az, el);\n\nvoid main() {\n  vec2 uv = gl_FragCoord.xy / resolution.xy;\n\n  vec4 lastVel = texture2D( velTex, uv );\n    vec4 lastPos = texture2D( posTex, uv );\n\n    float az = 0.0;\n    float el = 0.0;\n    vec3 noiser = vec3(lastPos);\n\n    noiser += rand(lastVel.xy) * 0.0000001;\n\n    // noiser += cnoise(lastPos.xy) * 2.5;\n    // noiser += sin(lastPos.x * 0.3) * 2.5;\n    // noiser += sin(lastPos.y * 0.3) * 2.5;\n\n    toBall(noiser, az, el);\n    lastPos.xyz = fromBall(65.0, az, el);\n    lastPos.xyz += lastVel.xyz;\n\n    gl_FragColor = lastPos;\n}\n\n\n`\n    }\n  ]\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/parts/template/template.js","module.exports = \"/* eslint-disable */\\n/** vim: et:ts=4:sw=4:sts=4\\n * @license RequireJS 2.3.5 Copyright jQuery Foundation and other contributors.\\n * Released under MIT license, https://github.com/requirejs/requirejs/blob/master/LICENSE\\n */\\n//Not using strict: uneven strict support in browsers, #392, and causes\\n//problems with requirejs.exec()/transpiler plugins that may not be strict.\\n/*jslint regexp: true, nomen: true, sloppy: true */\\n/*global window, navigator, document, importScripts, setTimeout, opera */\\n\\nvar requireJSRequire, require, define;\\n(function (global, setTimeout) {\\n    var req, s, head, baseElement, dataMain, src,\\n        interactiveScript, currentlyAddingScript, mainScript, subPath,\\n        version = '2.3.5',\\n        commentRegExp = /\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/|([^:\\\"'=]|^)\\\\/\\\\/.*$/mg,\\n        cjsRequireRegExp = /[^.]\\\\s*require\\\\s*\\\\(\\\\s*[\\\"']([^'\\\"\\\\s]+)[\\\"']\\\\s*\\\\)/g,\\n        jsSuffixRegExp = /\\\\.js$/,\\n        currDirRegExp = /^\\\\.\\\\//,\\n        op = Object.prototype,\\n        ostring = op.toString,\\n        hasOwn = op.hasOwnProperty,\\n        isBrowser = !!(typeof window !== 'undefined' && typeof navigator !== 'undefined' && window.document),\\n        isWebWorker = !isBrowser && typeof importScripts !== 'undefined',\\n        //PS3 indicates loaded and complete, but need to wait for complete\\n        //specifically. Sequence is 'loading', 'loaded', execution,\\n        // then 'complete'. The UA check is unfortunate, but not sure how\\n        //to feature test w/o causing perf issues.\\n        readyRegExp = isBrowser && navigator.platform === 'PLAYSTATION 3' ?\\n                      /^complete$/ : /^(complete|loaded)$/,\\n        defContextName = '_',\\n        //Oh the tragedy, detecting opera. See the usage of isOpera for reason.\\n        isOpera = typeof opera !== 'undefined' && opera.toString() === '[object Opera]',\\n        contexts = {},\\n        cfg = {},\\n        globalDefQueue = [],\\n        useInteractive = false;\\n\\n    //Could match something like ')//comment', do not lose the prefix to comment.\\n    function commentReplace(match, singlePrefix) {\\n        return singlePrefix || '';\\n    }\\n\\n    function isFunction(it) {\\n        return ostring.call(it) === '[object Function]';\\n    }\\n\\n    function isArray(it) {\\n        return ostring.call(it) === '[object Array]';\\n    }\\n\\n    /**\\n     * Helper function for iterating over an array. If the func returns\\n     * a true value, it will break out of the loop.\\n     */\\n    function each(ary, func) {\\n        if (ary) {\\n            var i;\\n            for (i = 0; i < ary.length; i += 1) {\\n                if (ary[i] && func(ary[i], i, ary)) {\\n                    break;\\n                }\\n            }\\n        }\\n    }\\n\\n    /**\\n     * Helper function for iterating over an array backwards. If the func\\n     * returns a true value, it will break out of the loop.\\n     */\\n    function eachReverse(ary, func) {\\n        if (ary) {\\n            var i;\\n            for (i = ary.length - 1; i > -1; i -= 1) {\\n                if (ary[i] && func(ary[i], i, ary)) {\\n                    break;\\n                }\\n            }\\n        }\\n    }\\n\\n    function hasProp(obj, prop) {\\n        return hasOwn.call(obj, prop);\\n    }\\n\\n    function getOwn(obj, prop) {\\n        return hasProp(obj, prop) && obj[prop];\\n    }\\n\\n    /**\\n     * Cycles over properties in an object and calls a function for each\\n     * property value. If the function returns a truthy value, then the\\n     * iteration is stopped.\\n     */\\n    function eachProp(obj, func) {\\n        var prop;\\n        for (prop in obj) {\\n            if (hasProp(obj, prop)) {\\n                if (func(obj[prop], prop)) {\\n                    break;\\n                }\\n            }\\n        }\\n    }\\n\\n    /**\\n     * Simple function to mix in properties from source into target,\\n     * but only if target does not already have a property of the same name.\\n     */\\n    function mixin(target, source, force, deepStringMixin) {\\n        if (source) {\\n            eachProp(source, function (value, prop) {\\n                if (force || !hasProp(target, prop)) {\\n                    if (deepStringMixin && typeof value === 'object' && value &&\\n                        !isArray(value) && !isFunction(value) &&\\n                        !(value instanceof RegExp)) {\\n\\n                        if (!target[prop]) {\\n                            target[prop] = {};\\n                        }\\n                        mixin(target[prop], value, force, deepStringMixin);\\n                    } else {\\n                        target[prop] = value;\\n                    }\\n                }\\n            });\\n        }\\n        return target;\\n    }\\n\\n    //Similar to Function.prototype.bind, but the 'this' object is specified\\n    //first, since it is easier to read/figure out what 'this' will be.\\n    function bind(obj, fn) {\\n        return function () {\\n            return fn.apply(obj, arguments);\\n        };\\n    }\\n\\n    function scripts() {\\n        return document.getElementsByTagName('script');\\n    }\\n\\n    function defaultOnError(err) {\\n        throw err;\\n    }\\n\\n    //Allow getting a global that is expressed in\\n    //dot notation, like 'a.b.c'.\\n    function getGlobal(value) {\\n        if (!value) {\\n            return value;\\n        }\\n        var g = global;\\n        each(value.split('.'), function (part) {\\n            g = g[part];\\n        });\\n        return g;\\n    }\\n\\n    /**\\n     * Constructs an error with a pointer to an URL with more information.\\n     * @param {String} id the error ID that maps to an ID on a web page.\\n     * @param {String} message human readable error.\\n     * @param {Error} [err] the original error, if there is one.\\n     *\\n     * @returns {Error}\\n     */\\n    function makeError(id, msg, err, requireModules) {\\n        var e = new Error(msg + '\\\\nhttp://requirejs.org/docs/errors.html#' + id);\\n        e.requireType = id;\\n        e.requireModules = requireModules;\\n        if (err) {\\n            e.originalError = err;\\n        }\\n        return e;\\n    }\\n\\n    if (typeof define !== 'undefined') {\\n        //If a define is already in play via another AMD loader,\\n        //do not overwrite.\\n        return;\\n    }\\n\\n    if (typeof requirejs !== 'undefined') {\\n        if (isFunction(requirejs)) {\\n            //Do not overwrite an existing requirejs instance.\\n            return;\\n        }\\n        cfg = requirejs;\\n        requirejs = undefined;\\n    }\\n\\n    //Allow for a require config object\\n    if (typeof require !== 'undefined' && !isFunction(require)) {\\n        //assume it is a config object.\\n        cfg = require;\\n        require = undefined;\\n    }\\n\\n    function newContext(contextName) {\\n        var inCheckLoaded, Module, context, handlers,\\n            checkLoadedTimeoutId,\\n            config = {\\n                //Defaults. Do not set a default for map\\n                //config to speed up normalize(), which\\n                //will run faster if there is no default.\\n                waitSeconds: 7,\\n                baseUrl: './',\\n                paths: {},\\n                bundles: {},\\n                pkgs: {},\\n                shim: {},\\n                config: {}\\n            },\\n            registry = {},\\n            //registry of just enabled modules, to speed\\n            //cycle breaking code when lots of modules\\n            //are registered, but not activated.\\n            enabledRegistry = {},\\n            undefEvents = {},\\n            defQueue = [],\\n            defined = {},\\n            urlFetched = {},\\n            bundlesMap = {},\\n            requireCounter = 1,\\n            unnormalizedCounter = 1;\\n\\n        /**\\n         * Trims the . and .. from an array of path segments.\\n         * It will keep a leading path segment if a .. will become\\n         * the first path segment, to help with module name lookups,\\n         * which act like paths, but can be remapped. But the end result,\\n         * all paths that use this function should look normalized.\\n         * NOTE: this method MODIFIES the input array.\\n         * @param {Array} ary the array of path segments.\\n         */\\n        function trimDots(ary) {\\n            var i, part;\\n            for (i = 0; i < ary.length; i++) {\\n                part = ary[i];\\n                if (part === '.') {\\n                    ary.splice(i, 1);\\n                    i -= 1;\\n                } else if (part === '..') {\\n                    // If at the start, or previous value is still ..,\\n                    // keep them so that when converted to a path it may\\n                    // still work when converted to a path, even though\\n                    // as an ID it is less than ideal. In larger point\\n                    // releases, may be better to just kick out an error.\\n                    if (i === 0 || (i === 1 && ary[2] === '..') || ary[i - 1] === '..') {\\n                        continue;\\n                    } else if (i > 0) {\\n                        ary.splice(i - 1, 2);\\n                        i -= 2;\\n                    }\\n                }\\n            }\\n        }\\n\\n        /**\\n         * Given a relative module name, like ./something, normalize it to\\n         * a real name that can be mapped to a path.\\n         * @param {String} name the relative name\\n         * @param {String} baseName a real name that the name arg is relative\\n         * to.\\n         * @param {Boolean} applyMap apply the map config to the value. Should\\n         * only be done if this normalization is for a dependency ID.\\n         * @returns {String} normalized name\\n         */\\n        function normalize(name, baseName, applyMap) {\\n            var pkgMain, mapValue, nameParts, i, j, nameSegment, lastIndex,\\n                foundMap, foundI, foundStarMap, starI, normalizedBaseParts,\\n                baseParts = (baseName && baseName.split('/')),\\n                map = config.map,\\n                starMap = map && map['*'];\\n\\n            //Adjust any relative paths.\\n            if (name) {\\n                name = name.split('/');\\n                lastIndex = name.length - 1;\\n\\n                // If wanting node ID compatibility, strip .js from end\\n                // of IDs. Have to do this here, and not in nameToUrl\\n                // because node allows either .js or non .js to map\\n                // to same file.\\n                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\\n                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\\n                }\\n\\n                // Starts with a '.' so need the baseName\\n                if (name[0].charAt(0) === '.' && baseParts) {\\n                    //Convert baseName to array, and lop off the last part,\\n                    //so that . matches that 'directory' and not name of the baseName's\\n                    //module. For instance, baseName of 'one/two/three', maps to\\n                    //'one/two/three.js', but we want the directory, 'one/two' for\\n                    //this normalization.\\n                    normalizedBaseParts = baseParts.slice(0, baseParts.length - 1);\\n                    name = normalizedBaseParts.concat(name);\\n                }\\n\\n                trimDots(name);\\n                name = name.join('/');\\n            }\\n\\n            //Apply map config if available.\\n            if (applyMap && map && (baseParts || starMap)) {\\n                nameParts = name.split('/');\\n\\n                outerLoop: for (i = nameParts.length; i > 0; i -= 1) {\\n                    nameSegment = nameParts.slice(0, i).join('/');\\n\\n                    if (baseParts) {\\n                        //Find the longest baseName segment match in the config.\\n                        //So, do joins on the biggest to smallest lengths of baseParts.\\n                        for (j = baseParts.length; j > 0; j -= 1) {\\n                            mapValue = getOwn(map, baseParts.slice(0, j).join('/'));\\n\\n                            //baseName segment has config, find if it has one for\\n                            //this name.\\n                            if (mapValue) {\\n                                mapValue = getOwn(mapValue, nameSegment);\\n                                if (mapValue) {\\n                                    //Match, update name to the new value.\\n                                    foundMap = mapValue;\\n                                    foundI = i;\\n                                    break outerLoop;\\n                                }\\n                            }\\n                        }\\n                    }\\n\\n                    //Check for a star map match, but just hold on to it,\\n                    //if there is a shorter segment match later in a matching\\n                    //config, then favor over this star map.\\n                    if (!foundStarMap && starMap && getOwn(starMap, nameSegment)) {\\n                        foundStarMap = getOwn(starMap, nameSegment);\\n                        starI = i;\\n                    }\\n                }\\n\\n                if (!foundMap && foundStarMap) {\\n                    foundMap = foundStarMap;\\n                    foundI = starI;\\n                }\\n\\n                if (foundMap) {\\n                    nameParts.splice(0, foundI, foundMap);\\n                    name = nameParts.join('/');\\n                }\\n            }\\n\\n            // If the name points to a package's name, use\\n            // the package main instead.\\n            pkgMain = getOwn(config.pkgs, name);\\n\\n            return pkgMain ? pkgMain : name;\\n        }\\n\\n        function removeScript(name) {\\n            if (isBrowser) {\\n                each(scripts(), function (scriptNode) {\\n                    if (scriptNode.getAttribute('data-requiremodule') === name &&\\n                            scriptNode.getAttribute('data-requirecontext') === context.contextName) {\\n                        scriptNode.parentNode.removeChild(scriptNode);\\n                        return true;\\n                    }\\n                });\\n            }\\n        }\\n\\n        function hasPathFallback(id) {\\n            var pathConfig = getOwn(config.paths, id);\\n            if (pathConfig && isArray(pathConfig) && pathConfig.length > 1) {\\n                //Pop off the first array value, since it failed, and\\n                //retry\\n                pathConfig.shift();\\n                context.require.undef(id);\\n\\n                //Custom require that does not do map translation, since\\n                //ID is \\\"absolute\\\", already mapped/resolved.\\n                context.makeRequire(null, {\\n                    skipMap: true\\n                })([id]);\\n\\n                return true;\\n            }\\n        }\\n\\n        //Turns a plugin!resource to [plugin, resource]\\n        //with the plugin being undefined if the name\\n        //did not have a plugin prefix.\\n        function splitPrefix(name) {\\n            var prefix,\\n                index = name ? name.indexOf('!') : -1;\\n            if (index > -1) {\\n                prefix = name.substring(0, index);\\n                name = name.substring(index + 1, name.length);\\n            }\\n            return [prefix, name];\\n        }\\n\\n        /**\\n         * Creates a module mapping that includes plugin prefix, module\\n         * name, and path. If parentModuleMap is provided it will\\n         * also normalize the name via require.normalize()\\n         *\\n         * @param {String} name the module name\\n         * @param {String} [parentModuleMap] parent module map\\n         * for the module name, used to resolve relative names.\\n         * @param {Boolean} isNormalized: is the ID already normalized.\\n         * This is true if this call is done for a define() module ID.\\n         * @param {Boolean} applyMap: apply the map config to the ID.\\n         * Should only be true if this map is for a dependency.\\n         *\\n         * @returns {Object}\\n         */\\n        function makeModuleMap(name, parentModuleMap, isNormalized, applyMap) {\\n            var url, pluginModule, suffix, nameParts,\\n                prefix = null,\\n                parentName = parentModuleMap ? parentModuleMap.name : null,\\n                originalName = name,\\n                isDefine = true,\\n                normalizedName = '';\\n\\n            //If no name, then it means it is a require call, generate an\\n            //internal name.\\n            if (!name) {\\n                isDefine = false;\\n                name = '_@r' + (requireCounter += 1);\\n            }\\n\\n            nameParts = splitPrefix(name);\\n            prefix = nameParts[0];\\n            name = nameParts[1];\\n\\n            if (prefix) {\\n                prefix = normalize(prefix, parentName, applyMap);\\n                pluginModule = getOwn(defined, prefix);\\n            }\\n\\n            //Account for relative paths if there is a base name.\\n            if (name) {\\n                if (prefix) {\\n                    if (isNormalized) {\\n                        normalizedName = name;\\n                    } else if (pluginModule && pluginModule.normalize) {\\n                        //Plugin is loaded, use its normalize method.\\n                        normalizedName = pluginModule.normalize(name, function (name) {\\n                            return normalize(name, parentName, applyMap);\\n                        });\\n                    } else {\\n                        // If nested plugin references, then do not try to\\n                        // normalize, as it will not normalize correctly. This\\n                        // places a restriction on resourceIds, and the longer\\n                        // term solution is not to normalize until plugins are\\n                        // loaded and all normalizations to allow for async\\n                        // loading of a loader plugin. But for now, fixes the\\n                        // common uses. Details in #1131\\n                        normalizedName = name.indexOf('!') === -1 ?\\n                                         normalize(name, parentName, applyMap) :\\n                                         name;\\n                    }\\n                } else {\\n                    //A regular module.\\n                    normalizedName = normalize(name, parentName, applyMap);\\n\\n                    //Normalized name may be a plugin ID due to map config\\n                    //application in normalize. The map config values must\\n                    //already be normalized, so do not need to redo that part.\\n                    nameParts = splitPrefix(normalizedName);\\n                    prefix = nameParts[0];\\n                    normalizedName = nameParts[1];\\n                    isNormalized = true;\\n\\n                    url = context.nameToUrl(normalizedName);\\n                }\\n            }\\n\\n            //If the id is a plugin id that cannot be determined if it needs\\n            //normalization, stamp it with a unique ID so two matching relative\\n            //ids that may conflict can be separate.\\n            suffix = prefix && !pluginModule && !isNormalized ?\\n                     '_unnormalized' + (unnormalizedCounter += 1) :\\n                     '';\\n\\n            return {\\n                prefix: prefix,\\n                name: normalizedName,\\n                parentMap: parentModuleMap,\\n                unnormalized: !!suffix,\\n                url: url,\\n                originalName: originalName,\\n                isDefine: isDefine,\\n                id: (prefix ?\\n                        prefix + '!' + normalizedName :\\n                        normalizedName) + suffix\\n            };\\n        }\\n\\n        function getModule(depMap) {\\n            var id = depMap.id,\\n                mod = getOwn(registry, id);\\n\\n            if (!mod) {\\n                mod = registry[id] = new context.Module(depMap);\\n            }\\n\\n            return mod;\\n        }\\n\\n        function on(depMap, name, fn) {\\n            var id = depMap.id,\\n                mod = getOwn(registry, id);\\n\\n            if (hasProp(defined, id) &&\\n                    (!mod || mod.defineEmitComplete)) {\\n                if (name === 'defined') {\\n                    fn(defined[id]);\\n                }\\n            } else {\\n                mod = getModule(depMap);\\n                if (mod.error && name === 'error') {\\n                    fn(mod.error);\\n                } else {\\n                    mod.on(name, fn);\\n                }\\n            }\\n        }\\n\\n        function onError(err, errback) {\\n            var ids = err.requireModules,\\n                notified = false;\\n\\n            if (errback) {\\n                errback(err);\\n            } else {\\n                each(ids, function (id) {\\n                    var mod = getOwn(registry, id);\\n                    if (mod) {\\n                        //Set error on module, so it skips timeout checks.\\n                        mod.error = err;\\n                        if (mod.events.error) {\\n                            notified = true;\\n                            mod.emit('error', err);\\n                        }\\n                    }\\n                });\\n\\n                if (!notified) {\\n                    req.onError(err);\\n                }\\n            }\\n        }\\n\\n        /**\\n         * Internal method to transfer globalQueue items to this context's\\n         * defQueue.\\n         */\\n        function takeGlobalQueue() {\\n            //Push all the globalDefQueue items into the context's defQueue\\n            if (globalDefQueue.length) {\\n                each(globalDefQueue, function(queueItem) {\\n                    var id = queueItem[0];\\n                    if (typeof id === 'string') {\\n                        context.defQueueMap[id] = true;\\n                    }\\n                    defQueue.push(queueItem);\\n                });\\n                globalDefQueue = [];\\n            }\\n        }\\n\\n        handlers = {\\n            'require': function (mod) {\\n                if (mod.require) {\\n                    return mod.require;\\n                } else {\\n                    return (mod.require = context.makeRequire(mod.map));\\n                }\\n            },\\n            'exports': function (mod) {\\n                mod.usingExports = true;\\n                if (mod.map.isDefine) {\\n                    if (mod.exports) {\\n                        return (defined[mod.map.id] = mod.exports);\\n                    } else {\\n                        return (mod.exports = defined[mod.map.id] = {});\\n                    }\\n                }\\n            },\\n            'module': function (mod) {\\n                if (mod.module) {\\n                    return mod.module;\\n                } else {\\n                    return (mod.module = {\\n                        id: mod.map.id,\\n                        uri: mod.map.url,\\n                        config: function () {\\n                            return getOwn(config.config, mod.map.id) || {};\\n                        },\\n                        exports: mod.exports || (mod.exports = {})\\n                    });\\n                }\\n            }\\n        };\\n\\n        function cleanRegistry(id) {\\n            //Clean up machinery used for waiting modules.\\n            delete registry[id];\\n            delete enabledRegistry[id];\\n        }\\n\\n        function breakCycle(mod, traced, processed) {\\n            var id = mod.map.id;\\n\\n            if (mod.error) {\\n                mod.emit('error', mod.error);\\n            } else {\\n                traced[id] = true;\\n                each(mod.depMaps, function (depMap, i) {\\n                    var depId = depMap.id,\\n                        dep = getOwn(registry, depId);\\n\\n                    //Only force things that have not completed\\n                    //being defined, so still in the registry,\\n                    //and only if it has not been matched up\\n                    //in the module already.\\n                    if (dep && !mod.depMatched[i] && !processed[depId]) {\\n                        if (getOwn(traced, depId)) {\\n                            mod.defineDep(i, defined[depId]);\\n                            mod.check(); //pass false?\\n                        } else {\\n                            breakCycle(dep, traced, processed);\\n                        }\\n                    }\\n                });\\n                processed[id] = true;\\n            }\\n        }\\n\\n        function checkLoaded() {\\n            var err, usingPathFallback,\\n                waitInterval = config.waitSeconds * 1000,\\n                //It is possible to disable the wait interval by using waitSeconds of 0.\\n                expired = waitInterval && (context.startTime + waitInterval) < new Date().getTime(),\\n                noLoads = [],\\n                reqCalls = [],\\n                stillLoading = false,\\n                needCycleCheck = true;\\n\\n            //Do not bother if this call was a result of a cycle break.\\n            if (inCheckLoaded) {\\n                return;\\n            }\\n\\n            inCheckLoaded = true;\\n\\n            //Figure out the state of all the modules.\\n            eachProp(enabledRegistry, function (mod) {\\n                var map = mod.map,\\n                    modId = map.id;\\n\\n                //Skip things that are not enabled or in error state.\\n                if (!mod.enabled) {\\n                    return;\\n                }\\n\\n                if (!map.isDefine) {\\n                    reqCalls.push(mod);\\n                }\\n\\n                if (!mod.error) {\\n                    //If the module should be executed, and it has not\\n                    //been inited and time is up, remember it.\\n                    if (!mod.inited && expired) {\\n                        if (hasPathFallback(modId)) {\\n                            usingPathFallback = true;\\n                            stillLoading = true;\\n                        } else {\\n                            noLoads.push(modId);\\n                            removeScript(modId);\\n                        }\\n                    } else if (!mod.inited && mod.fetched && map.isDefine) {\\n                        stillLoading = true;\\n                        if (!map.prefix) {\\n                            //No reason to keep looking for unfinished\\n                            //loading. If the only stillLoading is a\\n                            //plugin resource though, keep going,\\n                            //because it may be that a plugin resource\\n                            //is waiting on a non-plugin cycle.\\n                            return (needCycleCheck = false);\\n                        }\\n                    }\\n                }\\n            });\\n\\n            if (expired && noLoads.length) {\\n                //If wait time expired, throw error of unloaded modules.\\n                err = makeError('timeout', 'Load timeout for modules: ' + noLoads, null, noLoads);\\n                err.contextName = context.contextName;\\n                return onError(err);\\n            }\\n\\n            //Not expired, check for a cycle.\\n            if (needCycleCheck) {\\n                each(reqCalls, function (mod) {\\n                    breakCycle(mod, {}, {});\\n                });\\n            }\\n\\n            //If still waiting on loads, and the waiting load is something\\n            //other than a plugin resource, or there are still outstanding\\n            //scripts, then just try back later.\\n            if ((!expired || usingPathFallback) && stillLoading) {\\n                //Something is still waiting to load. Wait for it, but only\\n                //if a timeout is not already in effect.\\n                if ((isBrowser || isWebWorker) && !checkLoadedTimeoutId) {\\n                    checkLoadedTimeoutId = setTimeout(function () {\\n                        checkLoadedTimeoutId = 0;\\n                        checkLoaded();\\n                    }, 50);\\n                }\\n            }\\n\\n            inCheckLoaded = false;\\n        }\\n\\n        Module = function (map) {\\n            this.events = getOwn(undefEvents, map.id) || {};\\n            this.map = map;\\n            this.shim = getOwn(config.shim, map.id);\\n            this.depExports = [];\\n            this.depMaps = [];\\n            this.depMatched = [];\\n            this.pluginMaps = {};\\n            this.depCount = 0;\\n\\n            /* this.exports this.factory\\n               this.depMaps = [],\\n               this.enabled, this.fetched\\n            */\\n        };\\n\\n        Module.prototype = {\\n            init: function (depMaps, factory, errback, options) {\\n                options = options || {};\\n\\n                //Do not do more inits if already done. Can happen if there\\n                //are multiple define calls for the same module. That is not\\n                //a normal, common case, but it is also not unexpected.\\n                if (this.inited) {\\n                    return;\\n                }\\n\\n                this.factory = factory;\\n\\n                if (errback) {\\n                    //Register for errors on this module.\\n                    this.on('error', errback);\\n                } else if (this.events.error) {\\n                    //If no errback already, but there are error listeners\\n                    //on this module, set up an errback to pass to the deps.\\n                    errback = bind(this, function (err) {\\n                        this.emit('error', err);\\n                    });\\n                }\\n\\n                //Do a copy of the dependency array, so that\\n                //source inputs are not modified. For example\\n                //\\\"shim\\\" deps are passed in here directly, and\\n                //doing a direct modification of the depMaps array\\n                //would affect that config.\\n                this.depMaps = depMaps && depMaps.slice(0);\\n\\n                this.errback = errback;\\n\\n                //Indicate this module has be initialized\\n                this.inited = true;\\n\\n                this.ignore = options.ignore;\\n\\n                //Could have option to init this module in enabled mode,\\n                //or could have been previously marked as enabled. However,\\n                //the dependencies are not known until init is called. So\\n                //if enabled previously, now trigger dependencies as enabled.\\n                if (options.enabled || this.enabled) {\\n                    //Enable this module and dependencies.\\n                    //Will call this.check()\\n                    this.enable();\\n                } else {\\n                    this.check();\\n                }\\n            },\\n\\n            defineDep: function (i, depExports) {\\n                //Because of cycles, defined callback for a given\\n                //export can be called more than once.\\n                if (!this.depMatched[i]) {\\n                    this.depMatched[i] = true;\\n                    this.depCount -= 1;\\n                    this.depExports[i] = depExports;\\n                }\\n            },\\n\\n            fetch: function () {\\n                if (this.fetched) {\\n                    return;\\n                }\\n                this.fetched = true;\\n\\n                context.startTime = (new Date()).getTime();\\n\\n                var map = this.map;\\n\\n                //If the manager is for a plugin managed resource,\\n                //ask the plugin to load it now.\\n                if (this.shim) {\\n                    context.makeRequire(this.map, {\\n                        enableBuildCallback: true\\n                    })(this.shim.deps || [], bind(this, function () {\\n                        return map.prefix ? this.callPlugin() : this.load();\\n                    }));\\n                } else {\\n                    //Regular dependency.\\n                    return map.prefix ? this.callPlugin() : this.load();\\n                }\\n            },\\n\\n            load: function () {\\n                var url = this.map.url;\\n\\n                //Regular dependency.\\n                if (!urlFetched[url]) {\\n                    urlFetched[url] = true;\\n                    context.load(this.map.id, url);\\n                }\\n            },\\n\\n            /**\\n             * Checks if the module is ready to define itself, and if so,\\n             * define it.\\n             */\\n            check: function () {\\n                if (!this.enabled || this.enabling) {\\n                    return;\\n                }\\n\\n                var err, cjsModule,\\n                    id = this.map.id,\\n                    depExports = this.depExports,\\n                    exports = this.exports,\\n                    factory = this.factory;\\n\\n                if (!this.inited) {\\n                    // Only fetch if not already in the defQueue.\\n                    if (!hasProp(context.defQueueMap, id)) {\\n                        this.fetch();\\n                    }\\n                } else if (this.error) {\\n                    this.emit('error', this.error);\\n                } else if (!this.defining) {\\n                    //The factory could trigger another require call\\n                    //that would result in checking this module to\\n                    //define itself again. If already in the process\\n                    //of doing that, skip this work.\\n                    this.defining = true;\\n\\n                    if (this.depCount < 1 && !this.defined) {\\n                        if (isFunction(factory)) {\\n                            //If there is an error listener, favor passing\\n                            //to that instead of throwing an error. However,\\n                            //only do it for define()'d  modules. require\\n                            //errbacks should not be called for failures in\\n                            //their callbacks (#699). However if a global\\n                            //onError is set, use that.\\n                            if ((this.events.error && this.map.isDefine) ||\\n                                req.onError !== defaultOnError) {\\n                                try {\\n                                    exports = context.execCb(id, factory, depExports, exports);\\n                                } catch (e) {\\n                                    err = e;\\n                                }\\n                            } else {\\n                                exports = context.execCb(id, factory, depExports, exports);\\n                            }\\n\\n                            // Favor return value over exports. If node/cjs in play,\\n                            // then will not have a return value anyway. Favor\\n                            // module.exports assignment over exports object.\\n                            if (this.map.isDefine && exports === undefined) {\\n                                cjsModule = this.module;\\n                                if (cjsModule) {\\n                                    exports = cjsModule.exports;\\n                                } else if (this.usingExports) {\\n                                    //exports already set the defined value.\\n                                    exports = this.exports;\\n                                }\\n                            }\\n\\n                            if (err) {\\n                                err.requireMap = this.map;\\n                                err.requireModules = this.map.isDefine ? [this.map.id] : null;\\n                                err.requireType = this.map.isDefine ? 'define' : 'require';\\n                                return onError((this.error = err));\\n                            }\\n\\n                        } else {\\n                            //Just a literal value\\n                            exports = factory;\\n                        }\\n\\n                        this.exports = exports;\\n\\n                        if (this.map.isDefine && !this.ignore) {\\n                            defined[id] = exports;\\n\\n                            if (req.onResourceLoad) {\\n                                var resLoadMaps = [];\\n                                each(this.depMaps, function (depMap) {\\n                                    resLoadMaps.push(depMap.normalizedMap || depMap);\\n                                });\\n                                req.onResourceLoad(context, this.map, resLoadMaps);\\n                            }\\n                        }\\n\\n                        //Clean up\\n                        cleanRegistry(id);\\n\\n                        this.defined = true;\\n                    }\\n\\n                    //Finished the define stage. Allow calling check again\\n                    //to allow define notifications below in the case of a\\n                    //cycle.\\n                    this.defining = false;\\n\\n                    if (this.defined && !this.defineEmitted) {\\n                        this.defineEmitted = true;\\n                        this.emit('defined', this.exports);\\n                        this.defineEmitComplete = true;\\n                    }\\n\\n                }\\n            },\\n\\n            callPlugin: function () {\\n                var map = this.map,\\n                    id = map.id,\\n                    //Map already normalized the prefix.\\n                    pluginMap = makeModuleMap(map.prefix);\\n\\n                //Mark this as a dependency for this plugin, so it\\n                //can be traced for cycles.\\n                this.depMaps.push(pluginMap);\\n\\n                on(pluginMap, 'defined', bind(this, function (plugin) {\\n                    var load, normalizedMap, normalizedMod,\\n                        bundleId = getOwn(bundlesMap, this.map.id),\\n                        name = this.map.name,\\n                        parentName = this.map.parentMap ? this.map.parentMap.name : null,\\n                        localRequire = context.makeRequire(map.parentMap, {\\n                            enableBuildCallback: true\\n                        });\\n\\n                    //If current map is not normalized, wait for that\\n                    //normalized name to load instead of continuing.\\n                    if (this.map.unnormalized) {\\n                        //Normalize the ID if the plugin allows it.\\n                        if (plugin.normalize) {\\n                            name = plugin.normalize(name, function (name) {\\n                                return normalize(name, parentName, true);\\n                            }) || '';\\n                        }\\n\\n                        //prefix and name should already be normalized, no need\\n                        //for applying map config again either.\\n                        normalizedMap = makeModuleMap(map.prefix + '!' + name,\\n                                                      this.map.parentMap,\\n                                                      true);\\n                        on(normalizedMap,\\n                            'defined', bind(this, function (value) {\\n                                this.map.normalizedMap = normalizedMap;\\n                                this.init([], function () { return value; }, null, {\\n                                    enabled: true,\\n                                    ignore: true\\n                                });\\n                            }));\\n\\n                        normalizedMod = getOwn(registry, normalizedMap.id);\\n                        if (normalizedMod) {\\n                            //Mark this as a dependency for this plugin, so it\\n                            //can be traced for cycles.\\n                            this.depMaps.push(normalizedMap);\\n\\n                            if (this.events.error) {\\n                                normalizedMod.on('error', bind(this, function (err) {\\n                                    this.emit('error', err);\\n                                }));\\n                            }\\n                            normalizedMod.enable();\\n                        }\\n\\n                        return;\\n                    }\\n\\n                    //If a paths config, then just load that file instead to\\n                    //resolve the plugin, as it is built into that paths layer.\\n                    if (bundleId) {\\n                        this.map.url = context.nameToUrl(bundleId);\\n                        this.load();\\n                        return;\\n                    }\\n\\n                    load = bind(this, function (value) {\\n                        this.init([], function () { return value; }, null, {\\n                            enabled: true\\n                        });\\n                    });\\n\\n                    load.error = bind(this, function (err) {\\n                        this.inited = true;\\n                        this.error = err;\\n                        err.requireModules = [id];\\n\\n                        //Remove temp unnormalized modules for this module,\\n                        //since they will never be resolved otherwise now.\\n                        eachProp(registry, function (mod) {\\n                            if (mod.map.id.indexOf(id + '_unnormalized') === 0) {\\n                                cleanRegistry(mod.map.id);\\n                            }\\n                        });\\n\\n                        onError(err);\\n                    });\\n\\n                    //Allow plugins to load other code without having to know the\\n                    //context or how to 'complete' the load.\\n                    load.fromText = bind(this, function (text, textAlt) {\\n                        /*jslint evil: true */\\n                        var moduleName = map.name,\\n                            moduleMap = makeModuleMap(moduleName),\\n                            hasInteractive = useInteractive;\\n\\n                        //As of 2.1.0, support just passing the text, to reinforce\\n                        //fromText only being called once per resource. Still\\n                        //support old style of passing moduleName but discard\\n                        //that moduleName in favor of the internal ref.\\n                        if (textAlt) {\\n                            text = textAlt;\\n                        }\\n\\n                        //Turn off interactive script matching for IE for any define\\n                        //calls in the text, then turn it back on at the end.\\n                        if (hasInteractive) {\\n                            useInteractive = false;\\n                        }\\n\\n                        //Prime the system by creating a module instance for\\n                        //it.\\n                        getModule(moduleMap);\\n\\n                        //Transfer any config to this other module.\\n                        if (hasProp(config.config, id)) {\\n                            config.config[moduleName] = config.config[id];\\n                        }\\n\\n                        try {\\n                            req.exec(text);\\n                        } catch (e) {\\n                            return onError(makeError('fromtexteval',\\n                                             'fromText eval for ' + id +\\n                                            ' failed: ' + e,\\n                                             e,\\n                                             [id]));\\n                        }\\n\\n                        if (hasInteractive) {\\n                            useInteractive = true;\\n                        }\\n\\n                        //Mark this as a dependency for the plugin\\n                        //resource\\n                        this.depMaps.push(moduleMap);\\n\\n                        //Support anonymous modules.\\n                        context.completeLoad(moduleName);\\n\\n                        //Bind the value of that module to the value for this\\n                        //resource ID.\\n                        localRequire([moduleName], load);\\n                    });\\n\\n                    //Use parentName here since the plugin's name is not reliable,\\n                    //could be some weird string with no path that actually wants to\\n                    //reference the parentName's path.\\n                    plugin.load(map.name, localRequire, load, config);\\n                }));\\n\\n                context.enable(pluginMap, this);\\n                this.pluginMaps[pluginMap.id] = pluginMap;\\n            },\\n\\n            enable: function () {\\n                enabledRegistry[this.map.id] = this;\\n                this.enabled = true;\\n\\n                //Set flag mentioning that the module is enabling,\\n                //so that immediate calls to the defined callbacks\\n                //for dependencies do not trigger inadvertent load\\n                //with the depCount still being zero.\\n                this.enabling = true;\\n\\n                //Enable each dependency\\n                each(this.depMaps, bind(this, function (depMap, i) {\\n                    var id, mod, handler;\\n\\n                    if (typeof depMap === 'string') {\\n                        //Dependency needs to be converted to a depMap\\n                        //and wired up to this module.\\n                        depMap = makeModuleMap(depMap,\\n                                               (this.map.isDefine ? this.map : this.map.parentMap),\\n                                               false,\\n                                               !this.skipMap);\\n                        this.depMaps[i] = depMap;\\n\\n                        handler = getOwn(handlers, depMap.id);\\n\\n                        if (handler) {\\n                            this.depExports[i] = handler(this);\\n                            return;\\n                        }\\n\\n                        this.depCount += 1;\\n\\n                        on(depMap, 'defined', bind(this, function (depExports) {\\n                            if (this.undefed) {\\n                                return;\\n                            }\\n                            this.defineDep(i, depExports);\\n                            this.check();\\n                        }));\\n\\n                        if (this.errback) {\\n                            on(depMap, 'error', bind(this, this.errback));\\n                        } else if (this.events.error) {\\n                            // No direct errback on this module, but something\\n                            // else is listening for errors, so be sure to\\n                            // propagate the error correctly.\\n                            on(depMap, 'error', bind(this, function(err) {\\n                                this.emit('error', err);\\n                            }));\\n                        }\\n                    }\\n\\n                    id = depMap.id;\\n                    mod = registry[id];\\n\\n                    //Skip special modules like 'require', 'exports', 'module'\\n                    //Also, don't call enable if it is already enabled,\\n                    //important in circular dependency cases.\\n                    if (!hasProp(handlers, id) && mod && !mod.enabled) {\\n                        context.enable(depMap, this);\\n                    }\\n                }));\\n\\n                //Enable each plugin that is used in\\n                //a dependency\\n                eachProp(this.pluginMaps, bind(this, function (pluginMap) {\\n                    var mod = getOwn(registry, pluginMap.id);\\n                    if (mod && !mod.enabled) {\\n                        context.enable(pluginMap, this);\\n                    }\\n                }));\\n\\n                this.enabling = false;\\n\\n                this.check();\\n            },\\n\\n            on: function (name, cb) {\\n                var cbs = this.events[name];\\n                if (!cbs) {\\n                    cbs = this.events[name] = [];\\n                }\\n                cbs.push(cb);\\n            },\\n\\n            emit: function (name, evt) {\\n                each(this.events[name], function (cb) {\\n                    cb(evt);\\n                });\\n                if (name === 'error') {\\n                    //Now that the error handler was triggered, remove\\n                    //the listeners, since this broken Module instance\\n                    //can stay around for a while in the registry.\\n                    delete this.events[name];\\n                }\\n            }\\n        };\\n\\n        function callGetModule(args) {\\n            //Skip modules already defined.\\n            if (!hasProp(defined, args[0])) {\\n                getModule(makeModuleMap(args[0], null, true)).init(args[1], args[2]);\\n            }\\n        }\\n\\n        function removeListener(node, func, name, ieName) {\\n            //Favor detachEvent because of IE9\\n            //issue, see attachEvent/addEventListener comment elsewhere\\n            //in this file.\\n            if (node.detachEvent && !isOpera) {\\n                //Probably IE. If not it will throw an error, which will be\\n                //useful to know.\\n                if (ieName) {\\n                    node.detachEvent(ieName, func);\\n                }\\n            } else {\\n                node.removeEventListener(name, func, false);\\n            }\\n        }\\n\\n        /**\\n         * Given an event from a script node, get the requirejs info from it,\\n         * and then removes the event listeners on the node.\\n         * @param {Event} evt\\n         * @returns {Object}\\n         */\\n        function getScriptData(evt) {\\n            //Using currentTarget instead of target for Firefox 2.0's sake. Not\\n            //all old browsers will be supported, but this one was easy enough\\n            //to support and still makes sense.\\n            var node = evt.currentTarget || evt.srcElement;\\n\\n            //Remove the listeners once here.\\n            // removeListener(node, context.onScriptLoad, 'load', 'onreadystatechange');\\n            // removeListener(node, context.onScriptError, 'error');\\n\\n            return {\\n                node: node,\\n                id: node && node.getAttribute('data-requiremodule')\\n            };\\n        }\\n\\n        function intakeDefines() {\\n            var args;\\n\\n            //Any defined modules in the global queue, intake them now.\\n            takeGlobalQueue();\\n\\n            //Make sure any remaining defQueue items get properly processed.\\n            while (defQueue.length) {\\n                args = defQueue.shift();\\n                if (args[0] === null) {\\n                    return onError(makeError('mismatch', 'Mismatched anonymous define() module: ' +\\n                        args[args.length - 1]));\\n                } else {\\n                    //args are id, deps, factory. Should be normalized by the\\n                    //define() function.\\n                    callGetModule(args);\\n                }\\n            }\\n            context.defQueueMap = {};\\n        }\\n\\n        context = {\\n            config: config,\\n            contextName: contextName,\\n            registry: registry,\\n            defined: defined,\\n            urlFetched: urlFetched,\\n            defQueue: defQueue,\\n            defQueueMap: {},\\n            Module: Module,\\n            makeModuleMap: makeModuleMap,\\n            nextTick: req.nextTick,\\n            onError: onError,\\n\\n            /**\\n             * Set a configuration for the context.\\n             * @param {Object} cfg config object to integrate.\\n             */\\n            configure: function (cfg) {\\n                //Make sure the baseUrl ends in a slash.\\n                if (cfg.baseUrl) {\\n                    if (cfg.baseUrl.charAt(cfg.baseUrl.length - 1) !== '/') {\\n                        cfg.baseUrl += '/';\\n                    }\\n                }\\n\\n                // Convert old style urlArgs string to a function.\\n                if (typeof cfg.urlArgs === 'string') {\\n                    var urlArgs = cfg.urlArgs;\\n                    cfg.urlArgs = function(id, url) {\\n                        return (url.indexOf('?') === -1 ? '?' : '&') + urlArgs;\\n                    };\\n                }\\n\\n                //Save off the paths since they require special processing,\\n                //they are additive.\\n                var shim = config.shim,\\n                    objs = {\\n                        paths: true,\\n                        bundles: true,\\n                        config: true,\\n                        map: true\\n                    };\\n\\n                eachProp(cfg, function (value, prop) {\\n                    if (objs[prop]) {\\n                        if (!config[prop]) {\\n                            config[prop] = {};\\n                        }\\n                        mixin(config[prop], value, true, true);\\n                    } else {\\n                        config[prop] = value;\\n                    }\\n                });\\n\\n                //Reverse map the bundles\\n                if (cfg.bundles) {\\n                    eachProp(cfg.bundles, function (value, prop) {\\n                        each(value, function (v) {\\n                            if (v !== prop) {\\n                                bundlesMap[v] = prop;\\n                            }\\n                        });\\n                    });\\n                }\\n\\n                //Merge shim\\n                if (cfg.shim) {\\n                    eachProp(cfg.shim, function (value, id) {\\n                        //Normalize the structure\\n                        if (isArray(value)) {\\n                            value = {\\n                                deps: value\\n                            };\\n                        }\\n                        if ((value.exports || value.init) && !value.exportsFn) {\\n                            value.exportsFn = context.makeShimExports(value);\\n                        }\\n                        shim[id] = value;\\n                    });\\n                    config.shim = shim;\\n                }\\n\\n                //Adjust packages if necessary.\\n                if (cfg.packages) {\\n                    each(cfg.packages, function (pkgObj) {\\n                        var location, name;\\n\\n                        pkgObj = typeof pkgObj === 'string' ? {name: pkgObj} : pkgObj;\\n\\n                        name = pkgObj.name;\\n                        location = pkgObj.location;\\n                        if (location) {\\n                            config.paths[name] = pkgObj.location;\\n                        }\\n\\n                        //Save pointer to main module ID for pkg name.\\n                        //Remove leading dot in main, so main paths are normalized,\\n                        //and remove any trailing .js, since different package\\n                        //envs have different conventions: some use a module name,\\n                        //some use a file name.\\n                        config.pkgs[name] = pkgObj.name + '/' + (pkgObj.main || 'main')\\n                                     .replace(currDirRegExp, '')\\n                                     .replace(jsSuffixRegExp, '');\\n                    });\\n                }\\n\\n                //If there are any \\\"waiting to execute\\\" modules in the registry,\\n                //update the maps for them, since their info, like URLs to load,\\n                //may have changed.\\n                eachProp(registry, function (mod, id) {\\n                    //If module already has init called, since it is too\\n                    //late to modify them, and ignore unnormalized ones\\n                    //since they are transient.\\n                    if (!mod.inited && !mod.map.unnormalized) {\\n                        mod.map = makeModuleMap(id, null, true);\\n                    }\\n                });\\n\\n                //If a deps array or a config callback is specified, then call\\n                //require with those args. This is useful when require is defined as a\\n                //config object before require.js is loaded.\\n                if (cfg.deps || cfg.callback) {\\n                    context.require(cfg.deps || [], cfg.callback);\\n                }\\n            },\\n\\n            makeShimExports: function (value) {\\n                function fn() {\\n                    var ret;\\n                    if (value.init) {\\n                        ret = value.init.apply(global, arguments);\\n                    }\\n                    return ret || (value.exports && getGlobal(value.exports));\\n                }\\n                return fn;\\n            },\\n\\n            makeRequire: function (relMap, options) {\\n                options = options || {};\\n\\n                function localRequire(deps, callback, errback) {\\n                    var id, map, requireMod;\\n\\n                    if (options.enableBuildCallback && callback && isFunction(callback)) {\\n                        callback.__requireJsBuild = true;\\n                    }\\n\\n                    if (typeof deps === 'string') {\\n                        if (isFunction(callback)) {\\n                            //Invalid call\\n                            return onError(makeError('requireargs', 'Invalid require call'), errback);\\n                        }\\n\\n                        //If require|exports|module are requested, get the\\n                        //value for them from the special handlers. Caveat:\\n                        //this only works while module is being defined.\\n                        if (relMap && hasProp(handlers, deps)) {\\n                            return handlers[deps](registry[relMap.id]);\\n                        }\\n\\n                        //Synchronous access to one module. If require.get is\\n                        //available (as in the Node adapter), prefer that.\\n                        if (req.get) {\\n                            return req.get(context, deps, relMap, localRequire);\\n                        }\\n\\n                        //Normalize module name, if it contains . or ..\\n                        map = makeModuleMap(deps, relMap, false, true);\\n                        id = map.id;\\n\\n                        if (!hasProp(defined, id)) {\\n                            return onError(makeError('notloaded', 'Module name \\\"' +\\n                                        id +\\n                                        '\\\" has not been loaded yet for context: ' +\\n                                        contextName +\\n                                        (relMap ? '' : '. Use require([])')));\\n                        }\\n                        return defined[id];\\n                    }\\n\\n                    //Grab defines waiting in the global queue.\\n                    intakeDefines();\\n\\n                    //Mark all the dependencies as needing to be loaded.\\n                    context.nextTick(function () {\\n                        //Some defines could have been added since the\\n                        //require call, collect them.\\n                        intakeDefines();\\n\\n                        requireMod = getModule(makeModuleMap(null, relMap));\\n\\n                        //Store if map config should be applied to this require\\n                        //call for dependencies.\\n                        requireMod.skipMap = options.skipMap;\\n\\n                        requireMod.init(deps, callback, errback, {\\n                            enabled: true\\n                        });\\n\\n                        checkLoaded();\\n                    });\\n\\n                    return localRequire;\\n                }\\n\\n                mixin(localRequire, {\\n                    isBrowser: isBrowser,\\n\\n                    /**\\n                     * Converts a module name + .extension into an URL path.\\n                     * *Requires* the use of a module name. It does not support using\\n                     * plain URLs like nameToUrl.\\n                     */\\n                    toUrl: function (moduleNamePlusExt) {\\n                        var ext,\\n                            index = moduleNamePlusExt.lastIndexOf('.'),\\n                            segment = moduleNamePlusExt.split('/')[0],\\n                            isRelative = segment === '.' || segment === '..';\\n\\n                        //Have a file extension alias, and it is not the\\n                        //dots from a relative path.\\n                        if (index !== -1 && (!isRelative || index > 1)) {\\n                            ext = moduleNamePlusExt.substring(index, moduleNamePlusExt.length);\\n                            moduleNamePlusExt = moduleNamePlusExt.substring(0, index);\\n                        }\\n\\n                        return context.nameToUrl(normalize(moduleNamePlusExt,\\n                                                relMap && relMap.id, true), ext,  true);\\n                    },\\n\\n                    defined: function (id) {\\n                        return hasProp(defined, makeModuleMap(id, relMap, false, true).id);\\n                    },\\n\\n                    specified: function (id) {\\n                        id = makeModuleMap(id, relMap, false, true).id;\\n                        return hasProp(defined, id) || hasProp(registry, id);\\n                    }\\n                });\\n\\n                //Only allow undef on top level require calls\\n                if (!relMap) {\\n                    localRequire.undef = function (id) {\\n                        //Bind any waiting define() calls to this context,\\n                        //fix for #408\\n                        takeGlobalQueue();\\n\\n                        var map = makeModuleMap(id, relMap, true),\\n                            mod = getOwn(registry, id);\\n\\n                        mod.undefed = true;\\n                        removeScript(id);\\n\\n                        delete defined[id];\\n                        delete urlFetched[map.url];\\n                        delete undefEvents[id];\\n\\n                        //Clean queued defines too. Go backwards\\n                        //in array so that the splices do not\\n                        //mess up the iteration.\\n                        eachReverse(defQueue, function(args, i) {\\n                            if (args[0] === id) {\\n                                defQueue.splice(i, 1);\\n                            }\\n                        });\\n                        delete context.defQueueMap[id];\\n\\n                        if (mod) {\\n                            //Hold on to listeners in case the\\n                            //module will be attempted to be reloaded\\n                            //using a different config.\\n                            if (mod.events.defined) {\\n                                undefEvents[id] = mod.events;\\n                            }\\n\\n                            cleanRegistry(id);\\n                        }\\n                    };\\n                }\\n\\n                return localRequire;\\n            },\\n\\n            /**\\n             * Called to enable a module if it is still in the registry\\n             * awaiting enablement. A second arg, parent, the parent module,\\n             * is passed in for context, when this method is overridden by\\n             * the optimizer. Not shown here to keep code compact.\\n             */\\n            enable: function (depMap) {\\n                var mod = getOwn(registry, depMap.id);\\n                if (mod) {\\n                    getModule(depMap).enable();\\n                }\\n            },\\n\\n            /**\\n             * Internal method used by environment adapters to complete a load event.\\n             * A load event could be a script load or just a load pass from a synchronous\\n             * load call.\\n             * @param {String} moduleName the name of the module to potentially complete.\\n             */\\n            completeLoad: function (moduleName) {\\n                var found, args, mod,\\n                    shim = getOwn(config.shim, moduleName) || {},\\n                    shExports = shim.exports;\\n\\n                takeGlobalQueue();\\n\\n                while (defQueue.length) {\\n                    args = defQueue.shift();\\n                    if (args[0] === null) {\\n                        args[0] = moduleName;\\n                        //If already found an anonymous module and bound it\\n                        //to this name, then this is some other anon module\\n                        //waiting for its completeLoad to fire.\\n                        if (found) {\\n                            break;\\n                        }\\n                        found = true;\\n                    } else if (args[0] === moduleName) {\\n                        //Found matching define call for this script!\\n                        found = true;\\n                    }\\n\\n                    callGetModule(args);\\n                }\\n                context.defQueueMap = {};\\n\\n                //Do this after the cycle of callGetModule in case the result\\n                //of those calls/init calls changes the registry.\\n                mod = getOwn(registry, moduleName);\\n\\n                if (!found && !hasProp(defined, moduleName) && mod && !mod.inited) {\\n                    if (config.enforceDefine && (!shExports || !getGlobal(shExports))) {\\n                        if (hasPathFallback(moduleName)) {\\n                            return;\\n                        } else {\\n                            return onError(makeError('nodefine',\\n                                             'No define call for ' + moduleName,\\n                                             null,\\n                                             [moduleName]));\\n                        }\\n                    } else {\\n                        //A script that does not call define(), so just simulate\\n                        //the call for it.\\n                        callGetModule([moduleName, (shim.deps || []), shim.exportsFn]);\\n                    }\\n                }\\n\\n                checkLoaded();\\n            },\\n\\n            /**\\n             * Converts a module name to a file path. Supports cases where\\n             * moduleName may actually be just an URL.\\n             * Note that it **does not** call normalize on the moduleName,\\n             * it is assumed to have already been normalized. This is an\\n             * internal API, not a public one. Use toUrl for the public API.\\n             */\\n            nameToUrl: function (moduleName, ext, skipExt) {\\n                var paths, syms, i, parentModule, url,\\n                    parentPath, bundleId,\\n                    pkgMain = getOwn(config.pkgs, moduleName);\\n\\n                if (pkgMain) {\\n                    moduleName = pkgMain;\\n                }\\n\\n                bundleId = getOwn(bundlesMap, moduleName);\\n\\n                if (bundleId) {\\n                    return context.nameToUrl(bundleId, ext, skipExt);\\n                }\\n\\n                //If a colon is in the URL, it indicates a protocol is used and it is just\\n                //an URL to a file, or if it starts with a slash, contains a query arg (i.e. ?)\\n                //or ends with .js, then assume the user meant to use an url and not a module id.\\n                //The slash is important for protocol-less URLs as well as full paths.\\n                if (req.jsExtRegExp.test(moduleName)) {\\n                    //Just a plain path, not module name lookup, so just return it.\\n                    //Add extension if it is included. This is a bit wonky, only non-.js things pass\\n                    //an extension, this method probably needs to be reworked.\\n                    url = moduleName + (ext || '');\\n                } else {\\n                    //A module that needs to be converted to a path.\\n                    paths = config.paths;\\n\\n                    syms = moduleName.split('/');\\n                    //For each module name segment, see if there is a path\\n                    //registered for it. Start with most specific name\\n                    //and work up from it.\\n                    for (i = syms.length; i > 0; i -= 1) {\\n                        parentModule = syms.slice(0, i).join('/');\\n\\n                        parentPath = getOwn(paths, parentModule);\\n                        if (parentPath) {\\n                            //If an array, it means there are a few choices,\\n                            //Choose the one that is desired\\n                            if (isArray(parentPath)) {\\n                                parentPath = parentPath[0];\\n                            }\\n                            syms.splice(0, i, parentPath);\\n                            break;\\n                        }\\n                    }\\n\\n                    //Join the path parts together, then figure out if baseUrl is needed.\\n                    url = syms.join('/');\\n                    url += (ext || (/^data\\\\:|^blob\\\\:|\\\\?/.test(url) || skipExt ? '' : '.js'));\\n                    url = (url.charAt(0) === '/' || url.match(/^[\\\\w\\\\+\\\\.\\\\-]+:/) ? '' : config.baseUrl) + url;\\n                }\\n\\n                return config.urlArgs && !/^blob\\\\:/.test(url) ?\\n                       url + config.urlArgs(moduleName, url) : url;\\n            },\\n\\n            //Delegates to req.load. Broken out as a separate function to\\n            //allow overriding in the optimizer.\\n            load: function (id, url) {\\n                req.load(context, id, url);\\n            },\\n\\n            /**\\n             * Executes a module callback function. Broken out as a separate function\\n             * solely to allow the build system to sequence the files in the built\\n             * layer in the right sequence.\\n             *\\n             * @private\\n             */\\n            execCb: function (name, callback, args, exports) {\\n                return callback.apply(exports, args);\\n            },\\n\\n            /**\\n             * callback for script loads, used to check status of loading.\\n             *\\n             * @param {Event} evt the event from the browser for the script\\n             * that was loaded.\\n             */\\n            onScriptLoad: function (evt) {\\n                //Using currentTarget instead of target for Firefox 2.0's sake. Not\\n                //all old browsers will be supported, but this one was easy enough\\n                //to support and still makes sense.\\n                if (evt.type === 'load' ||\\n                        (readyRegExp.test((evt.currentTarget || evt.srcElement).readyState))) {\\n                    //Reset interactive script so a script node is not held onto for\\n                    //to long.\\n                    interactiveScript = null;\\n\\n                    //Pull out the name of the module and the context.\\n                    var data = getScriptData(evt);\\n                    context.completeLoad(data.id);\\n                }\\n            },\\n\\n            /**\\n             * Callback for script errors.\\n             */\\n            onScriptError: function (evt) {\\n                var data = getScriptData(evt);\\n                if (!hasPathFallback(data.id)) {\\n                    var parents = [];\\n                    eachProp(registry, function(value, key) {\\n                        if (key.indexOf('_@r') !== 0) {\\n                            each(value.depMaps, function(depMap) {\\n                                if (depMap.id === data.id) {\\n                                    parents.push(key);\\n                                    return true;\\n                                }\\n                            });\\n                        }\\n                    });\\n                    return onError(makeError('scripterror', 'Script error for \\\"' + data.id +\\n                                             (parents.length ?\\n                                             '\\\", needed by: ' + parents.join(', ') :\\n                                             '\\\"'), evt, [data.id]));\\n                }\\n            }\\n        };\\n\\n        context.require = context.makeRequire();\\n        return context;\\n    }\\n\\n    /**\\n     * Main entry point.\\n     *\\n     * If the only argument to require is a string, then the module that\\n     * is represented by that string is fetched for the appropriate context.\\n     *\\n     * If the first argument is an array, then it will be treated as an array\\n     * of dependency string names to fetch. An optional function callback can\\n     * be specified to execute when all of those dependencies are available.\\n     *\\n     * Make a local req variable to help Caja compliance (it assumes things\\n     * on a require that are not standardized), and to give a short\\n     * name for minification/local scope use.\\n     */\\n    req = requirejs = function (deps, callback, errback, optional) {\\n\\n        //Find the right context, use default\\n        var context, config,\\n            contextName = defContextName;\\n\\n        // Determine if have config object in the call.\\n        if (!isArray(deps) && typeof deps !== 'string') {\\n            // deps is a config object\\n            config = deps;\\n            if (isArray(callback)) {\\n                // Adjust args if there are dependencies\\n                deps = callback;\\n                callback = errback;\\n                errback = optional;\\n            } else {\\n                deps = [];\\n            }\\n        }\\n\\n        if (config && config.context) {\\n            contextName = config.context;\\n        }\\n\\n        context = getOwn(contexts, contextName);\\n        if (!context) {\\n            context = contexts[contextName] = req.s.newContext(contextName);\\n        }\\n\\n        if (config) {\\n            context.configure(config);\\n        }\\n\\n        return context.require(deps, callback, errback);\\n    };\\n\\n    /**\\n     * Support require.config() to make it easier to cooperate with other\\n     * AMD loaders on globally agreed names.\\n     */\\n    req.config = function (config) {\\n        return req(config);\\n    };\\n\\n    /**\\n     * Execute something after the current tick\\n     * of the event loop. Override for other envs\\n     * that have a better solution than setTimeout.\\n     * @param  {Function} fn function to execute later.\\n     */\\n    req.nextTick = typeof setTimeout !== 'undefined' ? function (fn) {\\n        setTimeout(fn, 4);\\n    } : function (fn) { fn(); };\\n\\n    /**\\n     * Export require as a global, but only if it does not already exist.\\n     */\\n    if (!requireJSRequire) {\\n        requireJSRequire = req;\\n    }\\n\\n    req.version = version;\\n\\n    //Used to filter out dependencies that are already paths.\\n    req.jsExtRegExp = /^\\\\/|:|\\\\?|\\\\.js$/;\\n    req.isBrowser = isBrowser;\\n    s = req.s = {\\n        contexts: contexts,\\n        newContext: newContext\\n    };\\n\\n    //Create default context.\\n    req({});\\n\\n    //Exports some context-sensitive methods on global require.\\n    each([\\n        'toUrl',\\n        'undef',\\n        'defined',\\n        'specified'\\n    ], function (prop) {\\n        //Reference from contexts instead of early binding to default context,\\n        //so that during builds, the latest instance of the default context\\n        //with its config gets used.\\n        req[prop] = function () {\\n            var ctx = contexts[defContextName];\\n            return ctx.require[prop].apply(ctx, arguments);\\n        };\\n    });\\n\\n    if (isBrowser) {\\n        head = s.head = document.getElementsByTagName('head')[0];\\n        //If BASE tag is in play, using appendChild is a problem for IE6.\\n        //When that browser dies, this can be removed. Details in this jQuery bug:\\n        //http://dev.jquery.com/ticket/2709\\n        baseElement = document.getElementsByTagName('base')[0];\\n        if (baseElement) {\\n            head = s.head = baseElement.parentNode;\\n        }\\n    }\\n\\n    /**\\n     * Any errors that require explicitly generates will be passed to this\\n     * function. Intercept/override it if you want custom error handling.\\n     * @param {Error} err the error object.\\n     */\\n    req.onError = defaultOnError;\\n\\n    /**\\n     * Creates the node for the load command. Only used in browser envs.\\n     */\\n    req.createNode = function (config, moduleName, url) {\\n        var node = config.xhtml ?\\n                document.createElementNS('http://www.w3.org/1999/xhtml', 'html:script') :\\n                document.createElement('script');\\n        node.type = config.scriptType || 'text/javascript';\\n        node.charset = 'utf-8';\\n        node.async = true;\\n        return node;\\n    };\\n\\n    /**\\n     * Does the request to load a module for the browser case.\\n     * Make this a separate function to allow other environments\\n     * to override it.\\n     *\\n     * @param {Object} context the require context to find state.\\n     * @param {String} moduleName the name of the module.\\n     * @param {Object} url the URL to the module.\\n     */\\n    req.load = function (context, moduleName, url) {\\n        var config = (context && context.config) || {},\\n            node;\\n        if (isBrowser) {\\n            //In the browser so use a script tag\\n            node = req.createNode(config, moduleName, url);\\n\\n            node.setAttribute('data-requirecontext', context.contextName);\\n            node.setAttribute('data-requiremodule', moduleName);\\n\\n            //Set up load listener. Test attachEvent first because IE9 has\\n            //a subtle issue in its addEventListener and script onload firings\\n            //that do not match the behavior of all other browsers with\\n            //addEventListener support, which fire the onload event for a\\n            //script right after the script execution. See:\\n            //https://connect.microsoft.com/IE/feedback/details/648057/script-onload-event-is-not-fired-immediately-after-script-execution\\n            //UNFORTUNATELY Opera implements attachEvent but does not follow the script\\n            //script execution mode.\\n            if (node.attachEvent &&\\n                    //Check if node.attachEvent is artificially added by custom script or\\n                    //natively supported by browser\\n                    //read https://github.com/requirejs/requirejs/issues/187\\n                    //if we can NOT find [native code] then it must NOT natively supported.\\n                    //in IE8, node.attachEvent does not have toString()\\n                    //Note the test for \\\"[native code\\\" with no closing brace, see:\\n                    //https://github.com/requirejs/requirejs/issues/273\\n                    !(node.attachEvent.toString && node.attachEvent.toString().indexOf('[native code') < 0) &&\\n                    !isOpera) {\\n                //Probably IE. IE (at least 6-8) do not fire\\n                //script onload right after executing the script, so\\n                //we cannot tie the anonymous define call to a name.\\n                //However, IE reports the script as being in 'interactive'\\n                //readyState at the time of the define call.\\n                useInteractive = true;\\n\\n                node.attachEvent('onreadystatechange', context.onScriptLoad);\\n                //It would be great to add an error handler here to catch\\n                //404s in IE9+. However, onreadystatechange will fire before\\n                //the error handler, so that does not help. If addEventListener\\n                //is used, then IE will fire error before load, but we cannot\\n                //use that pathway given the connect.microsoft.com issue\\n                //mentioned above about not doing the 'script execute,\\n                //then fire the script load event listener before execute\\n                //next script' that other browsers do.\\n                //Best hope: IE10 fixes the issues,\\n                //and then destroys all installs of IE 6-9.\\n                //node.attachEvent('onerror', context.onScriptError);\\n            } else {\\n                node.addEventListener('load', context.onScriptLoad, false);\\n                node.addEventListener('error', context.onScriptError, false);\\n            }\\n            node.src = url;\\n\\n            //Calling onNodeCreated after all properties on the node have been\\n            //set, but before it is placed in the DOM.\\n            if (config.onNodeCreated) {\\n                config.onNodeCreated(node, config, moduleName, url);\\n            }\\n\\n            //For some cache cases in IE 6-8, the script executes before the end\\n            //of the appendChild execution, so to tie an anonymous define\\n            //call to the module name (which is stored on the node), hold on\\n            //to a reference to this node, but clear after the DOM insertion.\\n            currentlyAddingScript = node;\\n            if (baseElement) {\\n                // head.insertBefore(node, baseElement);\\n            } else {\\n                // head.appendChild(node);\\n            }\\n            currentlyAddingScript = null;\\n\\n            context.onScriptLoad({ type: 'load' })\\n\\n            return node;\\n        } else if (isWebWorker) {\\n            try {\\n                //In a web worker, use importScripts. This is not a very\\n                //efficient use of importScripts, importScripts will block until\\n                //its script is downloaded and evaluated. However, if web workers\\n                //are in play, the expectation is that a build has been done so\\n                //that only one script needs to be loaded anyway. This may need\\n                //to be reevaluated if other use cases become common.\\n\\n                // Post a task to the event loop to work around a bug in WebKit\\n                // where the worker gets garbage-collected after calling\\n                // importScripts(): https://webkit.org/b/153317\\n                setTimeout(function() {}, 0);\\n                importScripts(url);\\n\\n                //Account for anonymous modules\\n                context.completeLoad(moduleName);\\n            } catch (e) {\\n                context.onError(makeError('importscripts',\\n                                'importScripts failed for ' +\\n                                    moduleName + ' at ' + url,\\n                                e,\\n                                [moduleName]));\\n            }\\n        }\\n    };\\n\\n    function getInteractiveScript() {\\n        if (interactiveScript && interactiveScript.readyState === 'interactive') {\\n            return interactiveScript;\\n        }\\n\\n        eachReverse(scripts(), function (script) {\\n            if (script.readyState === 'interactive') {\\n                return (interactiveScript = script);\\n            }\\n        });\\n        return interactiveScript;\\n    }\\n\\n    //Look for a data-main script attribute, which could also adjust the baseUrl.\\n    if (isBrowser && !cfg.skipDataMain) {\\n        //Figure out baseUrl. Get it from the script tag with require.js in it.\\n        eachReverse(scripts(), function (script) {\\n            //Set the 'head' where we can append children by\\n            //using the script's parent.\\n            if (!head) {\\n                head = script.parentNode;\\n            }\\n\\n            //Look for a data-main attribute to set main script for the page\\n            //to load. If it is there, the path to data main becomes the\\n            //baseUrl, if it is not already set.\\n            dataMain = script.getAttribute('data-main');\\n            if (dataMain) {\\n                //Preserve dataMain in case it is a path (i.e. contains '?')\\n                mainScript = dataMain;\\n\\n                //Set final baseUrl if there is not already an explicit one,\\n                //but only do so if the data-main value is not a loader plugin\\n                //module ID.\\n                if (!cfg.baseUrl && mainScript.indexOf('!') === -1) {\\n                    //Pull off the directory of data-main for use as the\\n                    //baseUrl.\\n                    src = mainScript.split('/');\\n                    mainScript = src.pop();\\n                    subPath = src.length ? src.join('/')  + '/' : './';\\n\\n                    cfg.baseUrl = subPath;\\n                }\\n\\n                //Strip off any trailing .js since mainScript is now\\n                //like a module name.\\n                mainScript = mainScript.replace(jsSuffixRegExp, '');\\n\\n                //If mainScript is still a path, fall back to dataMain\\n                if (req.jsExtRegExp.test(mainScript)) {\\n                    mainScript = dataMain;\\n                }\\n\\n                //Put the data-main script in the files to load.\\n                cfg.deps = cfg.deps ? cfg.deps.concat(mainScript) : [mainScript];\\n\\n                return true;\\n            }\\n        });\\n    }\\n\\n    /**\\n     * The function that handles definitions of modules. Differs from\\n     * require() in that a string for the module should be the first argument,\\n     * and the function to execute after dependencies are loaded should\\n     * return a value to define the module corresponding to the first argument's\\n     * name.\\n     */\\n    define = function (name, deps, callback) {\\n        var node, context;\\n\\n        //Allow for anonymous modules\\n        if (typeof name !== 'string') {\\n            //Adjust args appropriately\\n            callback = deps;\\n            deps = name;\\n            name = null;\\n        }\\n\\n        //This module may not have dependencies\\n        if (!isArray(deps)) {\\n            callback = deps;\\n            deps = null;\\n        }\\n\\n        //If no name, and callback is a function, then figure out if it a\\n        //CommonJS thing with dependencies.\\n        if (!deps && isFunction(callback)) {\\n            deps = [];\\n            //Remove comments from the callback string,\\n            //look for require calls, and pull them into the dependencies,\\n            //but only if there are function args.\\n            if (callback.length) {\\n                callback\\n                    .toString()\\n                    .replace(commentRegExp, commentReplace)\\n                    .replace(cjsRequireRegExp, function (match, dep) {\\n                        deps.push(dep);\\n                    });\\n\\n                //May be a CommonJS thing even without require calls, but still\\n                //could use exports, and module. Avoid doing exports and module\\n                //work though if it just needs require.\\n                //REQUIRES the function to expect the CommonJS variables in the\\n                //order listed below.\\n                deps = (callback.length === 1 ? ['require'] : ['require', 'exports', 'module']).concat(deps);\\n            }\\n        }\\n\\n        //If in IE 6-8 and hit an anonymous define() call, do the interactive\\n        //work.\\n        if (useInteractive) {\\n            node = currentlyAddingScript || getInteractiveScript();\\n            if (node) {\\n                if (!name) {\\n                    name = node.getAttribute('data-requiremodule');\\n                }\\n                context = contexts[node.getAttribute('data-requirecontext')];\\n            }\\n        }\\n\\n        //Always save off evaluating the def call until the script onload handler.\\n        //This allows multiple modules to be in a file without prematurely\\n        //tracing dependencies, and allows for anonymous module support,\\n        //where the module name is not known until the script onload event\\n        //occurs. If no context, use the global queue, and get it processed\\n        //in the onscript load callback.\\n        if (context) {\\n            context.defQueue.push([name, deps, callback]);\\n            context.defQueueMap[name] = true;\\n        } else {\\n            globalDefQueue.push([name, deps, callback]);\\n        }\\n    };\\n\\n    define.amd = {\\n        jQuery: true\\n    };\\n\\n    /**\\n     * Executes the text. Normally just uses eval, but can be modified\\n     * to use a better, environment-specific call. Only used for transpiling\\n     * loader plugins, not for plain JS modules.\\n     * @param {String} text the text to execute/evaluate.\\n     */\\n    req.exec = function (text) {\\n        /*jslint evil: true */\\n        return eval(text);\\n    };\\n\\n    //Set up with config info.\\n    req(cfg);\\n}(this, (typeof setTimeout === 'undefined' ? undefined : setTimeout)));\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/worker/requirejs.str.txt\n// module id = 41\n// module chunks = 2","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"container\"},[(_vm.projectFiles.length > 0)?_c('div',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.newFilePath),expression:\"newFilePath\"}],domProps:{\"value\":(_vm.newFilePath)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.newFilePath=$event.target.value}}}),_vm._v(\" \"),_c('button',{on:{\"click\":function () { _vm.newFile({ path: _vm.newFilePath }) }}},[_vm._v(\"Add File\")]),_vm._v(\" \"),_c('button',{attrs:{\"disabled\":_vm.compiling},on:{\"click\":function () { _vm.compileFiles() }}},[_vm._v(\"Compile Files\")]),_vm._v(\" \"),(!_vm.iwindow && !_vm.compiling)?_c('button',{on:{\"click\":function () { _vm.openWindow() }}},[_vm._v(\"OpenWindow\")]):_vm._e(),_vm._v(\" \"),(_vm.iwindow)?_c('button',{on:{\"click\":function () { _vm.closeWindow() }}},[_vm._v(\"closeWindow\")]):_vm._e(),_vm._v(\" \"),(!_vm.iframer && !_vm.compiling)?_c('button',{on:{\"click\":function () { _vm.openiFrame() }}},[_vm._v(\"OpenIframe\")]):_vm._e(),_vm._v(\" \"),(_vm.iframer)?_c('button',{on:{\"click\":function () { _vm.closeiFrame() }}},[_vm._v(\"closeIframe\")]):_vm._e(),_vm._v(\" \"),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.compiling),expression:\"compiling\"}]},[_vm._v(\"Compiling\")]),_vm._v(\" \"),_c('div',[_c('input',{ref:\"demo-slider\",staticStyle:{\"width\":\"300px\"},attrs:{\"type\":\"range\",\"step\":\"0.1\"},on:{\"input\":function (evt) { _vm.updateSlider(evt.target.value) }}})]),_vm._v(\" \"),_c('draggable',{attrs:{\"options\":{group:'people'}},on:{\"start\":function($event){_vm.drag = true},\"end\":function($event){_vm.drag = false},\"change\":function () { _vm.compileFiles() }},model:{value:(_vm.projectFiles),callback:function ($$v) {_vm.projectFiles=$$v},expression:\"projectFiles\"}},_vm._l((_vm.projectFiles),function(pFile,pfKey){return _c('div',{key:pfKey},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(pFile.path),expression:\"pFile.path\"}],staticStyle:{\"font-size\":\"16px\",\"width\":\"300px\"},attrs:{\"disabled\":_vm.checkDisable(pFile.path)},domProps:{\"value\":(pFile.path)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(pFile, \"path\", $event.target.value)}}}),_vm._v(\" \"),_c('button',{on:{\"click\":function($event){_vm.setFile(pFile)}}},[_vm._v(\"Edit\")])])})),_vm._v(\" \"),(_vm.iframer)?_c('iframe',{ref:\"iframer\",attrs:{\"src\":_vm.iframer}}):_vm._e(),_vm._v(\" \"),_c('ACE',{attrs:{\"filepath\":_vm.current.file.path,\"theme\":\"chrome\",\"width\":\"100%\",\"height\":_vm.ace.height},on:{\"save\":function () { _vm.compileFiles() },\"input\":function (value) { _vm.isDirty = true; }},model:{value:(_vm.current.file.src),callback:function ($$v) {_vm.$set(_vm.current.file, \"src\", $$v)},expression:\"current.file.src\"}})],1):_c('div',[_vm._v(\"\\n    Loading......\\n  \")])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-23463c34\",\"hasScoped\":false,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/pages/editor/Editor.vue\n// module id = 42\n// module chunks = 2"],"sourceRoot":""}